 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB02.asm - Page 1 - 10/16/2022 23:3:55


       1/       0 :                     	page	0
       2/       0 :                     	cpu	z80
       3/       0 :                     ;;; 
       4/       0 :                     ;;; Universal Monitor for Zilog Z80
       5/       0 :                     ;;;   Copyright (C) 2019,2020,2021 Haruo Asano
       6/       0 :                     ;;;
       7/       0 :                     
       8/       0 :                     ;;; 2022.10.10 It was added functions by A.honda
       9/       0 :                     ;;; Rev.B02
      10/       0 :                     
      11/       0 :                     ;;; Constants
      12/       0 : =0DH                 CR	EQU	0DH
      13/       0 : =0AH                 LF	EQU	0AH
      14/       0 : =8H                  BS	EQU	08H
      15/       0 : =7FH                 DEL	EQU	7FH
      16/       0 : =20H                 BUFLEN	equ	32	
      17/       0 : =8H                  F_bitSize	equ	8
      18/       0 :                     
      19/       0 : =0H                  BACKDOOR = 0
      20/       0 :                     
      21/       0 :                     ;;;
      22/       0 :                     ;;; Memory switch
      23/       0 :                     ;;;
      24/       0 :                     
      25/       0 :                     ;	MEMORY ASIGN
      26/       0 : =0H                  ROM_B	equ	0000H	; ROM base address
      27/       0 : =8000H               RAM_B	equ	8000H	; RAM base address
      28/       0 : =4000H               RAMSIZ	EQU	4000H
      29/       0 : =0BFFFH              RAM_E	equ	RAM_B + RAMSIZ - 1 ; RAM END address
      30/       0 :                     
      31/       0 : =40H                 RBFSIZ	EQU	40H	; SIO recieve buffer size
      32/       0 :                     
      33/       0 : =100H                WORK_SIZE	equ	256		;monitor work area size
      34/       0 : =80H                 MSTACK_SIZE	equ	128
      35/       0 :                     
      36/       0 : =0BF00H              WORK_B	equ	RAM_E -	WORK_SIZE + 1	; work area BF00-BFFF
      37/       0 : =0BF00H              STACKM	equ	WORK_B			; monitor stack
      38/       0 : =0BE80H              STACK	equ	WORK_B - MSTACK_SIZE	; user stack
      39/       0 :                     
      40/       0 : =2000H               BASIC_TOP	equ	2000H
      41/       0 : =2000H               BASIC_CST	equ	2000H	; basic cold start
      42/       0 : =2003H               BASIC_WST	equ	2003H	; basic warm start
      43/       0 :                     
      44/       0 : =40H                 ENTRY	EQU	0040H		; Entry point
      45/       0 :                     ;
      46/       0 :                     ;	SIO REGISTER ADDRESS
      47/       0 : =0H                  PSIOAD	EQU	00H
      48/       0 : =1H                  PSIOAC	EQU	01H
      49/       0 : =2H                  PSIOBD	EQU	02H
      50/       0 : =3H                  PSIOBC	EQU	03H
      51/       0 :                     ;
      52/       0 :                     ;;; 
      53/       0 :                     ;;; ROM area
      54/       0 :                     ;;;
      55/       0 :                     start:
      56/       0 :                     
      57/       0 :                     	ORG	ROM_B	; (RST 00H)
      58/       0 :                     
      59/       0 :                     E_CSTART:
      60/       0 : F3                  	DI
      61/       1 : 31 00 BF            	LD	SP,STACKM	; monitor stask defines STACKM
      62/       4 : C3 8B 00            	JP	SINIT
      63/       7 :                     
      64/       7 : 00                  	db	0008H - $ dup(00H)
      65/       8 :                     ;	ORG	0008H	; (RST 08H)
      66/       8 : =>FALSE              	IF	BACKDOOR
      67/       8 :                     	JP	RST08H
      68/       8 : =>TRUE               	ELSE
      69/       8 : C3 B0 1F            	JP	CONOUT
      70/       B : [66]                 	ENDIF
      71/       B :                     
      72/       B : 00 00 00 00 00      	db	0010H - $ dup(00H)
      73/      10 :                     ;	ORG	0010H	; (RST 10H)
      74/      10 : =>FALSE              	IF	BACKDOOR
      75/      10 :                     	JP	RST10H
      76/      10 : =>TRUE               	ELSE
      77/      10 : C3 84 1F            	JP	CONIN
      78/      13 : [74]                 	ENDIF
      79/      13 :                     
      80/      13 : 00 00 00 00 00      	db	0018H - $ dup(00H)	; nop
      81/      18 :                     ;	ORG	0018H	; (RST 18H)
      82/      18 : =>FALSE              	IF	BACKDOOR
      83/      18 :                     	JP	RST18H
      84/      18 : =>TRUE               	ELSE
      85/      18 : C3 AA 1F            	JP	CONST
      86/      1B : [82]                 	ENDIF
      87/      1B :                     
      88/      1B : 00 00 00 00 00      	db	0020H - $ dup(00H)	; nop
      89/      20 :                     ;	ORG	0020H	; (RST 20H)
      90/      20 : =>FALSE              	IF	BACKDOOR
      91/      20 :                     	JP	RST20H
      92/      20 : =>TRUE               	ELSE
      93/      20 : C9                  	RET
      94/      21 : [90]                 	ENDIF
      95/      21 :                     
      96/      21 : 00 00 00 00 00 00   	db	0028H - $ dup(00H)	; nop
               27 : 00                
      97/      28 :                     ;	ORG	0028H	; (RST 28H)
      98/      28 : =>FALSE              	IF	BACKDOOR
      99/      28 :                     	RET
     100/      28 : =>TRUE               	ELSE
     101/      28 : C9                  	RET
     102/      29 : [98]                 	ENDIF
     103/      29 :                     
     104/      29 : 00 00 00 00 00 00   	db	0030H - $ dup(00H)	; nop
               2F : 00                
     105/      30 :                     ;	ORG	0030H
     106/      30 : =>FALSE              	IF	BACKDOOR
     107/      30 :                     	JP	RST30H
     108/      30 : =>TRUE               	ELSE
     109/      30 : C3 D1 18            	JP	RST30H_IN
     110/      33 : [106]                	ENDIF
     111/      33 :                     
     112/      33 : 00 00 00 00 00      	db	0038H - $ dup(00H)	; nop
     113/      38 :                     ;	ORG	0038H
     114/      38 : =>FALSE              	IF	BACKDOOR
     115/      38 :                     	JP	RST38H;
     116/      38 : =>TRUE               	ELSE
     117/      38 : C3 52 19            	JP	RST38H_IN
     118/      3B : [114]                	ENDIF
     119/      3B :                     
     120/      3B :                     	;;
     121/      3B :                     	;; Entry point
     122/      3B :                     	;;
     123/      3B :                     
     124/      3B : 00 00 00 00 00      	db	ENTRY - $ dup(00H)
     125/      40 :                     	;	ORG	ENTRY
     126/      40 :                     
     127/      40 :                     ;
     128/      40 :                     ;	INTERRUPT TABLE (40H)
     129/      40 :                     ;	ORG (($-1) AND 0FFF0H)+10H
     130/      40 : 00 00               ITABLE:	DW	0
     131/      42 : 00 00               	DW	0
     132/      44 : 00 00               	DW	0
     133/      46 : 00 00               	DW	0
     134/      48 : 50 00               	DW	IGNORE
     135/      4A : 50 00               	DW	IGNORE
     136/      4C : 53 00               	DW	INTRCV
     137/      4E : 50 00               	DW	IGNORE
     138/      50 :                     ;
     139/      50 :                     ;	RETURN FROM INTERRUPT
     140/      50 : FB                  IGNORE:	EI
     141/      51 : ED 4D               	RETI
     142/      53 :                     ;
     143/      53 :                     ;	INTERRUPT SERVICE ROUTINE
     144/      53 :                     ;	SIOA -> BUFFER
     145/      53 :                     ;
     146/      53 :                     ;	SAVE REGISTERS
     147/      53 : F5                  INTRCV:	PUSH	AF
     148/      54 : C5                  	PUSH	BC
     149/      55 : D5                  	PUSH	DE
     150/      56 : E5                  	PUSH	HL
     151/      57 :                     ;
     152/      57 :                     ;	RECEIVE DATA
     153/      57 : DB 00               	IN	A,(PSIOAD)
     154/      59 : 57                  	LD	D,A
     155/      5A :                     ;
     156/      5A :                     ;	CHECK BUFFER FULL
     157/      5A : 3A 00 BF            	LD	A,(RBFCNT)
     158/      5D : FE 40               	CP	RBFSIZ
     159/      5F : 28 15               	JR	Z,INTEXT
     160/      61 : 3C                  	INC	A
     161/      62 : 32 00 BF            	LD	(RBFCNT),A
     162/      65 :                     ;
     163/      65 :                     ;	WRITE DATA TO BUFFER
     164/      65 : 3A 02 BF            	LD	A,(RBFWTP)
     165/      68 : 4F                  	LD	C,A
     166/      69 : 06 00               	LD	B,00H
     167/      6B : 21 03 BF            	LD	HL,RECBUF
     168/      6E : 09                  	ADD	HL,BC
     169/      6F : 72                  	LD	(HL),D
     170/      70 : 3C                  	INC	A
     171/      71 : E6 3F               	AND	RBFSIZ-1
     172/      73 : 32 02 BF            	LD	(RBFWTP),A
     173/      76 :                     ;
     174/      76 :                     ;	RESTORE REGISTERS
     175/      76 : E1                  INTEXT:	POP	HL
     176/      77 : D1                  	POP	DE
     177/      78 : C1                  	POP	BC
     178/      79 : F1                  	POP	AF
     179/      7A :                     ;
     180/      7A :                     ;	RETURN FROM INTERRUPT
     181/      7A : FB                  	EI
     182/      7B : ED 4D               	RETI
     183/      7D :                     
     184/      7D :                     ;	SIOA COMMAND CHAIN
     185/      7D : 18                  SIOACD:	DB	18H
     186/      7E : 01 14               	DB	01H,14H
     187/      80 : 04 44               	DB	04H,44H
     188/      82 : 05 EA               	DB	05H,0EAH
     189/      84 : 03 C1               	DB	03H,0C1H
     190/      86 : =9H                  SIOACL	EQU	$-SIOACD
     191/      86 :                     ;
     192/      86 :                     ;	SIOB COMMAND CHAIN
     193/      86 : 18                  SIOBCD:	DB	18H
     194/      87 : 01 04               	DB	01H,04H
     195/      89 : 02                  	DB	02H
     196/      8A : 40                  	DB	ITABLE & 00FFH
     197/      8B : =5H                  SIOBCL	EQU	$-SIOBCD
     198/      8B :                     ;
     199/      8B :                     
     200/      8B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     201/      8B :                     ;
     202/      8B :                     ; Initialize SBCZ80 board 
     203/      8B :                     ;
     204/      8B :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     205/      8B :                     
     206/      8B : 21 00 80            SINIT:	LD	HL,RAM_B
     207/      8E : 11 00 80            	LD	DE,RAM_B
     208/      91 : 01 00 40            	LD	BC,RAMSIZ
     209/      94 : ED B0               	LDIR
     210/      96 :                     ;
     211/      96 :                     ;	RECEIVE BUFFER INITIALIZE
     212/      96 : AF                  	XOR	A
     213/      97 : 32 00 BF            	LD	(RBFCNT),A
     214/      9A : 32 01 BF            	LD	(RBFRDP),A
     215/      9D : 32 02 BF            	LD	(RBFWTP),A
     216/      A0 :                     ;
     217/      A0 :                     ;	SETUP INTERRUPT
     218/      A0 : ED 5E               	IM	2
     219/      A2 : 21 40 00            	LD	HL,ITABLE
     220/      A5 : 7C                  	LD	A,H
     221/      A6 : ED 47               	LD	I,A
     222/      A8 :                     ;
     223/      A8 :                     ;	SIO INITIALIZE
     224/      A8 : 21 7D 00            	LD	HL,SIOACD
     225/      AB : 0E 01               	LD	C,PSIOAC
     226/      AD : 06 09               	LD	B,SIOACL
     227/      AF : ED B3               	OTIR
     228/      B1 : 21 86 00            	LD	HL,SIOBCD
     229/      B4 : 0E 03               	LD	C,PSIOBC
     230/      B6 : 06 05               	LD	B,SIOBCL
     231/      B8 : ED B3               	OTIR
     232/      BA : FB                  	EI
     233/      BB :                     ;
     234/      BB :                     ;	START Monitor
     235/      BB :                     ;
     236/      BB : C3 BE 00            	JP	CSTART
     237/      BE :                     
     238/      BE : =>FALSE              	IF	BACKDOOR
     239/      BE :                     ;;;
     240/      BE :                     ;;; RST 08H Handler
     241/      BE :                     ;;;
     242/      BE :                     RST08H:
     243/      BE :                     
     244/      BE :                     	ld	(save_hl), hl	; save hl
     245/      BE :                     	ld	hl, (stealRST08)
     246/      BE :                     	jr	jmp_rst
     247/      BE :                     
     248/      BE :                     ;;;
     249/      BE :                     ;;; RST 10H Handler
     250/      BE :                     ;;;
     251/      BE :                     RST10H:
     252/      BE :                     
     253/      BE :                     	ld	(save_hl), hl	; save hl
     254/      BE :                     	ld	hl, (stealRST10)
     255/      BE :                     	jr	jmp_rst
     256/      BE :                     
     257/      BE :                     ;;;
     258/      BE :                     ;;; RST 18H Handler
     259/      BE :                     ;;;
     260/      BE :                     RST18H:
     261/      BE :                     
     262/      BE :                     	ld	(save_hl), hl	; save hl
     263/      BE :                     	ld	hl, (stealRST18)
     264/      BE :                     	jr	jmp_rst
     265/      BE :                     
     266/      BE :                     ;;;
     267/      BE :                     ;;; RST 20H Handler
     268/      BE :                     ;;;
     269/      BE :                     RST20H:
     270/      BE :                     
     271/      BE :                     	ld	(save_hl), hl	; save hl
     272/      BE :                     	ld	hl, (stealRST20)
     273/      BE :                     	jr	jmp_rst
     274/      BE :                     
     275/      BE :                     ;;;
     276/      BE :                     ;;; RST 28H Handler
     277/      BE :                     ;;;
     278/      BE :                     RST28H:
     279/      BE :                     
     280/      BE :                     	ld	(save_hl), hl	; save hl
     281/      BE :                     	ld	hl, (stealRST28)
     282/      BE :                     	jr	jmp_rst
     283/      BE :                     
     284/      BE :                     ;;;
     285/      BE :                     ;;; RST 30H Handler
     286/      BE :                     ;;;
     287/      BE :                     RST30H:
     288/      BE :                     
     289/      BE :                     	ld	(save_hl), hl	; save hl
     290/      BE :                     	ld	hl, (stealRST30)
     291/      BE :                     	jr	jmp_rst
     292/      BE :                     
     293/      BE :                     ;;;
     294/      BE :                     ;;; RST 38H Handler
     295/      BE :                     ;;;
     296/      BE :                     RST38H:
     297/      BE :                     
     298/      BE :                     	ld	(save_hl), hl	; save hl
     299/      BE :                     	ld	hl, (stealRST38)
     300/      BE :                     jmp_rst:
     301/      BE :                     	push	hl		; set jump address
     302/      BE :                     	ld	hl, (save_hl)	; restore hl
     303/      BE :                     RST20H_IN:
     304/      BE :                     RST28H_IN:
     305/      BE :                     	ret			; jump (stealRST38)
     306/      BE : [238]                	ENDIF
     307/      BE :                     
     308/      BE :                     ;;;
     309/      BE :                     ;;; Universal Monitor Z80 Cold start
     310/      BE :                     ;;;
     311/      BE :                     
     312/      BE :                     CSTART:
     313/      BE : 31 00 BF            	LD	SP,STACKM	; monitor stask defines STACKM
     314/      C1 :                     
     315/      C1 : 21 00 80            	LD	HL,RAM_B
     316/      C4 : 22 63 BF            	LD	(DSADDR),HL
     317/      C7 : 22 6A BF            	LD	(SADDR),HL
     318/      CA : 22 68 BF            	LD	(GADDR),HL
     319/      CD : 3E 49               	LD	A,'I'
     320/      CF : 32 6C BF            	LD	(HEXMOD),A
     321/      D2 :                     	
     322/      D2 : =>FALSE              	IF	BACKDOOR
     323/      D2 :                     	; init back door RST XXH entory point
     324/      D2 :                     	ld	hl, CONOUT		; RST 08H : CONOUT
     325/      D2 :                     	ld	(stealRST08), hl
     326/      D2 :                     	ld	hl, CONIN
     327/      D2 :                     	ld	(stealRST10), hl	; RST 10H : CONIN
     328/      D2 :                     	ld	hl, CONST
     329/      D2 :                     	ld	(stealRST18), hl	; RST 18H : CONST
     330/      D2 :                     	ld	hl, RST20H_IN
     331/      D2 :                     	ld	(stealRST20), hl
     332/      D2 :                     	ld	hl, RST28H_IN
     333/      D2 :                     	ld	(stealRST28), hl
     334/      D2 :                     	ld	hl, RST30H_IN
     335/      D2 :                     	ld	(stealRST30), hl
     336/      D2 :                     	ld	hl, RST38H_IN
     337/      D2 :                     	ld	(stealRST38), hl
     338/      D2 : [322]                	ENDIF
     339/      D2 :                     
     340/      D2 :                     	;; Initialize register value
     341/      D2 : AF                  	XOR	A
     342/      D3 : 21 6F BF            	LD	HL,REG_B
     343/      D6 : 06 1A               	LD	B,REG_E-REG_B
     344/      D8 :                     IR0:
     345/      D8 : 77                  	LD	(HL),A
     346/      D9 : 23                  	INC	HL
     347/      DA : 10 FC               	DJNZ	IR0
     348/      DC :                     
     349/      DC : 21 80 BE            	LD	HL,STACK		; user stack define STACK
     350/      DF : 22 83 BF            	LD	(REGSP),HL
     351/      E2 : 21 00 80            	ld	hl, RAM_B
     352/      E5 : 22 85 BF            	ld	(REGPC), HL		; set program counter
     353/      E8 :                     
     354/      E8 : 06 08               	ld	b, F_bitSize
     355/      EA : 3E 2E               	ld	a, '.'
     356/      EC : 21 AE BF            	ld	hl, F_bit
     357/      EF :                     ir00:
     358/      EF : 77                  	ld	(hl), a
     359/      F0 : 23                  	inc	hl
     360/      F1 : 10 FC               	djnz	ir00		; init F_bit string
     361/      F3 : AF                  	xor	a
     362/      F4 : 77                  	ld	(hl), a		; delimiter
     363/      F5 :                     ;
     364/      F5 :                     ;	LD	B,100
     365/      F5 :                     ;TL:	
     366/      F5 :                     ;	XOR	A
     367/      F5 :                     ;	CALL	CONOUT
     368/      F5 :                     ;	DJNZ	TL
     369/      F5 :                     ;
     370/      F5 :                     	
     371/      F5 :                     ; init dbg work area
     372/      F5 :                     
     373/      F5 : 06 14               	LD	B, dbg_wend - dbg_wtop
     374/      F7 : 21 9A BF            	ld	hl,dbg_wtop	
     375/      FA : AF                  	XOR	A
     376/      FB :                     
     377/      FB :                     dbg_wini:
     378/      FB : 77                  	ld	(hl), a
     379/      FC : 23                  	inc	hl
     380/      FD : 10 FC               	DJNZ	dbg_wini
     381/      FF :                     
     382/      FF : 3E 49               	ld	a, 'I'
     383/     101 : 32 94 BF            	ld	(TM_mode), a	; default call_in mode
     384/     104 : 3E 4E               	ld	a, 'N'
     385/     106 : 32 93 BF            	ld	(TP_mode), a	; default display reg mode
     386/     109 : 2E 00               	ld	l, 0
     387/     10B : 65                  	ld	h, l
     388/     10C : 22 95 BF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     389/     10F : AF                  	xor	a
     390/     110 : 32 99 BF            	ld	(fever_t), a	; clear flag trace forever
     391/     113 :                     	; init bp, tp, gstop address & opcode
     392/     113 : 21 00 80            	ld	hl, RAM_B
     393/     116 : 22 9C BF            	ld	(tpt1_adr), hl
     394/     119 : 22 A0 BF            	ld	(tpt2_adr), hl
     395/     11C : 22 A4 BF            	ld	(bpt1_adr), hl
     396/     11F : 22 A8 BF            	ld	(bpt2_adr), hl
     397/     122 : 22 AC BF            	ld	(tmpb_adr), hl
     398/     125 : 7E                  	ld	a, (hl)
     399/     126 : 32 9B BF            	ld	(tpt1_op), a
     400/     129 : 32 9F BF            	ld	(tpt2_op), a
     401/     12C : 32 A3 BF            	ld	(bpt1_op), a
     402/     12F : 32 A7 BF            	ld	(bpt2_op), a
     403/     132 : 32 AB BF            	ld	(tmpb_op), a
     404/     135 :                     	
     405/     135 :                     ;; Opening message
     406/     135 :                     
     407/     135 : 21 F0 1C            	LD	HL,OPNMSG
     408/     138 : CD C5 17            	CALL	STROUT
     409/     13B :                     ;	EI
     410/     13B :                     
     411/     13B :                     WSTART:
     412/     13B : 21 2D 1D            	LD	HL,PROMPT
     413/     13E : CD C5 17            	CALL	STROUT
     414/     141 : CD 25 18            	CALL	GETLIN
     415/     144 : CD 7F 18            	CALL	SKIPSP
     416/     147 :                     ;	CALL	UPPER
     417/     147 : B7                  	OR	A
     418/     148 : 28 F1               	JR	Z, WSTART
     419/     14A :                     
     420/     14A : FE 44               	CP	'D'
     421/     14C : CA DD 06            	JP	Z, DUMP
     422/     14F : FE 47               	CP	'G'
     423/     151 : CA C4 13            	JP	Z, GO
     424/     154 : FE 53               	CP	'S'
     425/     156 : CA 8B 14            	JP	Z, SETM
     426/     159 :                     
     427/     159 : FE 4C               	CP	'L'
     428/     15B : CA 01 15            	JP	Z, LOADH
     429/     15E : FE 50               	CP	'P'
     430/     160 : CA DB 15            	JP	Z, SAVEH
     431/     163 :                     
     432/     163 : FE 52               	CP	'R'
     433/     165 : CA B3 16            	JP	Z, REG
     434/     168 :                     
     435/     168 : FE 23               	cp	'#'
     436/     16A : CA 8B 01            	jp	Z, Launcher
     437/     16D :                     
     438/     16D : FE 42               	cp	'B'
     439/     16F : CA 9F 02            	jp	z, brk_cmd	; break point command
     440/     172 :                     	
     441/     172 : FE 54               	cp	'T'
     442/     174 : CA 54 03            	jp	z, trace_cmd	; trace point command
     443/     177 :                     
     444/     177 : FE 3F               	cp	'?'
     445/     179 : 28 08               	jr	z, command_hlp	; command help message
     446/     17B :                     
     447/     17B :                     ERR:
     448/     17B : 21 4A 1D            	LD	HL,ERRMSG
     449/     17E : CD C5 17            	CALL	STROUT
     450/     181 : 18 B8               	JR	WSTART
     451/     183 :                     
     452/     183 :                     ;;
     453/     183 :                     ;; command help
     454/     183 :                     ;;
     455/     183 :                     command_hlp:
     456/     183 :                     
     457/     183 : 21 45 1B            	LD	HL, cmd_hlp
     458/     186 : CD C5 17            	CALL	STROUT
     459/     189 : 18 B0               	JR	WSTART
     460/     18B :                     
     461/     18B :                     ;;
     462/     18B :                     ;; Launch appended program
     463/     18B :                     ;;
     464/     18B :                     Launcher:
     465/     18B : 23                  	INC	HL
     466/     18C : CD 7F 18            	CALL	SKIPSP		; A <- next char
     467/     18F :                     ;	CALL	UPPER
     468/     18F : B7                  	OR	A
     469/     190 : 28 E9               	JR	Z,ERR
     470/     192 :                     
     471/     192 :                     	; check L or number
     472/     192 :                     	
     473/     192 : FE 4C               	cp	'L'
     474/     194 : 28 25               	JR	Z,LST_PRG	; list append program
     475/     196 :                     
     476/     196 :                     	; check number
     477/     196 :                     
     478/     196 : CD 33 02            	call	GET_NUM		; return BC : number
     479/     199 : 38 E0               	JR	C, ERR
     480/     19B :                     
     481/     19B :                     	; check number
     482/     19B : 79                  	LD	A, C
     483/     19C : FE 11               	CP	(lanch1 - ApendTBL)/2 +1	; a < 17 ?
     484/     19E : D2 7B 01            	JP	NC, ERR
     485/     1A1 : B7                  	OR	A				; check '0'
     486/     1A2 : CA 7B 01            	JP	Z, ERR
     487/     1A5 :                     
     488/     1A5 :                     	; A <- append program No.
     489/     1A5 :                     
     490/     1A5 : 3D                  	DEC	A	; 0 <= A <= 0FH
     491/     1A6 : 17                  	RLA		; A = A * 2
     492/     1A7 : 16 00               	LD	D, 0
     493/     1A9 : 5F                  	LD	E, A
     494/     1AA : 21 D9 01            	LD	HL, ApendTBL
     495/     1AD : 19                  	ADD	HL, DE	; get lanch address point
     496/     1AE : 5E                  	LD	E, (HL)
     497/     1AF : 23                  	INC	HL
     498/     1B0 : 56                  	LD	D, (HL)	; DE : JUMP POINT
     499/     1B1 :                     
     500/     1B1 :                     	; Jump to append program
     501/     1B1 :                     	
     502/     1B1 : EB                  	EX	DE, HL
     503/     1B2 : 5E                  	LD	E, (HL)
     504/     1B3 : 23                  	INC	HL
     505/     1B4 : 56                  	LD	D, (HL)	; DE : jump address
     506/     1B5 : 7A                  	LD	A, D
     507/     1B6 : B3                  	OR	E	; address check
     508/     1B7 : 28 C2               	JR	Z,ERR	; jump address NULL
     509/     1B9 : EB                  	EX	DE, HL
     510/     1BA : E9                  	JP	(HL)	; lanch append program
     511/     1BB :                     	
     512/     1BB :                     	; List out append program
     513/     1BB :                     LST_PRG:
     514/     1BB :                     	; get address to DE
     515/     1BB : 21 D9 01            	LD	HL, ApendTBL
     516/     1BE :                     
     517/     1BE :                     LST_PRG1:
     518/     1BE : 5E                  	LD	E, (HL)
     519/     1BF : 23                  	INC	HL
     520/     1C0 : 56                  	LD	D, (HL)
     521/     1C1 : 23                  	INC	HL
     522/     1C2 :                     
     523/     1C2 : D5                  	PUSH	DE
     524/     1C3 : DD E1               	POP	IX	; IX <-DE
     525/     1C5 : DD 7E 00            	LD	A, (IX+0)
     526/     1C8 : DD B6 01            	OR	(IX+1)
     527/     1CB : 28 09               	JR	Z, LST_END
     528/     1CD : 13                  	INC	DE
     529/     1CE : 13                  	INC	DE	; get string address
     530/     1CF :                     	
     531/     1CF : EB                  	EX	DE, HL
     532/     1D0 : CD C5 17            	CALL	STROUT
     533/     1D3 : EB                  	EX	DE, HL
     534/     1D4 : 18 E8               	JR	LST_PRG1
     535/     1D6 :                     
     536/     1D6 :                     LST_END:
     537/     1D6 : C3 3B 01            	JP	WSTART
     538/     1D9 :                     	
     539/     1D9 :                     ; Append program launch table
     540/     1D9 :                     ;
     541/     1D9 :                     ApendTBL:
     542/     1D9 : F9 01               	dw	lanch1
     543/     1DB : 15 02               	dw	lanch2
     544/     1DD : 31 02               	dw	lanch3
     545/     1DF : 31 02               	dw	lanch4
     546/     1E1 : 31 02               	dw	lanch5
     547/     1E3 : 31 02               	dw	lanch6
     548/     1E5 : 31 02               	dw	lanch7
     549/     1E7 : 31 02               	dw	lanch8
     550/     1E9 : 31 02               	dw	lanch9
     551/     1EB : 31 02               	dw	lanch10
     552/     1ED : 31 02               	dw	lanch11
     553/     1EF : 31 02               	dw	lanch12
     554/     1F1 : 31 02               	dw	lanch13
     555/     1F3 : 31 02               	dw	lanch14
     556/     1F5 : 31 02               	dw	lanch15
     557/     1F7 : 31 02               	dw	lanch16
     558/     1F9 :                     	
     559/     1F9 :                     lanch1:
     560/     1F9 : 00 20               	dw	BASIC_CST
     561/     1FB : 31 2E 20 42 41 53   	DB	"1. BASIC4.7b Cold Start",CR,LF,00H
              201 : 49 43 34 2E 37 62 
              207 : 20 43 6F 6C 64 20 
              20D : 53 74 61 72 74 0D 
              213 : 0A 00             
     562/     215 :                     lanch2:
     563/     215 : 03 20               	dw	BASIC_WST
     564/     217 : 32 2E 20 42 41 53   	DB	"2. BASIC4.7b Warm Start",CR,LF,00H
              21D : 49 43 34 2E 37 62 
              223 : 20 57 61 72 6D 20 
              229 : 53 74 61 72 74 0D 
              22F : 0A 00             
     565/     231 :                     
     566/     231 :                     lanch3:
     567/     231 :                     lanch4:
     568/     231 :                     lanch5:
     569/     231 :                     lanch6:
     570/     231 :                     lanch7:
     571/     231 :                     lanch8:
     572/     231 :                     lanch9:
     573/     231 :                     lanch10:
     574/     231 :                     lanch11:
     575/     231 :                     lanch12:
     576/     231 :                     lanch13:
     577/     231 :                     lanch14:
     578/     231 :                     lanch15:
     579/     231 :                     lanch16:
     580/     231 : 00 00               	dw	0
     581/     233 :                     
     582/     233 :                     	; get number
     583/     233 :                     	; input HL : string buffer
     584/     233 :                     	;
     585/     233 :                     	; Return
     586/     233 :                     	; CF =1 : Error
     587/     233 :                     	; BC: Calculation result
     588/     233 :                     
     589/     233 :                     GET_NUM:
     590/     233 : AF                  	XOR	A		; Initialize C
     591/     234 : 47                  	LD	B, A
     592/     235 : 4F                  	LD	C, A		; clear BC
     593/     236 :                     	
     594/     236 :                     GET_NUM0:
     595/     236 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     596/     239 :                     ;	CALL	UPPER
     597/     239 : B7                  	OR	A
     598/     23A : C8                  	RET	Z		; ZF=1, ok! buffer end
     599/     23B :                     
     600/     23B : CD 51 02            	CALL	GET_BI
     601/     23E : D8                  	RET	C
     602/     23F :                     
     603/     23F : F5                  	push	af
     604/     240 : 08                  	EX	AF, AF'		;'AF <> AF: save A
     605/     241 : F1                  	pop	af
     606/     242 : CD 60 02            	CALL	MUL_10		; BC = BC * 10
     607/     245 : D8                  	RET	C		; overflow error
     608/     246 : 08                  	EX	AF, AF'		;'AF <> AF: restor A
     609/     247 :                     
     610/     247 : 16 00               	ld	d, 0
     611/     249 : 5F                  	ld	e, a
     612/     24A : CD 77 02            	CALL	BC_PLUS_DE	; BC = BC + A
     613/     24D : D8                  	RET	C		; overflow error
     614/     24E :                     				; result: BC = BC * 10 + A
     615/     24E : 23                  	INC	HL
     616/     24F : 18 E5               	JR	GET_NUM0
     617/     251 :                     ;
     618/     251 :                     ; Make binary to A
     619/     251 :                     ; ERROR if CF=1
     620/     251 :                     ;
     621/     251 :                     GET_BI:
     622/     251 : B7                  	OR	A
     623/     252 : 28 0A               	JR	Z, UP_BI
     624/     254 : FE 30               	CP	'0'
     625/     256 : D8                  	RET	C
     626/     257 :                     	
     627/     257 : FE 3A               	CP	'9'+1	; ASCII':'
     628/     259 : 30 03               	JR	NC, UP_BI
     629/     25B : D6 30               	SUB	'0'	; Make binary to A
     630/     25D : C9                  	RET
     631/     25E :                     
     632/     25E :                     UP_BI:
     633/     25E : 37                  	SCF		; Set CF
     634/     25F : C9                  	RET
     635/     260 :                     
     636/     260 :                     ;
     637/     260 :                     ; multiply by 10
     638/     260 :                     ; BC = BC * 10
     639/     260 :                     MUL_10:
     640/     260 : C5                  	push	bc
     641/     261 : CB 21               	SLA	C
     642/     263 : CB 10               	RL	B		; 2BC
     643/     265 : CB 21               	SLA	C
     644/     267 : CB 10               	RL	B		; 4BC
     645/     269 : CB 21               	SLA	C
     646/     26B : CB 10               	RL	B		; 8BC
     647/     26D : D1                  	pop	de		; de = bc
     648/     26E : D8                  	ret	c
     649/     26F : CD 77 02            	CALL	BC_PLUS_DE	; 9BC
     650/     272 : D8                  	ret	c
     651/     273 : CD 77 02            	CALL	BC_PLUS_DE	; 10BC
     652/     276 : C9                  	RET			; result : BC = BC * 10
     653/     277 :                     ;
     654/     277 :                     ; BC = BC + DE
     655/     277 :                     BC_PLUS_DE:
     656/     277 : E5                  	push	hl
     657/     278 :                     
     658/     278 : D5                  	push	de
     659/     279 : E1                  	pop	hl
     660/     27A :                     
     661/     27A : 09                  	add	hl, bc
     662/     27B :                     
     663/     27B : E5                  	push	hl
     664/     27C : C1                  	pop	bc
     665/     27D :                     
     666/     27D : E1                  	pop	hl
     667/     27E : C9                  	RET
     668/     27F :                     
     669/     27F :                     ;
     670/     27F :                     ; list break point
     671/     27F :                     ;
     672/     27F :                     b_list:
     673/     27F : 3A A2 BF            	ld	a, (bpt1_f)
     674/     282 : B7                  	or	a
     675/     283 : 28 08               	jr	z, b_list1
     676/     285 :                     
     677/     285 : 2A A4 BF            	ld	hl, (bpt1_adr)
     678/     288 : 3E 31               	ld	a, '1'
     679/     28A : CD 3A 03            	call	b_msg_out
     680/     28D :                     
     681/     28D :                     b_list1:
     682/     28D : 3A A6 BF            	ld	a, (bpt2_f)
     683/     290 : B7                  	or	a
     684/     291 : CA 3B 01            	jp	z, WSTART
     685/     294 :                     
     686/     294 : 2A A8 BF            	ld	hl, (bpt2_adr)
     687/     297 : 3E 32               	ld	a, '2'
     688/     299 : CD 3A 03            	call	b_msg_out
     689/     29C : C3 3B 01            	JP	WSTART
     690/     29F :                     
     691/     29F :                     
     692/     29F :                     ;;; 
     693/     29F :                     ;;; break point command
     694/     29F :                     ;;; 
     695/     29F :                     brk_cmd:
     696/     29F : 23                  	INC	HL
     697/     2A0 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     698/     2A3 :                     ;	CALL	UPPER
     699/     2A3 : B7                  	OR	A
     700/     2A4 : 28 D9               	JR	Z,b_list	; only type "B"
     701/     2A6 :                     
     702/     2A6 : 01 A2 BF            	ld	bc, bpt1_f
     703/     2A9 : FE 31               	cp	'1'
     704/     2AB : 28 0E               	jr	z, set_bp1
     705/     2AD :                     
     706/     2AD : 01 A6 BF            	ld	bc, bpt2_f
     707/     2B0 : FE 32               	cp	'2'
     708/     2B2 : 28 07               	jr	z, set_bp1
     709/     2B4 :                     
     710/     2B4 : FE 43               	cp	'C'	;clear?
     711/     2B6 : 28 3E               	jr	z, bp_clr
     712/     2B8 : C3 7B 01            	jp	ERR
     713/     2BB :                     
     714/     2BB :                     set_bp1:
     715/     2BB : 08                  	EX	AF, AF'
     716/     2BC :                     
     717/     2BC : 23                  	INC	HL
     718/     2BD : CD 7F 18            	CALL	SKIPSP		; A <- next char
     719/     2C0 :                     ;	CALL	UPPER
     720/     2C0 : B7                  	OR	A
     721/     2C1 : 28 5A               	JR	Z, bp_LOT 	;; No address input -> list out
     722/     2C3 : FE 2C               	cp	','
     723/     2C5 : C2 7B 01            	jp	nz, ERR
     724/     2C8 :                     
     725/     2C8 : 23                  	INC	HL
     726/     2C9 : CD 7F 18            	CALL	SKIPSP
     727/     2CC : C5                  	push	bc
     728/     2CD : CD 8F 18            	CALL	RDHEX		; 1st arg.
     729/     2D0 : E1                  	pop	hl		; hl <- bc
     730/     2D1 : DA 7B 01            	jp	c, ERR
     731/     2D4 :                     
     732/     2D4 : CD DD 02            	call	setbpadr
     733/     2D7 : DA 7B 01            	jp	c, ERR
     734/     2DA : C3 3B 01            	JP	WSTART
     735/     2DD :                     
     736/     2DD :                     
     737/     2DD :                     ; hl : point of bp flag( bpt1_f or bpt2_f)
     738/     2DD :                     ; de : break point address
     739/     2DD :                     
     740/     2DD :                     ; check ram area, and set berak point
     741/     2DD :                     ; 
     742/     2DD :                     setbpadr:
     743/     2DD : 7A                  	ld	a, d
     744/     2DE : FE 80               	cp	RAM_B >> 8		; a - 80H
     745/     2E0 : DA F4 02            	jp	c, chkERR		; No RAM area
     746/     2E3 : FE C0               	cp	(RAM_E + 1)  >> 8	; a - 0C0H
     747/     2E5 : D2 F4 02            	jp	nc, chkERR		; No RAM area
     748/     2E8 : 3E 01               	ld	a,1
     749/     2EA : 77                  	ld	(hl), a	; set flag
     750/     2EB : 23                  	inc	hl
     751/     2EC : 1A                  	ld	a, (de)		; get opcode
     752/     2ED : 77                  	ld	(hl), a		; save opcode
     753/     2EE : 23                  	inc	hl
     754/     2EF : 73                  	ld	(hl), e ; set break point low address
     755/     2F0 : 23                  	inc	hl
     756/     2F1 : 72                  	ld	(hl), d ; set break point high address
     757/     2F2 : B7                  	or	a	; reset carry
     758/     2F3 : C9                  	ret
     759/     2F4 :                     
     760/     2F4 :                     chkERR:
     761/     2F4 : 37                  	scf	;set carry
     762/     2F5 : C9                  	ret
     763/     2F6 :                     
     764/     2F6 :                     ; clear break point
     765/     2F6 :                     
     766/     2F6 :                     bp_clr:
     767/     2F6 : 23                  	INC	HL
     768/     2F7 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     769/     2FA :                     ;	CALL	UPPER
     770/     2FA : B7                  	OR	A
     771/     2FB : 28 14               	JR	Z,b_aclr	; all clear
     772/     2FD :                     
     773/     2FD : 01 A2 BF            	ld	bc, bpt1_f
     774/     300 : FE 31               	cp	'1'
     775/     302 : 28 08               	jr	z, bp_clr1
     776/     304 :                     
     777/     304 : 01 A6 BF            	ld	bc, bpt2_f
     778/     307 : FE 32               	cp	'2'
     779/     309 : C2 7B 01            	jp	nz, ERR
     780/     30C :                     
     781/     30C :                     bp_clr1:
     782/     30C : AF                  	xor	a
     783/     30D : 02                  	ld	(bc), a
     784/     30E : C3 3B 01            	JP	WSTART
     785/     311 :                     
     786/     311 :                     b_aclr:
     787/     311 : AF                  	xor	a
     788/     312 : 01 A2 BF            	ld	bc, bpt1_f
     789/     315 : 02                  	ld	(bc), a
     790/     316 : 01 A6 BF            	ld	bc, bpt2_f
     791/     319 : 02                  	ld	(bc), a
     792/     31A : C3 3B 01            	JP	WSTART
     793/     31D :                     
     794/     31D :                     ; when no address input. list out BP
     795/     31D :                     ;
     796/     31D :                     ; bc : break pointer buffer offset
     797/     31D :                     bp_LOT:
     798/     31D : 0A                  	ld	a, (bc)		; set break point?
     799/     31E : B7                  	or	a
     800/     31F : CA 3B 01            	jp	z, WSTART	; no break point setting
     801/     322 :                     
     802/     322 : 08                  	EX	AF, AF'
     803/     323 : 2A A4 BF            	ld	hl, (bpt1_adr)
     804/     326 : FE 31               	cp	'1'
     805/     328 : 28 03               	jr	z, l_b2
     806/     32A : 2A A8 BF            	ld	hl, (bpt2_adr)
     807/     32D :                     l_b2:
     808/     32D : CD 3A 03            	call	b_msg_out
     809/     330 : C3 3B 01            	JP	WSTART
     810/     333 :                     
     811/     333 : 42 50 28 00         bp_msg1:	db	"BP(",00H
     812/     337 : 29 3A 00            bp_msg2:	db	"):",00H
     813/     33A :                     
     814/     33A :                     b_msg_out:
     815/     33A : E5                  	push	hl
     816/     33B : F5                  	push	af
     817/     33C : 21 33 03            	ld	hl, bp_msg1
     818/     33F : CD C5 17            	call	STROUT
     819/     342 : F1                  	pop	af
     820/     343 : CD B0 1F            	call	CONOUT
     821/     346 : 21 37 03            	ld	hl, bp_msg2
     822/     349 : CD C5 17            	call	STROUT
     823/     34C : E1                  	pop	hl
     824/     34D : CD CE 17            	call	HEXOUT4
     825/     350 : CD 0E 18            	call	CRLF	
     826/     353 : C9                  	ret
     827/     354 :                     
     828/     354 :                     ;;; 
     829/     354 :                     ;;; trace command
     830/     354 :                     ;;; 
     831/     354 :                     trace_cmd:
     832/     354 :                     
     833/     354 :                     ; T[address][,step数]
     834/     354 :                     ; TP[ON | OFF]
     835/     354 :                     ; TM[I | S]
     836/     354 :                     
     837/     354 :                     ; init steps
     838/     354 : E5                  	push	hl
     839/     355 : 2E 00               	ld	l, 0
     840/     357 : 26 00               	ld	h, 0
     841/     359 : 22 95 BF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     842/     35C : 2A 85 BF            	ld	hl,(REGPC)
     843/     35F : 22 97 BF            	ld	(tmpT), hl	; init temp address
     844/     362 : AF                  	xor	a
     845/     363 : 32 99 BF            	ld	(fever_t), a	; clear flag trace forever
     846/     366 :                     
     847/     366 : E1                  	pop	hl
     848/     367 : 23                  	inc	hl
     849/     368 : CD 7F 18            	CALL	SKIPSP
     850/     36B : CD 8F 18            	CALL	RDHEX		; 1st arg.
     851/     36E : D2 1A 04            	jp	nc, tadr_chk
     852/     371 : CD 7F 18            	CALL	SKIPSP
     853/     374 : 7E                  	ld	a, (hl)
     854/     375 : B7                  	or	a
     855/     376 : CA 43 04            	Jp	z, t_op1	; only 1 step trace, check opcode
     856/     379 : FE 2C               	cp	','
     857/     37B : CA 2B 04            	jp	z, stp_chk	; steps check
     858/     37E :                     
     859/     37E :                     ;	CALL	UPPER
     860/     37E : FE 50               	cp	'P'
     861/     380 : 28 4E               	jr	z, tp_cmd
     862/     382 : FE 4D               	cp	'M'
     863/     384 : C2 7B 01            	jp	nz, ERR
     864/     387 :                     	
     865/     387 :                     	; tm_cmd
     866/     387 :                     	
     867/     387 : 23                  	inc	hl
     868/     388 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     869/     38B :                     ;	CALL	UPPER
     870/     38B :                     dip_TM:
     871/     38B : 21 C2 03            	ld	hl, tm_msg_i
     872/     38E : FE 49               	cp	'I'
     873/     390 : 28 10               	jr	z, set_TM
     874/     392 : 21 C8 03            	ld	hl, tm_msg_s
     875/     395 : FE 53               	cp	'S'
     876/     397 : 28 09               	jr	z, set_TM
     877/     399 : B7                  	or	a
     878/     39A : C2 7B 01            	jp	nz, ERR
     879/     39D :                     
     880/     39D :                     ;display T mode
     881/     39D : 3A 94 BF            	ld	a, (TM_mode)
     882/     3A0 : 18 E9               	jr	dip_TM
     883/     3A2 :                     
     884/     3A2 :                     ;set TM mode and display
     885/     3A2 :                     set_TM:
     886/     3A2 : 32 94 BF            	ld	(TM_mode),a
     887/     3A5 : E5                  	push	hl
     888/     3A6 : 21 B3 03            	ld	hl, tm_msg_0
     889/     3A9 : CD C5 17            	call	STROUT
     890/     3AC : E1                  	pop	hl
     891/     3AD : CD C5 17            	call	STROUT
     892/     3B0 : C3 3B 01            	jp	WSTART
     893/     3B3 :                     
     894/     3B3 :                     tm_msg_0:
     895/     3B3 : 54 4D 20 6D 6F 64   	db	"TM mode:<CALL ", 00h
              3B9 : 65 3A 3C 43 41 4C 
              3BF : 4C 20 00          
     896/     3C2 :                     tm_msg_i:
     897/     3C2 : 49 4E 3E 0D 0A 00   	db	"IN>", CR, LF, 00h
     898/     3C8 :                     tm_msg_s:
     899/     3C8 : 53 4B 49 50 3E 0D   	db	"SKIP>", CR, LF, 00h
              3CE : 0A 00             
     900/     3D0 :                     	
     901/     3D0 :                     	
     902/     3D0 :                     	; tp_cmd
     903/     3D0 :                     tp_cmd:	
     904/     3D0 : 23                  	inc	hl
     905/     3D1 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     906/     3D4 :                     ;	CALL	UPPER
     907/     3D4 : B7                  	or	a
     908/     3D5 : 20 05               	jr	nz, tp_n1
     909/     3D7 : 3A 93 BF            	ld	a, (TP_mode)
     910/     3DA : 18 09               	jr	tp_n2
     911/     3DC :                     	
     912/     3DC :                     tp_n1:
     913/     3DC : FE 4F               	cp	'O'
     914/     3DE : C2 7B 01            	jp	nz, ERR
     915/     3E1 : 23                  	inc	hl
     916/     3E2 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     917/     3E5 :                     ;	CALL	UPPER
     918/     3E5 :                     
     919/     3E5 :                     tp_n2:
     920/     3E5 : 21 0F 04            	ld	hl, tp_msg_on
     921/     3E8 : FE 4E               	cp	'N'
     922/     3EA : 28 08               	jr	z, tp_md_on
     923/     3EC :                     
     924/     3EC : 21 14 04            	ld	hl, tp_msg_off
     925/     3EF : FE 46               	cp	'F'
     926/     3F1 : C2 7B 01            	jp	nz, ERR
     927/     3F4 :                     
     928/     3F4 :                     tp_md_on:
     929/     3F4 :                     	; set trace mode and display mode
     930/     3F4 : 32 93 BF            	ld	(TP_mode), a
     931/     3F7 : E5                  	push	hl
     932/     3F8 : 21 05 04            	ld	hl, tp_msg_0
     933/     3FB : CD C5 17            	call	STROUT
     934/     3FE : E1                  	pop	hl
     935/     3FF : CD C5 17            	call	STROUT
     936/     402 : C3 3B 01            	jp	WSTART
     937/     405 :                     	
     938/     405 :                     tp_msg_0:
     939/     405 : 54 50 20 6D 6F 64   	db	"TP mode: ", 00h
              40B : 65 3A 20 00       
     940/     40F :                     tp_msg_on:
     941/     40F : 4F 4E 0D 0A 00      	db	"ON", CR, LF, 00h
     942/     414 :                     tp_msg_off:
     943/     414 : 4F 46 46 0D 0A 00   	db	"OFF", CR, LF, 00h
     944/     41A :                     
     945/     41A :                     tadr_chk:
     946/     41A : ED 53 97 BF         	ld	(tmpT), de	; set start address
     947/     41E : CD 7F 18            	CALL	SKIPSP		; A <- next char
     948/     421 : B7                  	or	a
     949/     422 : 28 1F               	jr	z, t_op1	; 1step trace
     950/     424 : FE 2C               	cp	','
     951/     426 : 28 03               	jr	z, stp_chk
     952/     428 : C3 7B 01            	jp	ERR
     953/     42B :                     
     954/     42B :                     stp_chk:
     955/     42B : 23                  	inc	hl
     956/     42C : CD 7F 18            	CALL	SKIPSP		; A <- next char
     957/     42F : B7                  	or	a
     958/     430 : CA 7B 01            	jp	z, ERR
     959/     433 : FE 2D               	cp	'-'
     960/     435 : 28 11               	jr	z, chk_fevre
     961/     437 :                     
     962/     437 :                     ; check steps
     963/     437 :                     
     964/     437 : CD 33 02            	call	GET_NUM		; get steps to BC
     965/     43A : DA 7B 01            	JP	C, ERR		; number error
     966/     43D :                     
     967/     43D :                     t_op11:
     968/     43D : ED 43 95 BF         	ld	(TC_cnt), bc	; set trace step counter
     969/     441 : 18 1B               	jr	t_op_chk
     970/     443 :                     
     971/     443 :                     t_op1:
     972/     443 : 01 01 00            	ld	bc, 1
     973/     446 : 18 F5               	jr	t_op11
     974/     448 :                     
     975/     448 :                     chk_fevre:
     976/     448 : 23                  	inc	hl
     977/     449 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     978/     44C : FE 31               	cp	'1'
     979/     44E : C2 7B 01            	jp	nz, ERR
     980/     451 : 23                  	inc	hl
     981/     452 : CD 7F 18            	CALL	SKIPSP		; A <- next char
     982/     455 : B7                  	or	a
     983/     456 : C2 7B 01            	jp	nz, ERR		; not "-1" then error
     984/     459 : 3E 01               	ld	a, 1
     985/     45B : 32 99 BF            	ld	(fever_t), a	; set flag trace forever
     986/     45E :                     
     987/     45E :                     t_op_chk:
     988/     45E : 2A 97 BF            	ld	hl, (tmpT)	; get PC address
     989/     461 : 7E                  	ld	a, (hl)		; get opcode
     990/     462 :                     	
     991/     462 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     992/     462 :                     ;;;
     993/     462 :                     ;;; branch opecode check
     994/     462 :                     ;;;
     995/     462 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     996/     462 :                     
     997/     462 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     998/     462 :                     ; 2 insertion Trace code(TC) 
     999/     462 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1000/     462 :                     INSTC2:
    1001/     462 :                     	; check 1 byte machine code: branch (RET CC)
    1002/     462 :                     
    1003/     462 : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    1004/     465 : 21 FB 05            	ld	hl, RETCC_TBLS
    1005/     468 : ED B1               	cpir
    1006/     46A : 20 13               	jr	nz, next_bc1	; not RET CC
    1007/     46C :                     
    1008/     46C :                     	; RET CC
    1009/     46C :                     	; trace operation:
    1010/     46C :                     	;   1. ea = *REGSP; *ea = TC;
    1011/     46C :                     	;   2. ea = *REGPC; *(ea+1) = TC;
    1012/     46C :                     
    1013/     46C :                     	; 1
    1014/     46C : 0E 01               	ld	c, 1		; first TC point
    1015/     46E : CD C4 05            	call	insBRK_sp
    1016/     471 : DA 83 05            	jp	c, err_trace_seq
    1017/     474 :                     	
    1018/     474 :                     	; 2
    1019/     474 : 0E 02               	ld	c, 2		; second TC point
    1020/     476 : CD A4 05            	call	insBRK_1op
    1021/     479 : DA 83 05            	jp	c, err_trace_seq
    1022/     47C :                     
    1023/     47C : C3 80 05            	jp	END_INS_TC
    1024/     47F :                     
    1025/     47F :                     	; check 2 byte machine code: branch (JR CC, Relative Value)
    1026/     47F :                     next_bc1:
    1027/     47F :                     
    1028/     47F : 01 05 00            	ld	bc, JRCC_TBLE - JRCC_TBLS
    1029/     482 : 21 03 06            	ld	hl, JRCC_TBLS
    1030/     485 : ED B1               	cpir
    1031/     487 : 20 19               	jr	nz, next_bc2	; not JR CC
    1032/     489 :                     
    1033/     489 :                     	; JR CC, nn
    1034/     489 :                     	; trace operation:
    1035/     489 :                     	;   1. ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1036/     489 :                     	;   2. ea = *REGPC; *(ea+2) = TC;
    1037/     489 :                     
    1038/     489 :                     	; 1
    1039/     489 : 0E 01               	ld	c, 1		; first TC point
    1040/     48B : 2A 97 BF            	ld	hl, (tmpT)
    1041/     48E : CD 97 05            	call	Rel_adr_c
    1042/     491 : CD D1 05            	call	inadr_chk_and_wrt
    1043/     494 : DA 83 05            	jp	c, err_trace_seq
    1044/     497 :                     
    1045/     497 :                     	; 2
    1046/     497 : 0E 02               	ld	c, 2		; second TC point
    1047/     499 : CD A9 05            	call	insBRK_2op
    1048/     49C : DA 83 05            	jp	c, err_trace_seq
    1049/     49F :                     
    1050/     49F : C3 80 05            	jp	END_INS_TC
    1051/     4A2 :                     
    1052/     4A2 :                     	; check 3 byte machine code: branch JP CC, nnnn 16bit literal)
    1053/     4A2 :                     
    1054/     4A2 :                     next_bc2:
    1055/     4A2 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    1056/     4A5 : 21 08 06            	ld	hl, JPCC_TBLS
    1057/     4A8 : ED B1               	cpir
    1058/     4AA : 20 04               	jr	nz, next_bc21		; not JP CCC
    1059/     4AC :                     
    1060/     4AC :                     	; JP CC, nnnn
    1061/     4AC :                     	; trace operation:
    1062/     4AC :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1063/     4AC :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1064/     4AC :                     
    1065/     4AC : 0E 01               	ld	c, 1		; first TC point
    1066/     4AE : 18 13               	jr	next_bc222
    1067/     4B0 :                     
    1068/     4B0 :                     	; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    1069/     4B0 :                     
    1070/     4B0 :                     next_bc21:
    1071/     4B0 : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    1072/     4B3 : 21 10 06            	ld	hl, CLCC_TBLS
    1073/     4B6 : ED B1               	cpir
    1074/     4B8 : 20 1A               	jr	nz, INSTC1		; not CALL CCC
    1075/     4BA :                     
    1076/     4BA :                     	; CALL CC, nnnn
    1077/     4BA :                     	; trace operation:
    1078/     4BA :                     	; TM_mode = 'I'
    1079/     4BA :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1080/     4BA :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1081/     4BA :                     	;
    1082/     4BA :                     	; TM_mode = 'S'
    1083/     4BA :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1084/     4BA :                     
    1085/     4BA : 0E 01               	ld	c, 1		; first TC point
    1086/     4BC : 3A 94 BF            	ld	a, (TM_mode)
    1087/     4BF : FE 53               	cp	'S'
    1088/     4C1 : 28 08               	jr	z, next_bc22	; skip insertion 1.
    1089/     4C3 :                     
    1090/     4C3 :                     next_bc222:
    1091/     4C3 :                     	; 1. ea = *REGPC; *((char *)(ea+1)) = TC;
    1092/     4C3 : CD B8 05            	call	insBRK_brp
    1093/     4C6 : DA 83 05            	jp	c, err_trace_seq
    1094/     4C9 :                     	
    1095/     4C9 :                     next_bc221:
    1096/     4C9 :                     	; 2. ea = *REGPC; *(ea+3) = TC;
    1097/     4C9 : 0E 02               	ld	c, 2		; second TC point
    1098/     4CB :                     next_bc22:
    1099/     4CB : CD AE 05            	call	insBRK_3op
    1100/     4CE : DA 83 05            	jp	c, err_trace_seq
    1101/     4D1 :                     
    1102/     4D1 : C3 80 05            	jp	END_INS_TC
    1103/     4D4 :                     
    1104/     4D4 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1105/     4D4 :                     ; 1 insertion Trace code(TC) 
    1106/     4D4 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1107/     4D4 :                     INSTC1:
    1108/     4D4 :                     	; check 1 byte machine code: branch (return)
    1109/     4D4 : FE C9               	cp	0C9H		; RET ?
    1110/     4D6 : 20 0B               	jr	nz, next_bc3	; not RET
    1111/     4D8 :                     
    1112/     4D8 :                     	; RET
    1113/     4D8 :                     	; trace operation:
    1114/     4D8 :                     	;   ea = *REGSP; *ea = TC;
    1115/     4D8 : 0E 01               	ld	c, 1		; first TC point
    1116/     4DA : CD C4 05            	call	insBRK_sp
    1117/     4DD : DA 83 05            	jp	c, err_trace_seq
    1118/     4E0 : C3 80 05            	jp	END_INS_TC
    1119/     4E3 :                     
    1120/     4E3 :                     	; check RST p
    1121/     4E3 :                     next_bc3:
    1122/     4E3 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    1123/     4E6 : 21 18 06            	ld	hl, RST_TBLS
    1124/     4E9 : ED B1               	cpir
    1125/     4EB : 20 0B               	jr	nz, next_bc4		; not RST p
    1126/     4ED :                     
    1127/     4ED :                     	; RST p
    1128/     4ED :                     	; can't trace: skip trace
    1129/     4ED :                     	; trace operation:
    1130/     4ED :                     	;   ea = *REGPC; *(ea+1) = TC;
    1131/     4ED :                     ;	ld	hl, RST_DMSG
    1132/     4ED :                     ;	call	STROUT		; message out "DETECT RST OPCODE"
    1133/     4ED : 0E 01               	ld	c, 1		; first TC point
    1134/     4EF : CD A4 05            	call	insBRK_1op
    1135/     4F2 : DA 83 05            	jp	c, err_trace_seq
    1136/     4F5 :                     	
    1137/     4F5 : C3 80 05            	jp	END_INS_TC
    1138/     4F8 :                     
    1139/     4F8 :                     ;RST_DMSG:
    1140/     4F8 :                     ;	db	"(RST nn) WILL BE SKIPPED. AND TRACE NEXT OPCODE", CR, LF,00
    1141/     4F8 :                     
    1142/     4F8 :                     	; check code 0EDH
    1143/     4F8 :                     next_bc4:
    1144/     4F8 : FE ED               	cp	0EDH		; CODE 0EDH ?
    1145/     4FA : 20 13               	jr	nz, next_bc5	; not 0EDH
    1146/     4FC :                     
    1147/     4FC : 23                  	inc	hl
    1148/     4FD : 7E                  	ld	a, (hl)
    1149/     4FE : FE 45               	cp	45H		; RETN?
    1150/     500 : 28 04               	jr	z, next_bc6	; yes, RETN
    1151/     502 : FE 4D               	cp	4DH		; RETI?
    1152/     504 : 20 09               	jr	nz, next_bc5	; not RETN
    1153/     506 :                     
    1154/     506 :                     	; trace operation:
    1155/     506 :                     	;   ea = *REGSP; *ea = TC;
    1156/     506 :                     next_bc6:
    1157/     506 : 0E 01               	ld	c, 1		; first TC point
    1158/     508 : CD C4 05            	call	insBRK_sp
    1159/     50B : 38 76               	jr	c, err_trace_seq
    1160/     50D : 18 71               	jr	END_INS_TC
    1161/     50F :                     
    1162/     50F :                     	; check JP (HL)
    1163/     50F :                     next_bc5:
    1164/     50F : 2A 97 BF            	ld	hl, (tmpT)
    1165/     512 : 7E                  	ld	a, (hl)
    1166/     513 :                     
    1167/     513 : FE E9               	cp	0E9H		; JP (HL) ?
    1168/     515 : 20 0C               	jr	nz, next_bc7	; not JP (HL)
    1169/     517 :                     
    1170/     517 :                     	; JP (HL)
    1171/     517 :                     	; trace operation:
    1172/     517 :                     	;   ea = *REGHL; *ea = TC;
    1173/     517 : 2A 75 BF            	ld	hl, (REGHL)
    1174/     51A :                     jphl:
    1175/     51A : 0E 01               	ld	c, 1		; first TC point
    1176/     51C : CD D1 05            	call	inadr_chk_and_wrt
    1177/     51F : 38 62               	jr	c, err_trace_seq
    1178/     521 : 18 5D               	jr	END_INS_TC
    1179/     523 :                     
    1180/     523 :                     	; check JP (IX)
    1181/     523 :                     next_bc7:
    1182/     523 : FE DD               	cp	0DDH		; 1st OPOCDE 0DDH ?
    1183/     525 : 20 0B               	jr	nz, next_bc8	; no 0DDH
    1184/     527 : 23                  	inc	hl
    1185/     528 : 7E                  	ld	a, (hl)
    1186/     529 : FE E9               	cp	0E9H		; JP (IX) ?
    1187/     52B : 20 05               	jr	nz, next_bc8	; not JP (IX)
    1188/     52D :                     
    1189/     52D :                     	; JP (IX)
    1190/     52D :                     	; trace operation:
    1191/     52D :                     	;   ea = *REGIX; *ea = TC;
    1192/     52D : 2A 7F BF            	ld	hl, (REGIX)
    1193/     530 : 18 E8               	jr	jphl
    1194/     532 :                     
    1195/     532 :                     	; check JP (IY)
    1196/     532 :                     next_bc8:
    1197/     532 : 2A 97 BF            	ld	hl, (tmpT)
    1198/     535 : 7E                  	ld	a, (hl)
    1199/     536 :                     
    1200/     536 : FE FD               	cp	0FDH		; 1st OPOCDE 0FDH ?
    1201/     538 : 20 0B               	jr	nz, next_bc9	; no 0FDH
    1202/     53A : 23                  	inc	hl
    1203/     53B : 7E                  	ld	a, (hl)
    1204/     53C : FE E9               	cp	0E9H		; JP (IX) ?
    1205/     53E : 20 05               	jr	nz, next_bc9	; not JP (IX)
    1206/     540 :                     
    1207/     540 :                     	; JP (IY)
    1208/     540 :                     	; trace operation:
    1209/     540 :                     	;   ea = *REGIY; *ea = TC;
    1210/     540 : 2A 81 BF            	ld	hl, (REGIY)
    1211/     543 : 18 D5               	jr	jphl
    1212/     545 :                     
    1213/     545 :                     	; check JR relative
    1214/     545 :                     next_bc9:
    1215/     545 : 2A 97 BF            	ld	hl, (tmpT)
    1216/     548 : 7E                  	ld	a, (hl)
    1217/     549 : FE 18               	cp	18H		; JR relative ?
    1218/     54B : 20 0C               	jr	nz, next_bc10	; not JR relative
    1219/     54D :                     
    1220/     54D :                     	; JR Relative
    1221/     54D :                     	; trace operation:
    1222/     54D :                     	;   ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1223/     54D : 0E 01               	ld	c, 1		; first TC point
    1224/     54F : CD 97 05            	call	Rel_adr_c
    1225/     552 : CD D1 05            	call	inadr_chk_and_wrt
    1226/     555 : 38 2C               	jr	c, err_trace_seq
    1227/     557 : 18 27               	jr	END_INS_TC
    1228/     559 :                     
    1229/     559 :                     	; check JP literal
    1230/     559 :                     next_bc10:
    1231/     559 : FE C3               	cp	0C3H		; JP literal ?
    1232/     55B : 20 09               	jr	nz, next_bc11	; not JP literal
    1233/     55D :                     
    1234/     55D :                     	; JP literal
    1235/     55D :                     	; trace operation:
    1236/     55D :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1237/     55D : 0E 01               	ld	c, 1		; first TC point
    1238/     55F : CD B8 05            	call	insBRK_brp
    1239/     562 : 38 1F               	jr	c, err_trace_seq
    1240/     564 : 18 1A               	jr	END_INS_TC
    1241/     566 :                     
    1242/     566 :                     	; check call literal
    1243/     566 :                     next_bc11:
    1244/     566 : FE CD               	cp	0CDH		; CALL literal ?
    1245/     568 : C2 20 06            	jp	nz, INS2	; no, check not branch opcode 
    1246/     56B :                     
    1247/     56B :                     	; CALL literal
    1248/     56B :                     	; trace operation:
    1249/     56B :                     	; TM_mode = 'I'
    1250/     56B :                     	;   ea = *REGPC; *((short *)(ea+1)) = TC;
    1251/     56B :                     	; TM_mode = 'S'
    1252/     56B :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1253/     56B :                     
    1254/     56B : 0E 01               	ld	c, 1		; first TC point
    1255/     56D : 3A 94 BF            	ld	a, (TM_mode)
    1256/     570 : FE 53               	cp	'S'
    1257/     572 : 28 07               	jr	z, next_bc111	; yes, TM_mode='S'
    1258/     574 :                     
    1259/     574 :                     	; TM_mode = 'I'
    1260/     574 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1261/     574 : CD B8 05            	call	insBRK_brp
    1262/     577 : 38 0A               	jr	c, err_trace_seq
    1263/     579 : 18 05               	jr	END_INS_TC
    1264/     57B :                     
    1265/     57B :                     	; TM_mode = 'S'
    1266/     57B :                     	; ea = *REGPC; *(ea+3) = TC;
    1267/     57B :                     next_bc111:
    1268/     57B : CD AE 05            	call	insBRK_3op
    1269/     57E : 38 03               	jr	c, err_trace_seq
    1270/     580 :                     
    1271/     580 :                     END_INS_TC:
    1272/     580 : C3 07 14            	jp	G0	; go, trace operation
    1273/     583 :                     
    1274/     583 :                     err_trace_seq:
    1275/     583 : 21 8D 05            	ld	hl, terr_msg
    1276/     586 : CD C5 17            	call	STROUT
    1277/     589 : C3 3B 01            	JP	WSTART
    1278/     58C : FF                  	rst	38h
    1279/     58D :                     ;	
    1280/     58D : 41 64 72 20 45 52   terr_msg:	db	"Adr ERR", CR, LF, 00H
              593 : 52 0D 0A 00       
    1281/     597 :                     
    1282/     597 :                     ;--------------------------------------
    1283/     597 :                     ; 2 byte machine code branch
    1284/     597 :                     ; - 2nd byte is Relative address
    1285/     597 :                     ; - input hl : opecode address
    1286/     597 :                     ; - output hl : target address
    1287/     597 :                     ;--------------------------------------
    1288/     597 :                     Rel_adr_c:
    1289/     597 : 23                  	inc	hl
    1290/     598 : 5E                  	ld	e, (hl)		; e = 2nd operand
    1291/     599 : 23                  	inc	hl		; hl = PC + 2
    1292/     59A : 16 FF               	ld	d, 0ffh
    1293/     59C : CB 7B               	bit	7, e		; test msb bit
    1294/     59E : 20 02               	jr	nz, exp_msb	; 
    1295/     5A0 : 16 00               	ld	d, 0
    1296/     5A2 :                     exp_msb:
    1297/     5A2 : 19                  	add	hl, de
    1298/     5A3 : C9                  	ret
    1299/     5A4 :                     
    1300/     5A4 :                     ;--------------------------------------
    1301/     5A4 :                     ; 1 byte op code, insert TC
    1302/     5A4 :                     ; ea = *REGPC; *(ea+1) = TC
    1303/     5A4 :                     ;--------------------------------------
    1304/     5A4 :                     insBRK_1op:
    1305/     5A4 :                     ;	ld	hl, (REGPC)
    1306/     5A4 : 2A 97 BF            	ld	hl, (tmpT)
    1307/     5A7 : 18 0A               	jr	ib1
    1308/     5A9 :                     	
    1309/     5A9 :                     ;--------------------------------------
    1310/     5A9 :                     ; 2 byte op code, insert TC
    1311/     5A9 :                     ; ea = *REGPC; *(ea+2) = TC
    1312/     5A9 :                     ;--------------------------------------
    1313/     5A9 :                     insBRK_2op:
    1314/     5A9 :                     ;	ld	hl, (REGPC)
    1315/     5A9 : 2A 97 BF            	ld	hl, (tmpT)
    1316/     5AC : 18 04               	jr	ib2
    1317/     5AE :                     	
    1318/     5AE :                     ;--------------------------------------
    1319/     5AE :                     ; 3 byte op code, insert TC
    1320/     5AE :                     ; ea = *REGPC; *(ea+3) = TC;
    1321/     5AE :                     ;--------------------------------------
    1322/     5AE :                     insBRK_3op:
    1323/     5AE :                     ;	ld	hl, (REGPC)
    1324/     5AE : 2A 97 BF            	ld	hl, (tmpT)
    1325/     5B1 :                     ib3:
    1326/     5B1 : 23                  	inc	hl
    1327/     5B2 :                     ib2:
    1328/     5B2 : 23                  	inc	hl
    1329/     5B3 :                     ib1:
    1330/     5B3 : 23                  	inc	hl
    1331/     5B4 : CD D1 05            	call	inadr_chk_and_wrt
    1332/     5B7 : C9                  	ret
    1333/     5B8 :                     
    1334/     5B8 :                     ;--------------------------------------
    1335/     5B8 :                     ; 3 byte op code, insert TC in branch point
    1336/     5B8 :                     ; ea = *REGPC; *((char *)(ea+1)) = TC;
    1337/     5B8 :                     ;--------------------------------------
    1338/     5B8 :                     insBRK_brp:
    1339/     5B8 :                     ;	ld	hl, (REGPC)
    1340/     5B8 : 2A 97 BF            	ld	hl, (tmpT)
    1341/     5BB : 23                  	inc	hl
    1342/     5BC : 5E                  	ld	e, (hl)
    1343/     5BD : 23                  	inc	hl
    1344/     5BE : 56                  	ld	d, (hl)
    1345/     5BF : EB                  	ex	de,  hl
    1346/     5C0 : CD D1 05            	call	inadr_chk_and_wrt
    1347/     5C3 : C9                  	ret
    1348/     5C4 :                     
    1349/     5C4 :                     ;--------------------------------------
    1350/     5C4 :                     ; insert TC at SP
    1351/     5C4 :                     ; ea = *REGSP; *ea = TC;
    1352/     5C4 :                     ;--------------------------------------
    1353/     5C4 :                     insBRK_sp:
    1354/     5C4 : ED 5B 83 BF         	ld	de, (REGSP)
    1355/     5C8 : 1A                  	ld	a, (de)
    1356/     5C9 : 6F                  	ld	l, a
    1357/     5CA : 13                  	inc	de
    1358/     5CB : 1A                  	ld	a, (de)
    1359/     5CC : 67                  	ld	h, a		; hl = *sp
    1360/     5CD : CD D1 05            	call	inadr_chk_and_wrt
    1361/     5D0 : C9                  	ret
    1362/     5D1 :                     
    1363/     5D1 :                     ;--------------------------------------
    1364/     5D1 :                     ; check (HL) is RAM AREA
    1365/     5D1 :                     ; insert Trace code at (HL)
    1366/     5D1 :                     ;--------------------------------------
    1367/     5D1 :                     inadr_chk_and_wrt:
    1368/     5D1 : 7C                  	ld	a, h
    1369/     5D2 : FE 80               	cp	RAM_B >> 8		; 80H
    1370/     5D4 : 38 23               	jr	c, NO_RAM_AREA
    1371/     5D6 : FE C0               	cp	(RAM_E + 1) >> 8	; C0H
    1372/     5D8 : 30 1F               	jr	nc, NO_RAM_AREA
    1373/     5DA : 79                  	ld	a, c
    1374/     5DB : FE 01               	cp	1		;first save?
    1375/     5DD : 20 0D               	jr	nz, icka1
    1376/     5DF : 11 9A BF            	ld	de, tpt1_f
    1377/     5E2 : 12                  	ld	(de), a		; set trace ON
    1378/     5E3 : 22 9C BF            	ld	(tpt1_adr), hl
    1379/     5E6 : 7E                  	ld	a, (hl)		; get opcode
    1380/     5E7 : 32 9B BF            	ld	(tpt1_op), a	; save opcode
    1381/     5EA : 18 0B               	jr	icka_end
    1382/     5EC :                     icka1:
    1383/     5EC : 11 9E BF            	ld	de, tpt2_f
    1384/     5EF : 12                  	ld	(de), a		; set trace ON
    1385/     5F0 : 22 A0 BF            	ld	(tpt2_adr), hl
    1386/     5F3 : 7E                  	ld	a, (hl)		; get opcode
    1387/     5F4 : 32 9F BF            	ld	(tpt2_op), a	; save opcode
    1388/     5F7 :                     icka_end:
    1389/     5F7 : AF                  	xor	a
    1390/     5F8 : C9                  	ret
    1391/     5F9 :                     
    1392/     5F9 :                     NO_RAM_AREA:
    1393/     5F9 : 37                  	SCF
    1394/     5FA : C9                  	ret
    1395/     5FB :                     	
    1396/     5FB :                     
    1397/     5FB :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1398/     5FB :                     ; 2 insertion TC TABLE
    1399/     5FB :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1400/     5FB :                     ;
    1401/     5FB :                     ; 1 byte machine code: branch (RET CC)
    1402/     5FB :                     RETCC_TBLS:
    1403/     5FB : C0                  	DB	0C0H	; RET	NZ
    1404/     5FC : C8                  	DB	0C8H	; RET	Z
    1405/     5FD : D0                  	DB	0D0H	; RET	NC
    1406/     5FE : D8                  	DB	0D8H	; RET	C
    1407/     5FF : E0                  	DB	0E0H	; RET	PO
    1408/     600 : E8                  	DB	0E8H	; RET	PE
    1409/     601 : F0                  	DB	0F0H	; RET	P
    1410/     602 : F8                  	DB	0F8H	; RET	M
    1411/     603 :                     RETCC_TBLE:
    1412/     603 :                     
    1413/     603 :                     ; 2 byte machine code: branch (JR CC, Relative)
    1414/     603 :                     JRCC_TBLS:
    1415/     603 : 10                  	DB	10H	; DJNZ	$
    1416/     604 :                     JRCC_TBLS1:
    1417/     604 : 20                  	DB	20H	; JR	NZ,$
    1418/     605 : 28                  	DB	28H	; JR	Z,$
    1419/     606 : 30                  	DB	30H	; JR	NC,$
    1420/     607 : 38                  	DB	38H	; JR	C,$
    1421/     608 :                     JRCC_TBLE:
    1422/     608 :                     
    1423/     608 :                     ; 3 byte machine code: branch (JP CC, 16bit literal)
    1424/     608 :                     JPCC_TBLS:
    1425/     608 : C2                  	DB	0C2H	; JP	NZ,1234H
    1426/     609 : CA                  	DB	0CAH	; JP	Z,1234H
    1427/     60A : D2                  	DB	0D2H	; JP	NC,1234H
    1428/     60B : DA                  	DB	0DAH	; JP	C,1234H
    1429/     60C : E2                  	DB	0E2H	; JP	PO,1234H
    1430/     60D : EA                  	DB	0EAH	; JP	PE,1234H
    1431/     60E : F2                  	DB	0F2H	; JP	P,1234H
    1432/     60F : FA                  	DB	0FAH	; JP	M,1234H
    1433/     610 :                     JPCC_TBLE:
    1434/     610 :                     
    1435/     610 :                     ; (call 16bit literal)
    1436/     610 :                     CLCC_TBLS:
    1437/     610 : C4                  	DB	0C4H	; CALL	NZ,1234H
    1438/     611 : CC                  	DB	0CCH	; CALL	Z,1234H
    1439/     612 : D4                  	DB	0D4H	; CALL	NC,1234H
    1440/     613 : DC                  	DB	0DCH	; CALL	C,1234H
    1441/     614 : E4                  	DB	0E4H	; CALL	PO,1234H
    1442/     615 : EC                  	DB	0ECH	; CALL	PE,1234H
    1443/     616 : F4                  	DB	0F4H	; CALL	P,1234H
    1444/     617 : FC                  	DB	0FCH	; CALL	M,1234H
    1445/     618 :                     CLCC_TBLE:
    1446/     618 :                     
    1447/     618 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1448/     618 :                     ; 1 insertion TC TABLE
    1449/     618 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1450/     618 :                     
    1451/     618 :                     ; restart
    1452/     618 :                     RST_TBLS:
    1453/     618 : C7                  	DB	0C7H	; RST	00H
    1454/     619 : CF                  	DB	0CFH	; RST	08H
    1455/     61A : D7                  	DB	0D7H	; RST	10H
    1456/     61B : DF                  	DB	0DFH	; RST	18H
    1457/     61C : E7                  	DB	0E7H	; RST	20H
    1458/     61D : EF                  	DB	0EFH	; RST	28H
    1459/     61E : F7                  	DB	0F7H	; RST	30H
    1460/     61F : FF                  	DB	0FFH	; RST	38H
    1461/     620 :                     RST_TBLE:
    1462/     620 :                     
    1463/     620 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1464/     620 :                     ;;;
    1465/     620 :                     ;;; machine code check(except branch)
    1466/     620 :                     ;;;
    1467/     620 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1468/     620 :                     INS2:
    1469/     620 :                     
    1470/     620 :                     	; 2byte machine code search
    1471/     620 : 01 12 00            	ld	bc, TWO_OPTBL_E - TWO_OPTBL
    1472/     623 : 21 B9 06            	ld	hl, TWO_OPTBL
    1473/     626 : ED B1               	cpir
    1474/     628 : CA 94 06            	jp	z, meet_op2
    1475/     62B :                     
    1476/     62B :                     	; 3byte machine code search
    1477/     62B : 01 08 00            	ld	bc, THREE_OPTBL_E - THREE_OPTBL
    1478/     62E : 21 CB 06            	ld	hl, THREE_OPTBL
    1479/     631 : ED B1               	cpir
    1480/     633 : CA 9F 06            	jp	z, meet_op3
    1481/     636 :                     
    1482/     636 :                     	; check 0CBH
    1483/     636 :                     	
    1484/     636 :                     	; readjust hl
    1485/     636 : 2A 97 BF            	ld	hl, (tmpT)
    1486/     639 :                     
    1487/     639 : FE CB               	cp	0CBH		; opecode 0CBH?
    1488/     63B : 28 57               	jr	z, meet_op2
    1489/     63D :                     	
    1490/     63D :                     	; check 0DDH
    1491/     63D : FE DD               	cp	0ddh		; opecode 0DDH?
    1492/     63F : 28 0A               	jr	z, meet_dd
    1493/     641 :                     	
    1494/     641 :                     	; check 0EDH
    1495/     641 : FE ED               	cp	0edh		; opecode 0EDH?
    1496/     643 : 28 28               	jr	z, meet_ed
    1497/     645 :                     
    1498/     645 :                     	; check 0FDH
    1499/     645 : FE FD               	cp	0fdh		; opecode 0FDH?
    1500/     647 : 28 02               	jr	z, meet_dd
    1501/     649 :                     
    1502/     649 :                     	; 1byte machine code
    1503/     649 : 18 3E               	jr	meet_op1
    1504/     64B :                     
    1505/     64B :                     	; opecode 0DDh
    1506/     64B :                     meet_dd:
    1507/     64B : 23                  	inc	hl
    1508/     64C : 7E                  	ld	a, (hl)	
    1509/     64D : FE CB               	cp	0cbh		; 2nd 0CBH?
    1510/     64F : 28 59               	jr	z, meet_op4
    1511/     651 : FE 21               	cp	21h		; 2nd 21H?
    1512/     653 : 28 55               	jr	z, meet_op4
    1513/     655 : FE 22               	cp	22h		; 2nd 22H?
    1514/     657 : 28 51               	jr	z, meet_op4
    1515/     659 : FE 2A               	cp	2ah		; 2nd 2AH?
    1516/     65B : 28 4D               	jr	z, meet_op4
    1517/     65D : FE 36               	cp	36h		; 2nd 36H?
    1518/     65F : 28 49               	jr	z, meet_op4
    1519/     661 :                     
    1520/     661 :                     	; 2nd code search
    1521/     661 : 01 0A 00            	ld	bc, DD_2NDTBL_E - DD_2NDTBL
    1522/     664 : 21 D3 06            	ld	hl, DD_2NDTBL
    1523/     667 : ED B1               	cpir
    1524/     669 : 28 29               	jr	z, meet_op2
    1525/     66B : 18 32               	jr	meet_op3
    1526/     66D :                     
    1527/     66D :                     meet_ed:
    1528/     66D : 23                  	inc	hl
    1529/     66E : 7E                  	ld	a, (hl)	
    1530/     66F : FE 43               	cp	43h		; 2nd 43H?
    1531/     671 : 28 37               	jr	z, meet_op4
    1532/     673 : FE 4B               	cp	4bh		; 2nd 4BH?
    1533/     675 : 28 33               	jr	z, meet_op4
    1534/     677 : FE 53               	cp	53h		; 2nd 53H?
    1535/     679 : 28 2F               	jr	z, meet_op4
    1536/     67B : FE 5B               	cp	5bh		; 2nd 5BH?
    1537/     67D : 28 2B               	jr	z, meet_op4
    1538/     67F : FE 73               	cp	73h		; 2nd 73H?
    1539/     681 : 28 27               	jr	z, meet_op4
    1540/     683 : FE 7B               	cp	7bh		; 2nd 7BH?
    1541/     685 : 28 23               	jr	z, meet_op4
    1542/     687 : 18 0B               	jr	meet_op2
    1543/     689 :                     
    1544/     689 :                     ; 1 machine code
    1545/     689 :                     meet_op1:
    1546/     689 : 0E 01               	ld	c, 1
    1547/     68B : CD A4 05            	call	insBRK_1op
    1548/     68E : DA 83 05            	jp	c, err_trace_seq
    1549/     691 : C3 80 05            	jp	END_INS_TC
    1550/     694 :                     
    1551/     694 :                     ; 2 machine code
    1552/     694 :                     meet_op2:
    1553/     694 : 0E 01               	ld	c, 1
    1554/     696 : CD A9 05            	call	insBRK_2op
    1555/     699 : DA 83 05            	jp	c, err_trace_seq
    1556/     69C : C3 80 05            	jp	END_INS_TC
    1557/     69F :                     ; 3 machine code
    1558/     69F :                     meet_op3:
    1559/     69F : 0E 01               	ld	c, 1
    1560/     6A1 : CD AE 05            	call	insBRK_3op
    1561/     6A4 : DA 83 05            	jp	c, err_trace_seq
    1562/     6A7 : C3 80 05            	jp	END_INS_TC
    1563/     6AA :                     
    1564/     6AA :                     ; 4 machine codee
    1565/     6AA :                     meet_op4:
    1566/     6AA : 0E 01               	ld	c, 1
    1567/     6AC :                     ;	ld	hl, (REGPC)
    1568/     6AC : 2A 97 BF            	ld	hl, (tmpT)
    1569/     6AF : 23                  	inc	hl
    1570/     6B0 : CD B1 05            	call	ib3
    1571/     6B3 : DA 83 05            	jp	c, err_trace_seq
    1572/     6B6 : C3 80 05            	jp	END_INS_TC
    1573/     6B9 :                     
    1574/     6B9 :                     TWO_OPTBL:	; second byte is 8bitliteral[nn]
    1575/     6B9 :                     ld_r_nn_s:
    1576/     6B9 : 06                  	DB	06h	; LD	B,nn
    1577/     6BA : 0E                  	DB	0Eh	; LD	C,nn
    1578/     6BB : 16                  	DB	16h	; LD	D,nn
    1579/     6BC : 1E                  	DB	1Eh	; LD	E,nn
    1580/     6BD : 26                  	DB	26h	; LD	H,nn
    1581/     6BE : 2E                  	DB	2Eh	; LD	L,nn
    1582/     6BF : 36                  	DB	36h	; LD	(HL),nn
    1583/     6C0 : 3E                  	DB	3Eh	; LD	A,nn
    1584/     6C1 :                     ld_r_nn_e:
    1585/     6C1 :                     
    1586/     6C1 :                     log_op_s:
    1587/     6C1 : C6                  	DB	0C6h	; ADD	A,nn
    1588/     6C2 : CE                  	DB	0CEh	; ADC	A,nn
    1589/     6C3 : DE                  	DB	0DEh	; SBC	A,nn
    1590/     6C4 : D6                  	DB	0D6h	; SUB	nn
    1591/     6C5 : E6                  	DB	0E6h	; AND	nn
    1592/     6C6 : EE                  	DB	0EEh	; XOR	nn
    1593/     6C7 : F6                  	DB	0F6h	; OR	nn
    1594/     6C8 : FE                  	DB	0FEh	; CP	nn
    1595/     6C9 : DB                  	DB	0DBh	; IN	A,(nn)
    1596/     6CA : D3                  	DB	0D3h	; OUT	(nn),A
    1597/     6CB :                     log_op_e:
    1598/     6CB :                     TWO_OPTBL_E:
    1599/     6CB :                     
    1600/     6CB :                     THREE_OPTBL:	; 2nd, 3rd byte is 16bitliteral[nnnn]
    1601/     6CB : 01                  	DB	01h	; LD	BC,nnnn
    1602/     6CC : 11                  	DB	11h	; LD	DE,nnnn
    1603/     6CD : 21                  	DB	21h	; LD	HL,nnnn
    1604/     6CE : 31                  	DB	31h	; LD	SP,nnnn
    1605/     6CF :                     THREE_OPTBLe
    1606/     6CF : 22                  	DB	22h	; LD	(nnnn),HL
    1607/     6D0 : 32                  	DB	32h	; LD	(nnnn),A
    1608/     6D1 :                     
    1609/     6D1 : 2A                  	DB	2Ah	; LD	HL,(nnnn)
    1610/     6D2 : 3A                  	DB	3Ah	; LD	A,(nnnn)
    1611/     6D3 :                     THREE_OPTBL_E:
    1612/     6D3 :                     
    1613/     6D3 :                     DD_2NDTBL:
    1614/     6D3 : 09                  	DB	09h	; ADD	IX,BC
    1615/     6D4 : 19                  	DB	19h	; ADD	IX,DE
    1616/     6D5 : 29                  	DB	29h	; ADD	IX,IX
    1617/     6D6 : 39                  	DB	39h	; ADD	IX,SP
    1618/     6D7 :                     DD_2NDTBL1:
    1619/     6D7 : 23                  	DB	23h	; INC	IX
    1620/     6D8 : 2B                  	DB	2Bh	; DEC	IX
    1621/     6D9 : E5                  	DB	0E5h	; PUSH	IX
    1622/     6DA : E1                  	DB	0E1h	; POP	IX
    1623/     6DB :                     DD_2NDTBL2:
    1624/     6DB : E3                  	DB	0E3h	; EX	(SP),IX
    1625/     6DC : F9                  	DB	0F9h	; LD	SP,IX
    1626/     6DD :                     DD_2NDTBL_E:
    1627/     6DD :                     
    1628/     6DD :                     ;;; 
    1629/     6DD :                     ;;; Dump memory
    1630/     6DD :                     ;;; 
    1631/     6DD :                     
    1632/     6DD :                     DUMP:
    1633/     6DD : 23                  	INC	HL
    1634/     6DE : 7E                  	LD	A,(HL)
    1635/     6DF : FE 49               	cp	'I'
    1636/     6E1 : CA E5 07            	JP	Z,disassemble
    1637/     6E4 : CD 7F 18            	CALL	SKIPSP
    1638/     6E7 : CD 8F 18            	CALL	RDHEX		; 1st arg.
    1639/     6EA : 38 06               	jr	c, DP0
    1640/     6EC :                     	;; 1st arg. found
    1641/     6EC : ED 53 63 BF         	LD	(DSADDR),DE
    1642/     6F0 : 18 10               	jr	dp00
    1643/     6F2 :                     
    1644/     6F2 :                     DP0:	;; No arg. chk
    1645/     6F2 :                     
    1646/     6F2 : E5                  	push	hl
    1647/     6F3 : 2A 63 BF            	LD	HL,(DSADDR)
    1648/     6F6 : 01 80 00            	LD	BC,128
    1649/     6F9 : 09                  	ADD	HL,BC
    1650/     6FA : 22 65 BF            	LD	(DEADDR),HL
    1651/     6FD : E1                  	pop	hl
    1652/     6FE : 7E                  	LD	A,(HL)
    1653/     6FF : B7                  	OR	A
    1654/     700 : 28 2B               	JR	z, DPM		; no arg.
    1655/     702 :                     
    1656/     702 :                     dp00:
    1657/     702 : CD 7F 18            	CALL	SKIPSP
    1658/     705 : 7E                  	LD	A,(HL)
    1659/     706 : FE 2C               	CP	','
    1660/     708 : 28 0D               	JR	Z,DP1
    1661/     70A : B7                  	OR	A
    1662/     70B : C2 7B 01            	JP	NZ,ERR
    1663/     70E :                     	;; No 2nd arg.
    1664/     70E : 21 80 00            	LD	HL,128
    1665/     711 : 19                  	ADD	HL,DE
    1666/     712 : 22 65 BF            	LD	(DEADDR),HL
    1667/     715 : 18 16               	JR	DPM
    1668/     717 :                     DP1:
    1669/     717 : 23                  	INC	HL
    1670/     718 : CD 7F 18            	CALL	SKIPSP
    1671/     71B : CD 8F 18            	CALL	RDHEX
    1672/     71E : DA 7B 01            	jp	c, ERR
    1673/     721 : CD 7F 18            	CALL	SKIPSP
    1674/     724 : B7                  	OR	A
    1675/     725 : C2 7B 01            	jp	nz, ERR
    1676/     728 : 13                  	INC	DE
    1677/     729 : ED 53 65 BF         	LD	(DEADDR),DE
    1678/     72D :                     DPM:
    1679/     72D :                     	;; DUMP main
    1680/     72D : 2A 63 BF            	LD	HL,(DSADDR)
    1681/     730 : 3E F0               	LD	A,0F0H
    1682/     732 : A5                  	AND	L
    1683/     733 : 6F                  	LD	L,A
    1684/     734 : AF                  	XOR	A
    1685/     735 : 32 67 BF            	LD	(DSTATE),A
    1686/     738 :                     DPM0:
    1687/     738 : E5                  	PUSH	HL
    1688/     739 : CD 5F 07            	CALL	DPL
    1689/     73C : E1                  	POP	HL
    1690/     73D : 01 10 00            	LD	BC,16
    1691/     740 : 09                  	ADD	HL,BC
    1692/     741 : CD AA 1F            	CALL	CONST
    1693/     744 : 20 10               	JR	NZ,DPM1
    1694/     746 : 3A 67 BF            	LD	A,(DSTATE)
    1695/     749 : FE 02               	CP	2
    1696/     74B : 38 EB               	JR	C,DPM0
    1697/     74D : 2A 65 BF            	LD	HL,(DEADDR)
    1698/     750 : 22 63 BF            	LD	(DSADDR),HL
    1699/     753 : C3 3B 01            	JP	WSTART
    1700/     756 :                     DPM1:
    1701/     756 : 22 63 BF            	LD	(DSADDR),HL
    1702/     759 : CD 84 1F            	CALL	CONIN
    1703/     75C : C3 3B 01            	JP	WSTART
    1704/     75F :                     
    1705/     75F :                     DPL:
    1706/     75F :                     	;; DUMP line
    1707/     75F : CD CE 17            	CALL	HEXOUT4
    1708/     762 : E5                  	PUSH	HL
    1709/     763 : 21 52 1D            	LD	HL,DSEP0
    1710/     766 : CD C5 17            	CALL	STROUT
    1711/     769 : E1                  	POP	HL
    1712/     76A : DD 21 43 BF         	LD	IX,INBUF
    1713/     76E : 06 10               	LD	B,16
    1714/     770 :                     DPL0:
    1715/     770 : CD 99 07            	CALL	DPB
    1716/     773 : 10 FB               	DJNZ	DPL0
    1717/     775 :                     
    1718/     775 : 21 55 1D            	LD	HL,DSEP1
    1719/     778 : CD C5 17            	CALL	STROUT
    1720/     77B :                     
    1721/     77B : 21 43 BF            	LD	HL,INBUF
    1722/     77E : 06 10               	LD	B,16
    1723/     780 :                     DPL1:
    1724/     780 : 7E                  	LD	A,(HL)
    1725/     781 : 23                  	INC	HL
    1726/     782 : FE 20               	CP	' '
    1727/     784 : 38 09               	JR	C,DPL2
    1728/     786 : FE 7F               	CP	7FH
    1729/     788 : 30 05               	JR	NC,DPL2
    1730/     78A : CD B0 1F            	CALL	CONOUT
    1731/     78D : 18 05               	JR	DPL3
    1732/     78F :                     DPL2:
    1733/     78F : 3E 2E               	LD	A,'.'
    1734/     791 : CD B0 1F            	CALL	CONOUT
    1735/     794 :                     DPL3:
    1736/     794 : 10 EA               	DJNZ	DPL1
    1737/     796 : C3 0E 18            	JP	CRLF
    1738/     799 :                     
    1739/     799 :                     DPB:	; Dump byte
    1740/     799 : 3E 20               	LD	A,' '
    1741/     79B : CD B0 1F            	CALL	CONOUT
    1742/     79E : 3A 67 BF            	LD	A,(DSTATE)
    1743/     7A1 : B7                  	OR	A
    1744/     7A2 : 20 20               	JR	NZ,DPB2
    1745/     7A4 :                     	; Dump state 0
    1746/     7A4 : 3A 63 BF            	LD	A,(DSADDR)	; Low byte
    1747/     7A7 : BD                  	CP	L
    1748/     7A8 : 20 06               	JR	NZ,DPB0
    1749/     7AA : 3A 64 BF            	LD	A,(DSADDR+1)	; High byte
    1750/     7AD : BC                  	CP	H
    1751/     7AE : 28 0F               	JR	Z,DPB1
    1752/     7B0 :                     DPB0:	; Still 0 or 2
    1753/     7B0 : 3E 20               	LD	A,' '
    1754/     7B2 : CD B0 1F            	CALL	CONOUT
    1755/     7B5 : CD B0 1F            	CALL	CONOUT
    1756/     7B8 : DD 77 00            	LD	(IX),A
    1757/     7BB : 23                  	INC	HL
    1758/     7BC : DD 23               	INC	IX
    1759/     7BE : C9                  	RET
    1760/     7BF :                     DPB1:	; Found start address
    1761/     7BF : 3E 01               	LD	A,1
    1762/     7C1 : 32 67 BF            	LD	(DSTATE),A
    1763/     7C4 :                     DPB2:
    1764/     7C4 : 3A 67 BF            	LD	A,(DSTATE)
    1765/     7C7 : FE 01               	CP	1
    1766/     7C9 : 20 E5               	JR	NZ,DPB0
    1767/     7CB :                     	; Dump state 1
    1768/     7CB : 7E                  	LD	A,(HL)
    1769/     7CC : DD 77 00            	LD	(IX),A
    1770/     7CF : CD D3 17            	CALL	HEXOUT2
    1771/     7D2 : 23                  	INC	HL
    1772/     7D3 : DD 23               	INC	IX
    1773/     7D5 : 3A 65 BF            	LD	A,(DEADDR)	; Low byte
    1774/     7D8 : BD                  	CP	L
    1775/     7D9 : C0                  	RET	NZ
    1776/     7DA : 3A 66 BF            	LD	A,(DEADDR+1)	; High byte
    1777/     7DD : BC                  	CP	H
    1778/     7DE : C0                  	RET	NZ
    1779/     7DF :                     	; Found end address
    1780/     7DF : 3E 02               	LD	A,2
    1781/     7E1 : 32 67 BF            	LD	(DSTATE),A
    1782/     7E4 : C9                  	RET
    1783/     7E5 :                     
    1784/     7E5 :                     ;;;
    1785/     7E5 :                     ;;; Disassemble
    1786/     7E5 :                     ;;; 
    1787/     7E5 :                     
    1788/     7E5 :                     
    1789/     7E5 :                     ; DI[<address>][,s<steps>|<end address>]
    1790/     7E5 :                     
    1791/     7E5 :                     disassemble:
    1792/     7E5 : 23                  	INC	HL
    1793/     7E6 : CD 7F 18            	CALL	SKIPSP
    1794/     7E9 : CD 8F 18            	CALL	RDHEX		; 1st arg.
    1795/     7EC : 30 14               	jr	nc, get_DI1
    1796/     7EE :                     
    1797/     7EE :                     di_nxt:
    1798/     7EE :                     	;; No arg. chk
    1799/     7EE : CD 7F 18            	CALL	SKIPSP
    1800/     7F1 : 7E                  	LD	A,(HL)
    1801/     7F2 : B7                  	OR	A
    1802/     7F3 : 20 13               	jr	NZ, chk_DI1	; ',' check
    1803/     7F5 :                     
    1804/     7F5 :                     ; No arg
    1805/     7F5 : 26 00               	ld	h, 0
    1806/     7F7 : 2E 0A               	ld	l, 10
    1807/     7F9 : 7D                  	ld	a, l
    1808/     7FA : 32 B9 BF            	ld	(dasm_stpf), a	; set step flag
    1809/     7FD : 22 B7 BF            	ld	(dasm_ed), hl	; set 10 steps
    1810/     800 : 18 33               	jr	DISASM_go
    1811/     802 :                     
    1812/     802 :                     ; 1st arg
    1813/     802 :                     get_DI1:
    1814/     802 : ED 53 BA BF         	ld	(dasm_adr), de	; save start address
    1815/     806 :                     ;	INC	HL
    1816/     806 : 18 E6               	jr	di_nxt
    1817/     808 :                     
    1818/     808 :                     chk_DI1:
    1819/     808 : FE 2C               	cp	','
    1820/     80A : C2 7B 01            	jp	nz, ERR
    1821/     80D :                     
    1822/     80D :                     ; check 2nd arg
    1823/     80D :                     
    1824/     80D : 23                  	INC	HL
    1825/     80E : CD 7F 18            	CALL	SKIPSP
    1826/     811 :                     ;	call	UPPER
    1827/     811 : FE 53               	cp	'S'
    1828/     813 : 20 12               	jr	nz, chk_stpDI
    1829/     815 :                     
    1830/     815 :                     ; step arg
    1831/     815 : 3E 01               	ld	a, 1
    1832/     817 : 32 B9 BF            	ld	(dasm_stpf), a	; set step flag
    1833/     81A : 23                  	inc	hl
    1834/     81B : CD 33 02            	call	GET_NUM		; get decimal number to binary
    1835/     81E : DA 7B 01            	jp	c, ERR
    1836/     821 : ED 43 B7 BF         	ld	(dasm_ed), bc	; set steps
    1837/     825 : 18 0E               	jr	DISASM_go
    1838/     827 :                     
    1839/     827 :                     chk_stpDI:
    1840/     827 : CD 8F 18            	CALL	RDHEX		; 2nd arg.
    1841/     82A : DA 7B 01            	jp	c, ERR
    1842/     82D : ED 53 B7 BF         	ld	(dasm_ed), de	; set end address
    1843/     831 : AF                  	xor	a
    1844/     832 : 32 B9 BF            	ld	(dasm_stpf), a	; clear step flag
    1845/     835 :                     
    1846/     835 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1847/     835 :                     ; operation Disassemble
    1848/     835 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1849/     835 :                     
    1850/     835 :                     DISASM_go:
    1851/     835 : CD AA 1F            	call	CONST
    1852/     838 : 28 06               	jr	z, dis_go1
    1853/     83A : CD 84 1F            	call	CONIN		;discard key
    1854/     83D : C3 3B 01            	jp	WSTART		; exit disasm command
    1855/     840 :                     
    1856/     840 :                     dis_go1:
    1857/     840 :                     	; get opcode
    1858/     840 : CD C4 08            	call	dis_analysis
    1859/     843 : CD 89 08            	call	mk_adr_str	; conout address and machine code
    1860/     846 :                     				; *dasm_adr is next opcode address
    1861/     846 : 21 C1 BF            	ld	hl, adr_mc_buf
    1862/     849 : CD C5 17            	call	STROUT		; conout disassemble strings
    1863/     84C :                     
    1864/     84C : 3A B9 BF            	ld	a, (dasm_stpf)
    1865/     84F : B7                  	or	a
    1866/     850 : 20 0E               	jr	nz, calc_dis_step
    1867/     852 :                     	
    1868/     852 :                     	; *dasm_adr > *dasm_ed ?, yes, finish
    1869/     852 : 2A B7 BF            	ld	hl, (dasm_ed)
    1870/     855 : ED 4B BA BF         	ld	bc, (dasm_adr)
    1871/     859 : ED 42               	sbc	hl, bc
    1872/     85B : 30 D8               	jr	nc, DISASM_go
    1873/     85D : C3 3B 01            	jp	WSTART
    1874/     860 :                     
    1875/     860 :                     calc_dis_step:
    1876/     860 : 2A B7 BF            	ld	hl, (dasm_ed)
    1877/     863 : 2B                  	dec	hl
    1878/     864 : 22 B7 BF            	ld	(dasm_ed), hl
    1879/     867 : 7C                  	ld	a, h
    1880/     868 : B5                  	or	l
    1881/     869 : 20 CA               	jr	nz, DISASM_go
    1882/     86B : C3 3B 01            	jp	WSTART
    1883/     86E :                     
    1884/     86E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1885/     86E :                     ; Disassemble and maked strings to user buffer
    1886/     86E :                     ; input de : user buffer
    1887/     86E :                     ;       hl : disassemble address
    1888/     86E :                     ; output de : next MC address
    1889/     86E :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1890/     86E :                     get_disasm_st:
    1891/     86E : 22 BA BF            	ld	(dasm_adr), hl
    1892/     871 : D5                  	push	de
    1893/     872 : CD C4 08            	call	dis_analysis
    1894/     875 : CD 89 08            	call	mk_adr_str	; conout address and machine code
    1895/     878 : D1                  	pop	de
    1896/     879 : 21 C1 BF            	ld	hl, adr_mc_buf
    1897/     87C : 01 2A 00            	ld	bc, dasm_be - dasm_bs
    1898/     87F : ED B0               	ldir
    1899/     881 : ED 5B BA BF         	ld	de, (dasm_adr)
    1900/     885 : 3A C0 BF            	ld	a, (mc_Size)
    1901/     888 : C9                  	ret
    1902/     889 :                     
    1903/     889 :                     ;-------------------------------------------------
    1904/     889 :                     ; Make address and machine code at adr_mc_buf
    1905/     889 :                     ; "XXXX XX XX XX XX " (17bytes)
    1906/     889 :                     ;-------------------------------------------------
    1907/     889 :                     mk_adr_str:
    1908/     889 : 21 C1 BF            	ld	hl, adr_mc_buf
    1909/     88C : ED 5B BA BF         	ld	de, (dasm_adr)
    1910/     890 : CD 64 10            	call	hex4str		; address XXXX
    1911/     893 : CD F4 10            	call	ins_spcR
    1912/     896 : CD F4 10            	call	ins_spcR
    1913/     899 :                     
    1914/     899 : 06 04               	ld	b, 4
    1915/     89B : 3A C0 BF            	ld	a, (mc_Size)
    1916/     89E : 4F                  	ld	c, a
    1917/     89F :                     mas_1:
    1918/     89F : 1A                  	ld	a, (de)
    1919/     8A0 : 13                  	inc	de
    1920/     8A1 :                     
    1921/     8A1 : D5                  	push	de
    1922/     8A2 : 5F                  	ld	e, a
    1923/     8A3 : CD 6C 10            	call	hex2str		; MC XX
    1924/     8A6 : CD F4 10            	call	ins_spcR
    1925/     8A9 : D1                  	pop	de
    1926/     8AA :                     
    1927/     8AA : 05                  	dec	b
    1928/     8AB : 28 0F               	jr	z, mas_3	; end
    1929/     8AD : 0D                  	dec	c
    1930/     8AE : 20 EF               	jr	nz, mas_1
    1931/     8B0 :                     
    1932/     8B0 :                     mas_2:	
    1933/     8B0 : CD F4 10            	call	ins_spcR
    1934/     8B3 : CD F4 10            	call	ins_spcR
    1935/     8B6 : CD F4 10            	call	ins_spcR
    1936/     8B9 : 05                  	dec	b
    1937/     8BA : 20 F4               	jr	nz, mas_2
    1938/     8BC :                     mas_3:
    1939/     8BC : CD F4 10            	call	ins_spcR
    1940/     8BF : ED 53 BA BF         	ld	(dasm_adr), de	; set next analysis address
    1941/     8C3 : C9                  	ret
    1942/     8C4 :                     
    1943/     8C4 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1944/     8C4 :                     ; dis assemble analysis
    1945/     8C4 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1946/     8C4 :                     
    1947/     8C4 :                     dis_analysis:
    1948/     8C4 :                     
    1949/     8C4 :                     	; pre init string buffer
    1950/     8C4 :                     
    1951/     8C4 : 3E 01               	ld	a, 1
    1952/     8C6 : 32 C0 BF            	ld	(mc_Size), a
    1953/     8C9 :                     
    1954/     8C9 : 11 C3 11            	ld	de, LDstr	; insert LD string
    1955/     8CC : CD 88 10            	call	mkopcstr
    1956/     8CF :                     
    1957/     8CF : 21 DC BF            	ld	hl, dasm_OprStr
    1958/     8D2 : CD B4 10            	call	insPostStr	; CR, LF, 00h
    1959/     8D5 :                     
    1960/     8D5 : 2A BA BF            	ld	hl, (dasm_adr)
    1961/     8D8 : 7E                  	ld	a, (hl)		; get opcode
    1962/     8D9 :                     
    1963/     8D9 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1964/     8D9 :                     	; analysys 1 byte MC
    1965/     8D9 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1966/     8D9 :                     
    1967/     8D9 :                     ;  check no operand
    1968/     8D9 :                     
    1969/     8D9 : 01 0D 00            	ld	bc, oth_1op_e - oth_1op_s
    1970/     8DC : 21 07 11            	ld	hl, oth_1op_s
    1971/     8DF : ED B1               	cpir
    1972/     8E1 : 20 12               	jr	nz, chk_ld
    1973/     8E3 :                     
    1974/     8E3 :                     ;  no operand
    1975/     8E3 :                     
    1976/     8E3 : 21 16 13            	ld	hl, oth_1op_tbl
    1977/     8E6 : CD 0A 10            	call	get_strBufpoint
    1978/     8E9 : C3 88 10            	jp	mkopcstr
    1979/     8EC :                     
    1980/     8EC :                     get_r_num:
    1981/     8EC : E6 38               	and	38H
    1982/     8EE : 0F                  	rrca
    1983/     8EF : 0F                  	rrca
    1984/     8F0 : 0F                  	rrca
    1985/     8F1 : 4F                  	ld	c, a
    1986/     8F2 : 06 00               	ld	b, 0		; bc ; register No.
    1987/     8F4 : C9                  	ret
    1988/     8F5 :                     ;
    1989/     8F5 :                     ; LD opecode
    1990/     8F5 :                     ;
    1991/     8F5 :                     
    1992/     8F5 :                     ; check LD "A,(BC)", "A,(DE)", "(BC),A", "(DE),A", "SP,HL"
    1993/     8F5 :                     
    1994/     8F5 :                     chk_ld:
    1995/     8F5 : FE 0A               	cp	0AH	; LD	A,(BC)
    1996/     8F7 : 28 19               	jr	z, ld_a_kbck
    1997/     8F9 : FE 1A               	cp	1AH	; LD	A,(DE)
    1998/     8FB : 28 23               	jr	z, ld_a_kdek
    1999/     8FD : FE 02               	cp	02H	; LD	(BC),A
    2000/     8FF : 28 24               	jr	z, ld_kbck_a
    2001/     901 : FE 12               	cp	12H	; LD	(DE),A
    2002/     903 : 28 29               	jr	z, ld_kdek_a
    2003/     905 : FE F9               	cp	0F9H	; LD	SP,HL
    2004/     907 : 20 2A               	jr	nz, chk_ld1
    2005/     909 :                     
    2006/     909 :                     ; LD SP, HL
    2007/     909 : 11 7A 1F            	ld	de, RNSP
    2008/     90C : CD DB 10            	call	mk_rcs		; "SP, "
    2009/     90F : C3 AE 10            	jp	hl_crlf
    2010/     912 :                     	
    2011/     912 :                     ; LD A, (BC)
    2012/     912 :                     ld_a_kbck:
    2013/     912 : 11 39 1F            	ld	de, RNBC
    2014/     915 :                     ld_a_kxxk:
    2015/     915 : D5                  	push	de
    2016/     916 : CD D8 10            	call	a_colon_sp	; "A, "
    2017/     919 : D1                  	pop	de
    2018/     91A : CD C2 10            	call	mk_krk		; "(BC)", "(DE)"
    2019/     91D : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2020/     920 :                     
    2021/     920 :                     ; LD A, (DE)
    2022/     920 :                     ld_a_kdek:
    2023/     920 : 11 40 1F            	ld	de, RNDE
    2024/     923 : 18 F0               	jr	ld_a_kxxk
    2025/     925 :                     
    2026/     925 :                     ; LD (BC), A
    2027/     925 :                     ld_kbck_a:
    2028/     925 : 11 39 1F            	ld	de, RNBC
    2029/     928 :                     
    2030/     928 :                     ld_kxxk_a:
    2031/     928 : CD CA 10            	call	mk_krkcs	; "(BC), ", "(DE), "
    2032/     92B : C3 A3 10            	jp	a_crlf		; "A",CR,LF
    2033/     92E :                     
    2034/     92E :                     ; LD (DE), A
    2035/     92E :                     ld_kdek_a:
    2036/     92E : 11 40 1F            	ld	de, RNDE
    2037/     931 : 18 F5               	jr	ld_kxxk_a
    2038/     933 :                     
    2039/     933 :                     ; check other 1byte LD MC
    2040/     933 :                     
    2041/     933 :                     chk_ld1:
    2042/     933 : FE 40               	cp	40h
    2043/     935 : DA CB 09            	jp	c, chk_inc
    2044/     938 : FE 80               	cp	80h
    2045/     93A : 30 28               	jr	nc, chk_add
    2046/     93C : FE 76               	cp	76h	; HALT?
    2047/     93E : 20 06               	jr	nz, LD1op
    2048/     940 :                     
    2049/     940 : 11 C6 11            	ld	de, HLTstr	; HALT string
    2050/     943 : C3 88 10            	jp	mkopcstr	; de : next string buffer addr
    2051/     946 :                     
    2052/     946 :                     ; LD
    2053/     946 :                     
    2054/     946 :                     LD1op:
    2055/     946 : CD EC 08            	call	get_r_num
    2056/     949 : CD 07 10            	call	get_rstg_off
    2057/     94C : 21 DC BF            	ld	hl, dasm_OprStr
    2058/     94F : CD DB 10            	call	mk_rcs		; "REG, "
    2059/     952 :                     
    2060/     952 :                     mk_2ndopr:
    2061/     952 : ED 5B BA BF         	ld	de, (dasm_adr)
    2062/     956 : 1A                  	ld	a, (de)		; get opcode
    2063/     957 : E6 07               	and	07h
    2064/     959 : 4F                  	ld	c, a
    2065/     95A : 06 00               	ld	b, 0
    2066/     95C :                     
    2067/     95C :                     mk_2ndopr1:
    2068/     95C : E5                  	push	hl		; save copy buffer
    2069/     95D : CD 07 10            	call	get_rstg_off
    2070/     960 : E1                  	pop	hl		; copy buffer
    2071/     961 : C3 B1 10            	jp	cpstr_crlf	; "REG",CR,LF
    2072/     964 :                     
    2073/     964 :                     ; ADD 80H - 87H
    2074/     964 :                     ; check ADD code
    2075/     964 :                     
    2076/     964 :                     chk_add:
    2077/     964 : FE 88               	cp	88h
    2078/     966 : 30 08               	jr	nc, chk_adc
    2079/     968 :                     
    2080/     968 :                     ; ADD
    2081/     968 : CD 85 10            	call	add_opstr
    2082/     96B : CD D8 10            	call	a_colon_sp
    2083/     96E : 18 E2               	jr	mk_2ndopr
    2084/     970 :                     
    2085/     970 :                     ; ADC 88H - 8FH
    2086/     970 :                     ; check ADC code
    2087/     970 :                     
    2088/     970 :                     chk_adc:
    2089/     970 : FE 90               	cp	90h
    2090/     972 : 30 0B               	jr	nc, chk_sub
    2091/     974 :                     
    2092/     974 :                     ; ADC
    2093/     974 : 11 CF 11            	ld	de, ADCstr
    2094/     977 : CD 88 10            	call	mkopcstr
    2095/     97A : CD D8 10            	call	a_colon_sp
    2096/     97D : 18 D3               	jr	mk_2ndopr
    2097/     97F :                     
    2098/     97F :                     ; SUB 90H - 97H
    2099/     97F :                     ; check SUB code
    2100/     97F :                     
    2101/     97F :                     chk_sub:
    2102/     97F : FE 98               	cp	98h
    2103/     981 : 30 08               	jr	nc, chk_sbc
    2104/     983 :                     
    2105/     983 :                     ; SUB
    2106/     983 : 11 D3 11            	ld	de, SUBstr
    2107/     986 : CD 88 10            	call	mkopcstr
    2108/     989 : 18 C7               	jr	mk_2ndopr
    2109/     98B :                     
    2110/     98B :                     ; SBC 98H - 9FH
    2111/     98B :                     ; check SBC code
    2112/     98B :                     
    2113/     98B :                     chk_sbc:
    2114/     98B : FE A0               	cp	0A0h
    2115/     98D : 30 0B               	jr	nc, chk_and
    2116/     98F :                     
    2117/     98F :                     ; SBC
    2118/     98F : 11 D7 11            	ld	de, SBCstr
    2119/     992 : CD 88 10            	call	mkopcstr
    2120/     995 : CD D8 10            	call	a_colon_sp
    2121/     998 : 18 B8               	jr	mk_2ndopr
    2122/     99A :                     
    2123/     99A :                     ; AND 0A0H - 0A7H
    2124/     99A :                     ; check AND code
    2125/     99A :                     
    2126/     99A :                     chk_and:
    2127/     99A : FE A8               	cp	0A8h
    2128/     99C : 30 08               	jr	nc, chk_xor
    2129/     99E :                     
    2130/     99E :                     ; AND
    2131/     99E : 11 DB 11            	ld	de, ANDstr
    2132/     9A1 : CD 88 10            	call	mkopcstr
    2133/     9A4 : 18 AC               	jr	mk_2ndopr
    2134/     9A6 :                     
    2135/     9A6 :                     ; XOR 0A8H - 0AFH
    2136/     9A6 :                     ; check XOR code
    2137/     9A6 :                     
    2138/     9A6 :                     chk_xor:
    2139/     9A6 :                     
    2140/     9A6 : FE B0               	cp	0B0h
    2141/     9A8 : 30 08               	jr	nc, chk_or
    2142/     9AA :                     
    2143/     9AA :                     ; XOR
    2144/     9AA : 11 DF 11            	ld	de, XORstr
    2145/     9AD : CD 88 10            	call	mkopcstr
    2146/     9B0 : 18 A0               	jr	mk_2ndopr
    2147/     9B2 :                     
    2148/     9B2 :                     ; OR 0B0H - 0B7H
    2149/     9B2 :                     ; check OR code
    2150/     9B2 :                     
    2151/     9B2 :                     chk_or:
    2152/     9B2 : FE B8               	cp	0B8h
    2153/     9B4 : 30 08               	jr	nc, chk_cp
    2154/     9B6 :                     
    2155/     9B6 :                     ; OR
    2156/     9B6 : 11 E3 11            	ld	de, ORstr
    2157/     9B9 : CD 88 10            	call	mkopcstr
    2158/     9BC : 18 94               	jr	mk_2ndopr
    2159/     9BE :                     
    2160/     9BE :                     ; CP 0B8H - 0BFH
    2161/     9BE :                     ; check CP code
    2162/     9BE :                     
    2163/     9BE :                     chk_cp:
    2164/     9BE : FE C0               	cp	0C0h
    2165/     9C0 : D2 47 0A            	jp	nc, chk_pop_rp
    2166/     9C3 :                     
    2167/     9C3 :                     ; CP
    2168/     9C3 : 11 E6 11            	ld	de, CPstr
    2169/     9C6 : CD 88 10            	call	mkopcstr
    2170/     9C9 : 18 87               	jr	mk_2ndopr
    2171/     9CB :                     
    2172/     9CB :                     ;check INC
    2173/     9CB :                     
    2174/     9CB :                     chk_inc:
    2175/     9CB : 01 08 00            	ld	bc, INC_OPCDTBLE - INC_OPCDTBLS
    2176/     9CE : 21 14 11            	ld	hl, INC_OPCDTBLS
    2177/     9D1 : ED B1               	cpir
    2178/     9D3 : 20 0E               	jr	nz, chk_dec
    2179/     9D5 :                     
    2180/     9D5 :                     ; INC
    2181/     9D5 : F5                  	push	af
    2182/     9D6 : 11 E9 11            	ld	de, INCstr
    2183/     9D9 : CD 88 10            	call	mkopcstr
    2184/     9DC : F1                  	pop	af
    2185/     9DD :                     
    2186/     9DD :                     inc_dec:
    2187/     9DD : CD EC 08            	call	get_r_num
    2188/     9E0 : C3 5C 09            	jp	mk_2ndopr1
    2189/     9E3 :                     
    2190/     9E3 :                     ;check dec
    2191/     9E3 :                     
    2192/     9E3 :                     chk_dec:
    2193/     9E3 : 01 08 00            	ld	bc, DEC_OPCDTBLE - DEC_OPCDTBLS
    2194/     9E6 : 21 1C 11            	ld	hl, DEC_OPCDTBLS
    2195/     9E9 : ED B1               	cpir
    2196/     9EB : 20 0A               	jr	nz, chk_inc_rp
    2197/     9ED :                     
    2198/     9ED :                     ; DEC
    2199/     9ED : F5                  	push	af
    2200/     9EE : 11 ED 11            	ld	de, DECstr
    2201/     9F1 : CD 88 10            	call	mkopcstr
    2202/     9F4 : F1                  	pop	af
    2203/     9F5 : 18 E6               	jr	inc_dec
    2204/     9F7 :                     
    2205/     9F7 :                     ; check inc rp
    2206/     9F7 :                     
    2207/     9F7 :                     chk_inc_rp:
    2208/     9F7 : 01 04 00            	ld	bc, inc_rp_e - inc_rp_s
    2209/     9FA : 21 24 11            	ld	hl, inc_rp_s
    2210/     9FD : ED B1               	cpir
    2211/     9FF : 20 0F               	jr	nz, chk_dec_rp
    2212/     A01 :                     
    2213/     A01 :                     ; INC rp
    2214/     A01 : 11 E9 11            	ld	de, INCstr
    2215/     A04 : CD 88 10            	call	mkopcstr
    2216/     A07 :                     
    2217/     A07 : 21 06 13            	ld	hl, INC_DEC_ADDrp
    2218/     A0A : CD FE 0F            	call	mk_str
    2219/     A0D : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2220/     A10 :                     
    2221/     A10 :                     ; check dec rp
    2222/     A10 :                     
    2223/     A10 :                     chk_dec_rp:
    2224/     A10 : 01 04 00            	ld	bc, dec_rp_e - dec_rp_s
    2225/     A13 : 21 28 11            	ld	hl, dec_rp_s
    2226/     A16 : ED B1               	cpir
    2227/     A18 : 20 0F               	jr	nz, chk_add_rp
    2228/     A1A :                     
    2229/     A1A :                     ; dec rp
    2230/     A1A : 11 ED 11            	ld	de, DECstr
    2231/     A1D : CD 88 10            	call	mkopcstr
    2232/     A20 :                     
    2233/     A20 : 21 06 13            	ld	hl, INC_DEC_ADDrp
    2234/     A23 : CD FE 0F            	call	mk_str
    2235/     A26 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2236/     A29 :                     
    2237/     A29 :                     ;check ADD HL, rp
    2238/     A29 :                     
    2239/     A29 :                     chk_add_rp:
    2240/     A29 : 01 04 00            	ld	bc, add_rp_e - add_rp_s
    2241/     A2C : 21 2C 11            	ld	hl, add_rp_s
    2242/     A2F : ED B1               	cpir
    2243/     A31 : 20 46               	jr	nz, chk_ex
    2244/     A33 :                     
    2245/     A33 :                     ; add hl, rp
    2246/     A33 :                     
    2247/     A33 : CD 85 10            	call	add_opstr
    2248/     A36 :                     
    2249/     A36 : 11 47 1F            	ld	de, RNHL
    2250/     A39 : CD DB 10            	call	mk_rcs		; "HL, "
    2251/     A3C :                     
    2252/     A3C : E5                  	push	hl
    2253/     A3D : 21 06 13            	ld	hl, INC_DEC_ADDrp
    2254/     A40 : CD 0A 10            	call	get_strBufpoint
    2255/     A43 : E1                  	pop	hl
    2256/     A44 : C3 B1 10            	jp	cpstr_crlf	; CR, LF, 00h
    2257/     A47 :                     
    2258/     A47 :                     ; check POP rp
    2259/     A47 :                     
    2260/     A47 :                     chk_pop_rp:
    2261/     A47 : 01 04 00            	ld	bc, pop_rp_e - pop_rp_s
    2262/     A4A : 21 30 11            	ld	hl, pop_rp_s
    2263/     A4D : ED B1               	cpir
    2264/     A4F : 20 0F               	jr	nz, chk_push_rp
    2265/     A51 :                     
    2266/     A51 :                     ; POP RP
    2267/     A51 :                     
    2268/     A51 : 11 F1 11            	ld	de, POPstr
    2269/     A54 : CD 88 10            	call	mkopcstr
    2270/     A57 :                     
    2271/     A57 : 21 0E 13            	ld	hl, POP_PUSHrp
    2272/     A5A : CD FE 0F            	call	mk_str
    2273/     A5D : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2274/     A60 :                     
    2275/     A60 :                     ; check PUSH rp
    2276/     A60 :                     
    2277/     A60 :                     chk_push_rp:
    2278/     A60 : 01 04 00            	ld	bc, push_rp_e - push_rp_s
    2279/     A63 : 21 34 11            	ld	hl, push_rp_s
    2280/     A66 : ED B1               	cpir
    2281/     A68 : 20 0F               	jr	nz, chk_ex
    2282/     A6A :                     
    2283/     A6A :                     ; PUSH RP
    2284/     A6A :                     
    2285/     A6A : 11 F5 11            	ld	de, PUSHstr
    2286/     A6D : CD 88 10            	call	mkopcstr
    2287/     A70 :                     
    2288/     A70 : 21 0E 13            	ld	hl, POP_PUSHrp
    2289/     A73 : CD FE 0F            	call	mk_str
    2290/     A76 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2291/     A79 :                     
    2292/     A79 :                     ; check EX XX, XX
    2293/     A79 :                     
    2294/     A79 :                     chk_ex:
    2295/     A79 : FE 08               	cp	08H		; EX	AF,AF'
    2296/     A7B : 28 17               	jr	z, ex_af_af
    2297/     A7D : FE E3               	cp	0E3H		; EX	(SP),HL
    2298/     A7F : 28 21               	jr	z, ex_sp_hl
    2299/     A81 : FE EB               	cp	0EBH		; EX	DE,HL
    2300/     A83 : 20 25               	jr	nz, chk_1mc_bnh
    2301/     A85 :                     
    2302/     A85 :                     ; EX DE, HL
    2303/     A85 : 11 40 1F            	ld	de, RNDE
    2304/     A88 : CD DB 10            	call	mk_rcs
    2305/     A8B :                     
    2306/     A8B :                     ins_hl_opr:
    2307/     A8B : CD AE 10            	call	hl_crlf
    2308/     A8E :                     
    2309/     A8E :                     ins_ex_opc:
    2310/     A8E : 11 FA 11            	ld	de, EXstr
    2311/     A91 : C3 88 10            	jp	mkopcstr
    2312/     A94 :                     
    2313/     A94 :                     ; EX AF,AF'
    2314/     A94 :                     ex_af_af:
    2315/     A94 : 11 A4 11            	ld	de, RNAF
    2316/     A97 : CD DB 10            	call	mk_rcs
    2317/     A9A : 11 A7 11            	ld	de, RNAFX
    2318/     A9D : CD B1 10            	call	cpstr_crlf
    2319/     AA0 : 18 EC               	jr ins_ex_opc
    2320/     AA2 :                     
    2321/     AA2 :                     ; EX (SP),HL
    2322/     AA2 :                     ex_sp_hl:
    2323/     AA2 : 11 7A 1F            	ld	de, RNSP
    2324/     AA5 : CD CA 10            	call	mk_krkcs
    2325/     AA8 : 18 E1               	jr	ins_hl_opr
    2326/     AAA :                     
    2327/     AAA :                     ; check other one MC code
    2328/     AAA :                     
    2329/     AAA :                     chk_1mc_bnh:
    2330/     AAA :                     
    2331/     AAA :                     ; check JP (HL)
    2332/     AAA :                     
    2333/     AAA : FE E9               	cp	0E9H		; JP (HL) ?
    2334/     AAC : 20 0F               	jr	nz, chk_ret
    2335/     AAE :                     
    2336/     AAE :                     ; JP (HL)
    2337/     AAE : 11 AF 11            	ld	de, JPstr
    2338/     AB1 : CD 88 10            	call	mkopcstr	; "JP "
    2339/     AB4 :                     
    2340/     AB4 : 11 47 1F            	ld	de, RNHL
    2341/     AB7 : CD BF 10            	call	mk_krk_1
    2342/     ABA : C3 B4 10            	jp	insPostStr
    2343/     ABD :                     
    2344/     ABD :                     ; check RET CC
    2345/     ABD :                     chk_ret:
    2346/     ABD : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    2347/     AC0 : 21 FB 05            	ld	hl, RETCC_TBLS
    2348/     AC3 : ED B1               	cpir
    2349/     AC5 : 20 0F               	jr	nz, chk_rst
    2350/     AC7 :                     
    2351/     AC7 :                     ; RET CC
    2352/     AC7 :                     ; BC : 7 >= BC >= 0
    2353/     AC7 :                     
    2354/     AC7 :                     	; make opcode string
    2355/     AC7 : 11 AB 11            	ld	de, RETstr
    2356/     ACA : CD 88 10            	call	mkopcstr
    2357/     ACD :                     
    2358/     ACD :                     	; make operand string
    2359/     ACD :                     
    2360/     ACD : 21 EE 12            	ld	hl, CC_opr	; string base
    2361/     AD0 : CD FE 0F            	call	mk_str
    2362/     AD3 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2363/     AD6 :                     
    2364/     AD6 :                     ; check RST p
    2365/     AD6 :                     
    2366/     AD6 :                     chk_rst:
    2367/     AD6 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    2368/     AD9 : 21 18 06            	ld	hl, RST_TBLS
    2369/     ADC : ED B1               	cpir
    2370/     ADE : 20 17               	jr	nz, chk_2MC		; 2bytes MC
    2371/     AE0 :                     
    2372/     AE0 :                     ; RST p
    2373/     AE0 :                     
    2374/     AE0 : 11 BF 11            	ld	de, RSTstr
    2375/     AE3 : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2376/     AE6 :                     
    2377/     AE6 :                     ; 0 <= BC <= 7
    2378/     AE6 :                     ; 7: 00H  (0000 0 111 : 00 000 000)
    2379/     AE6 :                     ; 6: 08H  (0000 0 110 : 00 001 000)
    2380/     AE6 :                     ; 5: 10H  (0000 0 101 : 00 010 000)
    2381/     AE6 :                     ; 4: 18H  (0000 0 100 : 00 011 000)
    2382/     AE6 :                     ; 3: 20H  (0000 0 011 : 00 100 000)
    2383/     AE6 :                     ; 2: 28H  (0000 0 010 : 00 101 000)
    2384/     AE6 :                     ; 1: 30H  (0000 0 001 : 00 110 000)
    2385/     AE6 :                     ; 0: 38H  (0000 0 000 : 00 111 000)
    2386/     AE6 :                     ;
    2387/     AE6 : 79                  	ld	a, c
    2388/     AE7 : 2F                  	cpl		; not a
    2389/     AE8 : CB 27               	sla	a
    2390/     AEA : CB 27               	sla	a
    2391/     AEC : CB 27               	sla	a
    2392/     AEE : E6 38               	and	38H	; a = RST No.
    2393/     AF0 :                     
    2394/     AF0 : 5F                  	ld	e, a
    2395/     AF1 : 21 DC BF            	ld	hl, dasm_OprStr
    2396/     AF4 : C3 13 10            	jp	mk_n2crlf	; "nnH", CR, LF
    2397/     AF7 :                     
    2398/     AF7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2399/     AF7 :                     	; analysys 2 byte MC
    2400/     AF7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2401/     AF7 :                     
    2402/     AF7 :                     chk_2MC:
    2403/     AF7 :                     
    2404/     AF7 : F5                  	push	af
    2405/     AF8 : 3E 02               	ld	a, 2
    2406/     AFA : 32 C0 BF            	ld	(mc_Size), a
    2407/     AFD : F1                  	pop	af
    2408/     AFE :                     
    2409/     AFE :                     ; check LD r, nn
    2410/     AFE :                     
    2411/     AFE : 01 08 00            	ld	bc, ld_r_nn_e - ld_r_nn_s
    2412/     B01 : 21 B9 06            	ld	hl, ld_r_nn_s
    2413/     B04 : ED B1               	cpir
    2414/     B06 : 20 16               	jr	nz, chk_logop2
    2415/     B08 :                     
    2416/     B08 :                     ; LD r, nn
    2417/     B08 :                     
    2418/     B08 : CD EC 08            	call	get_r_num
    2419/     B0B : CD 07 10            	call	get_rstg_off
    2420/     B0E : CD DB 10            	call	mk_rcs		; "REG, "
    2421/     B11 :                     
    2422/     B11 : ED 5B BA BF         	ld	de, (dasm_adr)
    2423/     B15 : 13                  	inc	de
    2424/     B16 : 1A                  	ld	a, (de)		; get nn
    2425/     B17 : 5F                  	ld	e, a
    2426/     B18 : CD 56 10            	call	hex2str_asm	; "nnH"
    2427/     B1B : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2428/     B1E :                     
    2429/     B1E :                     ; check logical operation with 8 bit literal
    2430/     B1E :                     
    2431/     B1E :                     chk_logop2:
    2432/     B1E :                     
    2433/     B1E : 01 0A 00            	ld	bc, log_op_e - log_op_s
    2434/     B21 : 21 C1 06            	ld	hl, log_op_s
    2435/     B24 : ED B1               	cpir
    2436/     B26 : C2 72 0B            	jp	nz, chk_djnz
    2437/     B29 :                     
    2438/     B29 :                     ; logical operation with 8 bit literal
    2439/     B29 :                     
    2440/     B29 :                     
    2441/     B29 : C5                  	push	bc
    2442/     B2A : 21 30 13            	ld	hl, logop2str
    2443/     B2D : CD 0A 10            	call	get_strBufpoint
    2444/     B30 : CD 88 10            	call	mkopcstr		; make op code string
    2445/     B33 : C1                  	pop	bc
    2446/     B34 : 79                  	ld	a, c
    2447/     B35 :                     
    2448/     B35 : FE 01               	cp	1
    2449/     B37 : 28 14               	jr	z, acs_kn2k	; insert "A, (nn)"
    2450/     B39 : B7                  	or	a
    2451/     B3A : 28 1A               	jr	z, ins_kn2k	; insert "(nn), A"
    2452/     B3C : FE 07               	cp	7
    2453/     B3E : 38 03               	jr	c, ins_n2crlf	; insert  "nnH"
    2454/     B40 :                     
    2455/     B40 :                     ; insert "A, "
    2456/     B40 :                     
    2457/     B40 : CD D8 10            	call	a_colon_sp
    2458/     B43 :                     
    2459/     B43 :                     ; "nn"
    2460/     B43 :                     ins_n2crlf:
    2461/     B43 : ED 5B BA BF         	ld	de, (dasm_adr)
    2462/     B47 : 13                  	inc	de
    2463/     B48 : 1A                  	ld	a, (de)
    2464/     B49 : 5F                  	ld	e, a		; get nn
    2465/     B4A : C3 13 10            	jp	mk_n2crlf	; "nnH", CR, LF
    2466/     B4D :                     
    2467/     B4D :                     acs_kn2k:
    2468/     B4D : CD D8 10            	call	a_colon_sp	; "A, "
    2469/     B50 : CD 62 0B            	call	kn2k		; "(nnH)"
    2470/     B53 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2471/     B56 :                     
    2472/     B56 :                     ; "(nn), A"
    2473/     B56 :                     ins_kn2k:
    2474/     B56 : 21 DC BF            	ld	hl, dasm_OprStr	;operand str buffer
    2475/     B59 : CD 62 0B            	call	kn2k		; "(nnH)"
    2476/     B5C : CD 00 11            	call	ins_kmR		; " ,"
    2477/     B5F : C3 A3 10            	jp	a_crlf		; "A", CR, LF, 00h
    2478/     B62 :                     
    2479/     B62 :                     ; "(nnH)"
    2480/     B62 :                     kn2k:
    2481/     B62 : CD EB 10            	call	ins_kakkoL	; "("
    2482/     B65 : ED 5B BA BF         	ld	de, (dasm_adr)
    2483/     B69 : 13                  	inc	de
    2484/     B6A : 1A                  	ld	a, (de)		; get nn
    2485/     B6B : 5F                  	ld	e, a		; e: nn
    2486/     B6C : CD 56 10            	call	hex2str_asm	; hex strings
    2487/     B6F : C3 EF 10            	jp	ins_kakkoR	; ")"
    2488/     B72 :                     
    2489/     B72 :                     
    2490/     B72 :                     ; check DJNZ nn
    2491/     B72 :                     chk_djnz:
    2492/     B72 : FE 10               	cp	10H
    2493/     B74 : 20 05               	jr	nz, chk_jrnn
    2494/     B76 :                     
    2495/     B76 :                     ; check DJNZ nn
    2496/     B76 : 11 B5 11            	ld	de, DJNZstr
    2497/     B79 : 18 07               	jr	jr_n4crlf
    2498/     B7B :                     
    2499/     B7B :                     ; check jr nn
    2500/     B7B :                     chk_jrnn:
    2501/     B7B : FE 18               	cp	18H
    2502/     B7D : 20 0C               	jr	nz, chk_jrcc	; not JR relative
    2503/     B7F :                     
    2504/     B7F :                     ; JR Relative
    2505/     B7F : 11 B2 11            	ld	de, JRstr
    2506/     B82 :                     jr_n4crlf:
    2507/     B82 : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2508/     B85 : 21 DC BF            	ld	hl, dasm_OprStr
    2509/     B88 : C3 37 10            	jp	mkRel_str	; "nnnnH",cr,lf : nnnn : branch address
    2510/     B8B :                     
    2511/     B8B :                     ; JR CC, nn
    2512/     B8B :                     
    2513/     B8B :                     chk_jrcc:
    2514/     B8B : 01 04 00            	ld	bc, JRCC_TBLE - JRCC_TBLS1
    2515/     B8E : 21 04 06            	ld	hl, JRCC_TBLS1
    2516/     B91 : ED B1               	cpir
    2517/     B93 : 20 12               	jr	nz, chk_3MC	; no, check 3 bnytes MC
    2518/     B95 :                     
    2519/     B95 :                     ; JR CC, nn(Relative Value)
    2520/     B95 :                     
    2521/     B95 : 11 B2 11            	ld	de, JRstr
    2522/     B98 : CD 88 10            	call	mkopcstr
    2523/     B9B : 21 FE 12            	ld	hl, JRCC_opr1	; string base
    2524/     B9E : CD FE 0F            	call	mk_str		; "NZ", "Z", "NC", "C"
    2525/     BA1 : CD 00 11            	call	ins_kmR		; ", "
    2526/     BA4 : C3 37 10            	jp	mkRel_str	; "nnnnH", cr, lf
    2527/     BA7 :                     
    2528/     BA7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2529/     BA7 :                     	; analysys 3 byte MC
    2530/     BA7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2531/     BA7 :                     
    2532/     BA7 :                     chk_3MC:
    2533/     BA7 : F5                  	push	af
    2534/     BA8 : 3E 03               	ld	a, 3
    2535/     BAA : 32 C0 BF            	ld	(mc_Size), a
    2536/     BAD : F1                  	pop	af
    2537/     BAE :                     
    2538/     BAE : 01 04 00            	ld	bc, THREE_OPTBLe - THREE_OPTBL
    2539/     BB1 : 21 CB 06            	ld	hl, THREE_OPTBL
    2540/     BB4 : ED B1               	cpir
    2541/     BB6 : C2 C8 0B            	jp	nz, chk_ld16
    2542/     BB9 :                     
    2543/     BB9 :                     ; LD rp, nnnn
    2544/     BB9 :                     
    2545/     BB9 : 21 44 13            	ld	hl, logop3str
    2546/     BBC : CD 0A 10            	call	get_strBufpoint
    2547/     BBF : CD DB 10            	call	mk_rcs		; "Reg, "
    2548/     BC2 :                     
    2549/     BC2 :                     get_n4crlf:
    2550/     BC2 : CD F0 0B            	call	get_n4
    2551/     BC5 : C3 19 10            	jp	mk_n4crlf	; "nnnnH", CR, LF, 00h
    2552/     BC8 :                     
    2553/     BC8 :                     ; LD 16bit literal
    2554/     BC8 :                     chk_ld16:
    2555/     BC8 : FE 22               	cp	22h
    2556/     BCA : 28 12               	jr	z, ins_kkhl	; "(nnnnH), HL"
    2557/     BCC : FE 32               	cp	32h
    2558/     BCE : 28 14               	jr	z, ins_kka	; "(nnnnH), A"
    2559/     BD0 : FE 2A               	cp	2ah
    2560/     BD2 : 28 26               	jr	z, ins_hlkk	; "HL, (nnnnH)"
    2561/     BD4 : FE 3A               	cp	3ah
    2562/     BD6 : C2 09 0C            	jp	nz, chk_jpn4	; check jp n4
    2563/     BD9 :                     
    2564/     BD9 :                     ; "A, (nnnnH)"
    2565/     BD9 : CD D8 10            	call	a_colon_sp	; "A, "
    2566/     BDC : 18 22               	jr	kn4kcrlf
    2567/     BDE :                     
    2568/     BDE :                     ; "(nnnnH), HL"
    2569/     BDE :                     ins_kkhl:
    2570/     BDE : CD EA 0B            	call	kn4hk
    2571/     BE1 : C3 AE 10            	jp	hl_crlf		; "HL",cr,lf
    2572/     BE4 :                     
    2573/     BE4 :                     ; "(nnnnH), A"
    2574/     BE4 :                     ins_kka:
    2575/     BE4 : CD EA 0B            	call	kn4hk
    2576/     BE7 : C3 A3 10            	jp	a_crlf		; "A",cr,lf
    2577/     BEA :                     
    2578/     BEA :                     kn4hk:
    2579/     BEA : CD F0 0B            	call	get_n4
    2580/     BED : C3 1F 10            	jp	ins_kn4kcs	; "(nnnnH), "
    2581/     BF0 :                     
    2582/     BF0 :                     get_n4:
    2583/     BF0 : E5                  	push	hl
    2584/     BF1 : 2A BA BF            	ld	hl, (dasm_adr)
    2585/     BF4 : 23                  	inc	hl
    2586/     BF5 : 5E                  	ld	e, (hl)
    2587/     BF6 : 23                  	inc	hl
    2588/     BF7 : 56                  	ld	d, (hl)
    2589/     BF8 : E1                  	pop	hl
    2590/     BF9 : C9                  	ret
    2591/     BFA :                     
    2592/     BFA :                     ; "HL, (nnnnH)"
    2593/     BFA :                     ins_hlkk:
    2594/     BFA : 11 47 1F            	ld	de, RNHL
    2595/     BFD : CD DB 10            	call	mk_rcs		; "HL ,"
    2596/     C00 :                     
    2597/     C00 :                     kn4kcrlf:
    2598/     C00 : CD F0 0B            	call	get_n4
    2599/     C03 : CD 2E 10            	call	mk_kn4k		; "(nnnnH)"
    2600/     C06 : C3 B4 10            	jp	insPostStr	; cr, lf
    2601/     C09 :                     
    2602/     C09 :                     ; check JP literal
    2603/     C09 :                     
    2604/     C09 :                     chk_jpn4:
    2605/     C09 : FE C3               	cp	0C3H		; JP literal ?
    2606/     C0B : 20 08               	jr	nz, chk_calln4	; not JP literal
    2607/     C0D :                     
    2608/     C0D :                     ; "JP nnnnH"
    2609/     C0D :                     
    2610/     C0D : 11 AF 11            	ld	de, JPstr
    2611/     C10 : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2612/     C13 : 18 AD               	jr	get_n4crlf
    2613/     C15 :                     
    2614/     C15 :                     ; check call literal
    2615/     C15 :                     
    2616/     C15 :                     chk_calln4:
    2617/     C15 : FE CD               	cp	0CDH		; CALL literal ?
    2618/     C17 : 20 08               	jr	nz, chk_jpcc
    2619/     C19 :                     
    2620/     C19 :                     ; "CALL nnnnH",cr,lf
    2621/     C19 :                     
    2622/     C19 : 11 BA 11            	ld	de, CALLstr
    2623/     C1C : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2624/     C1F : 18 A1               	jr	get_n4crlf
    2625/     C21 :                     
    2626/     C21 :                     
    2627/     C21 :                     ; check 3 byte machine code: branch JP CC, nnnn
    2628/     C21 :                     
    2629/     C21 :                     chk_jpcc:
    2630/     C21 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    2631/     C24 : 21 08 06            	ld	hl, JPCC_TBLS
    2632/     C27 : ED B1               	cpir
    2633/     C29 : 20 11               	jr	nz, chk_calcc
    2634/     C2B :                     
    2635/     C2B :                     ; JP CC, nnnn
    2636/     C2B :                     ; BC : 7 >= BC >= 0
    2637/     C2B :                     
    2638/     C2B : 11 AF 11            	ld	de, JPstr
    2639/     C2E :                     
    2640/     C2E :                     CC_NNNN:
    2641/     C2E : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2642/     C31 :                     
    2643/     C31 : 21 EE 12            	ld	hl, CC_opr	; string base
    2644/     C34 : CD FE 0F            	call	mk_str		; de: point (string end) + 1
    2645/     C37 : CD 00 11            	call	ins_kmR		; " ,"
    2646/     C3A : 18 86               	jr	get_n4crlf	; "nnnnh", cr,lf
    2647/     C3C :                     
    2648/     C3C :                     
    2649/     C3C :                     ; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    2650/     C3C :                     
    2651/     C3C :                     chk_calcc:
    2652/     C3C : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    2653/     C3F : 21 10 06            	ld	hl, CLCC_TBLS
    2654/     C42 : ED B1               	cpir
    2655/     C44 : 20 05               	jr	nz, chk_0CBH
    2656/     C46 :                     
    2657/     C46 :                     ; CALL CC, nnnn
    2658/     C46 :                     ; BC : 7 >= BC >= 0 CALLstr
    2659/     C46 :                     
    2660/     C46 : 11 BA 11            	ld	de, CALLstr
    2661/     C49 : 18 E3               	jr	CC_NNNN
    2662/     C4B :                     
    2663/     C4B :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2664/     C4B :                     	; OPECODE 0CBH check
    2665/     C4B :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2666/     C4B :                     
    2667/     C4B :                     chk_0CBH:
    2668/     C4B : 2A BA BF            	ld	hl, (dasm_adr)
    2669/     C4E : 23                  	inc	hl		; 2nd opecode address
    2670/     C4F :                     
    2671/     C4F : F5                  	push	af
    2672/     C50 : 3E 02               	ld	a, 2
    2673/     C52 : 32 C0 BF            	ld	(mc_Size), a	; set 2bytes MC
    2674/     C55 : F1                  	pop	af
    2675/     C56 :                     
    2676/     C56 : FE CB               	cp	0cbh
    2677/     C58 : C2 11 0D            	jp	nz, chk_0DDH
    2678/     C5B :                     
    2679/     C5B : 7E                  	ld	a, (hl)		; a : 2nd opecode
    2680/     C5C : 21 DC BF            	ld	hl, dasm_OprStr ; set operand string buffer
    2681/     C5F :                     
    2682/     C5F : FE 08               	cp	08h
    2683/     C61 : DA 9A 0C            	jp	c, mk_rlcr
    2684/     C64 : FE 10               	cp	10h
    2685/     C66 : DA A3 0C            	jp	c, mk_rrcr
    2686/     C69 : FE 18               	cp	18h
    2687/     C6B : DA AC 0C            	jp	c, mk_rlr
    2688/     C6E : FE 20               	cp	20h
    2689/     C70 : DA B5 0C            	jp	c, mk_rrr
    2690/     C73 : FE 28               	cp	28h
    2691/     C75 : DA BE 0C            	jp	c, mk_slar
    2692/     C78 : FE 30               	cp	30h
    2693/     C7A : DA C7 0C            	jp	c, mk_srar
    2694/     C7D : FE 38               	cp	38h
    2695/     C7F : DA EB 0C            	jp	c, op_err
    2696/     C82 : FE 40               	cp	40h
    2697/     C84 : DA D0 0C            	jp	c, mk_srlr
    2698/     C87 : FE 80               	cp	80h
    2699/     C89 : DA D9 0C            	jp	c, mk_bitr
    2700/     C8C : FE C0               	cp	0c0h
    2701/     C8E : DA E2 0C            	jp	c, mk_resr
    2702/     C91 :                     
    2703/     C91 :                     ; make SET n, r, SET n, (HL)
    2704/     C91 :                     
    2705/     C91 : CD F1 0C            	call	mk_bitr_str
    2706/     C94 : 11 B9 12            	ld	de, SETstr
    2707/     C97 : C3 88 10            	jp	mkopcstr
    2708/     C9A :                     
    2709/     C9A :                     
    2710/     C9A :                     ; make RLC r, RLC (HL)
    2711/     C9A :                     mk_rlcr:
    2712/     C9A : CD F6 0C            	call	ins_rstg
    2713/     C9D : 11 34 12            	ld	de, RLCstr
    2714/     CA0 : C3 88 10            	jp	mkopcstr
    2715/     CA3 :                     
    2716/     CA3 :                     ; make RRC r, RRC (HL)
    2717/     CA3 :                     mk_rrcr:
    2718/     CA3 : CD F6 0C            	call	ins_rstg
    2719/     CA6 : 11 38 12            	ld	de, RRCstr
    2720/     CA9 : C3 88 10            	jp	mkopcstr
    2721/     CAC :                     
    2722/     CAC :                     ; make RL r, RL (HL)
    2723/     CAC :                     mk_rlr:
    2724/     CAC : CD F6 0C            	call	ins_rstg
    2725/     CAF : 11 3C 12            	ld	de, RLstr
    2726/     CB2 : C3 88 10            	jp	mkopcstr
    2727/     CB5 :                     
    2728/     CB5 :                     ; make RR r, RR (HL)
    2729/     CB5 :                     mk_rrr:
    2730/     CB5 : CD F6 0C            	call	ins_rstg
    2731/     CB8 : 11 3F 12            	ld	de, RRstr
    2732/     CBB : C3 88 10            	jp	mkopcstr
    2733/     CBE :                     
    2734/     CBE :                     ; make SLA r, SLA (HL)
    2735/     CBE :                     mk_slar:
    2736/     CBE : CD F6 0C            	call	ins_rstg
    2737/     CC1 : 11 42 12            	ld	de, SLAstr
    2738/     CC4 : C3 88 10            	jp	mkopcstr
    2739/     CC7 :                     
    2740/     CC7 :                     ; make SRA r, SRA (HL)
    2741/     CC7 :                     mk_srar:
    2742/     CC7 : CD F6 0C            	call	ins_rstg
    2743/     CCA : 11 46 12            	ld	de, SRAstr
    2744/     CCD : C3 88 10            	jp	mkopcstr
    2745/     CD0 :                     
    2746/     CD0 :                     ; make SRL r, SRL (HL)
    2747/     CD0 :                     mk_srlr:
    2748/     CD0 : CD F6 0C            	call	ins_rstg
    2749/     CD3 : 11 4A 12            	ld	de, SRLstr
    2750/     CD6 : C3 88 10            	jp	mkopcstr
    2751/     CD9 :                     
    2752/     CD9 :                     ; make BIT n, r, BIT n, (HL)
    2753/     CD9 :                     mk_bitr:
    2754/     CD9 : CD F1 0C            	call	mk_bitr_str
    2755/     CDC : 11 4E 12            	ld	de, BITstr
    2756/     CDF : C3 88 10            	jp	mkopcstr
    2757/     CE2 :                     
    2758/     CE2 :                     ; make RES n, r, RES n, (HL)
    2759/     CE2 :                     mk_resr:
    2760/     CE2 : CD F1 0C            	call	mk_bitr_str
    2761/     CE5 : 11 52 12            	ld	de, RESstr
    2762/     CE8 : C3 88 10            	jp	mkopcstr
    2763/     CEB :                     
    2764/     CEB :                     op_err:
    2765/     CEB : 11 BD 12            	ld	de, ER_OPMSG
    2766/     CEE : C3 88 10            	jp	mkopcstr
    2767/     CF1 :                     
    2768/     CF1 :                     ;-------------------------------------------
    2769/     CF1 :                     ; input a : 2nd opecode
    2770/     CF1 :                     ;	hl : make string buffer
    2771/     CF1 :                     ; make "bit No, r" string to *hl
    2772/     CF1 :                     ; (ex) *hl = "1, B"
    2773/     CF1 :                     ;-------------------------------------------
    2774/     CF1 :                     mk_bitr_str:
    2775/     CF1 : F5                  	push	af
    2776/     CF2 : CD 03 0D            	call	set_bitno
    2777/     CF5 : F1                  	pop	af
    2778/     CF6 :                     
    2779/     CF6 :                     ins_rstg:
    2780/     CF6 : E6 07               	and	07h
    2781/     CF8 : 4F                  	ld	c, a	; table offset
    2782/     CF9 : 06 00               	ld	b, 0		; bc : string offset
    2783/     CFB : E5                  	push	hl
    2784/     CFC : CD 07 10            	call	get_rstg_off	; get string address to de
    2785/     CFF : E1                  	pop	hl
    2786/     D00 : C3 B1 10            	jp	cpstr_crlf	; "REG", CR, LF, 00h
    2787/     D03 :                     ;
    2788/     D03 :                     ; input hl : make string buffer
    2789/     D03 :                     ;
    2790/     D03 :                     set_bitno:
    2791/     D03 : E6 38               	and	38h
    2792/     D05 : 0F                  	rrca
    2793/     D06 : 0F                  	rrca
    2794/     D07 : 0F                  	rrca
    2795/     D08 : 47                  	ld	b, a	; bit number
    2796/     D09 :                     
    2797/     D09 : 3E 30               	ld	a, 30h
    2798/     D0B : B0                  	or	b		; a : bit string "0" - "7"
    2799/     D0C : 77                  	ld	(hl), a
    2800/     D0D : 23                  	inc	hl
    2801/     D0E : C3 00 11            	jp	ins_kmR
    2802/     D11 :                     
    2803/     D11 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2804/     D11 :                     	; OPECODE 0DDH check
    2805/     D11 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2806/     D11 :                     
    2807/     D11 :                     chk_0DDH:
    2808/     D11 : FE DD               	cp	0ddh
    2809/     D13 : C2 B7 0E            	jp	nz, chk_0EDH
    2810/     D16 :                     
    2811/     D16 : 11 74 1F            	ld	de, RNIX
    2812/     D19 : ED 53 BC BF         	ld	(reg_xy), de	; save index reg string
    2813/     D1D : 11 60 13            	ld	de, addixrp_tbl
    2814/     D20 : ED 53 BE BF         	ld	(xy_srtp), de
    2815/     D24 :                     
    2816/     D24 :                     chk_0DDH_1:
    2817/     D24 :                     
    2818/     D24 : 7E                  	ld	a, (hl)		; get 2nd opcode
    2819/     D25 :                     
    2820/     D25 : FE E3               	cp	0E3h	; EX (SP),IX
    2821/     D27 : CA 6B 0D            	jp	z, ins_kspkix
    2822/     D2A : FE E9               	cp	0E9h	; JP (IX)
    2823/     D2C : CA 59 0D            	jp	z, ins_jpix
    2824/     D2F : FE F9               	cp	0F9h	; LD SP, IX
    2825/     D31 : CA 7A 0D            	jp	z, ins_spix
    2826/     D34 :                     
    2827/     D34 : 01 04 00            	ld	bc, DD_2NDTBL1 - DD_2NDTBL
    2828/     D37 : 21 D3 06            	ld	hl, DD_2NDTBL
    2829/     D3A : ED B1               	cpir
    2830/     D3C : CA 83 0D            	jp	z, ins_ixrp
    2831/     D3F :                     
    2832/     D3F : 01 04 00            	ld	bc, DD_2NDTBL2 - DD_2NDTBL1
    2833/     D42 : 21 D7 06            	ld	hl, DD_2NDTBL1
    2834/     D45 : ED B1               	cpir
    2835/     D47 : C2 98 0D            	jp	nz, chk_0DD3op
    2836/     D4A :                     
    2837/     D4A :                     ; INC	IX
    2838/     D4A :                     ; DEC	IX
    2839/     D4A :                     ; PUSH	IX
    2840/     D4A :                     ; POP	IX
    2841/     D4A : 21 58 13            	ld	hl, dd_2opt
    2842/     D4D : CD 0A 10            	call	get_strBufpoint
    2843/     D50 : CD 88 10            	call	mkopcstr		; inseert OPCODE strings to dasm_OpcStr
    2844/     D53 :                     
    2845/     D53 : 21 DC BF            	ld	hl, dasm_OprStr
    2846/     D56 : C3 A8 10            	jp	ix_crlf			; "IX", CR, LF, 00h
    2847/     D59 :                     
    2848/     D59 :                     ; JP	(IX)
    2849/     D59 :                     ins_jpix:
    2850/     D59 : ED 5B BC BF         	ld	de, (reg_xy)
    2851/     D5D :                     ins_jpix1:
    2852/     D5D : D5                  	push	de
    2853/     D5E : 11 AF 11            	ld	de, JPstr
    2854/     D61 : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2855/     D64 :                     
    2856/     D64 : D1                  	pop	de
    2857/     D65 : CD BF 10            	call	mk_krk_1
    2858/     D68 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    2859/     D6B :                     
    2860/     D6B :                     ; EX	(SP),IX
    2861/     D6B :                     ins_kspkix:
    2862/     D6B : 11 FA 11            	ld	de, EXstr
    2863/     D6E : CD 88 10            	call	mkopcstr	; de : next string buffer addr
    2864/     D71 : 11 7A 1F            	ld	de, RNSP
    2865/     D74 : CD CA 10            	call	mk_krkcs	; "(SP), "
    2866/     D77 : C3 A8 10            	jp	ix_crlf		; "IX",cr,lf
    2867/     D7A :                     
    2868/     D7A :                     ; LD	SP,IX
    2869/     D7A :                     ins_spix:
    2870/     D7A : 11 7A 1F            	ld	de, RNSP
    2871/     D7D : CD DB 10            	call	mk_rcs		; "SP, "
    2872/     D80 : C3 A8 10            	jp	ix_crlf		; "IX",cr,lf
    2873/     D83 :                     
    2874/     D83 :                     ; ADD	IX,BC
    2875/     D83 :                     ; ADD	IX,DE
    2876/     D83 :                     ; ADD	IX,IX
    2877/     D83 :                     ; ADD	IX,SP
    2878/     D83 :                     ins_ixrp:
    2879/     D83 : CD 85 10            	call	add_opstr	; de : next string buffer addr
    2880/     D86 :                     
    2881/     D86 : ED 5B BC BF         	ld	de, (reg_xy)
    2882/     D8A : CD DB 10            	call	mk_rcs		; "IX, "
    2883/     D8D :                     
    2884/     D8D : E5                  	push	hl
    2885/     D8E : 2A BE BF            	ld	hl, (xy_srtp)
    2886/     D91 : CD 0A 10            	call	get_strBufpoint
    2887/     D94 : E1                  	pop	hl
    2888/     D95 : C3 B1 10            	jp	cpstr_crlf	; "REG",cr,lf
    2889/     D98 :                     
    2890/     D98 :                     ;
    2891/     D98 :                     ; check 0DD 3bytes MC
    2892/     D98 :                     ;
    2893/     D98 :                     chk_0DD3op:
    2894/     D98 : F5                  	push	af
    2895/     D99 : 3E 03               	ld	a, 3
    2896/     D9B : 32 C0 BF            	ld	(mc_Size), a	; 2byte machine code
    2897/     D9E : F1                  	pop	af
    2898/     D9F :                     
    2899/     D9F : 01 0E 00            	ld	bc, dd_ld_tble - dd_ld_tbl
    2900/     DA2 : 21 38 11            	ld	hl, dd_ld_tbl
    2901/     DA5 : ED B1               	cpir
    2902/     DA7 : CA D7 0D            	jp	z, dd_ld
    2903/     DAA :                     
    2904/     DAA : FE 86               	cp	86h
    2905/     DAC : CA 02 0E            	jp	z, dd_mix
    2906/     DAF : FE 8E               	cp	8eh
    2907/     DB1 : CA 0D 0E            	jp	z, dd_mix1
    2908/     DB4 : FE 9E               	cp	9eh
    2909/     DB6 : CA 12 0E            	jp	z, dd_mix2
    2910/     DB9 :                     
    2911/     DB9 : 01 07 00            	ld	bc, dd_log_tble - dd_log_tbl
    2912/     DBC : 21 46 11            	ld	hl, dd_log_tbl
    2913/     DBF : ED B1               	cpir
    2914/     DC1 : C2 17 0E            	jp	nz, chk_0DD4op
    2915/     DC4 :                     
    2916/     DC4 :                     ;
    2917/     DC4 :                     ; make "SUB (IX+nn)", "AND (IX+nn)", "XOR (IX+nn)"
    2918/     DC4 :                     ;       "OR (IX+nn)",  "CP (IX+nn)"
    2919/     DC4 :                     ;      "INC (IX+nn)", "DEC (IX+nn)"
    2920/     DC4 :                     ;
    2921/     DC4 : 21 70 13            	ld	hl, ddlogtbl
    2922/     DC7 : CD 0A 10            	call	get_strBufpoint
    2923/     DCA : CD 88 10            	call	mkopcstr
    2924/     DCD :                     
    2925/     DCD :                     mk_kixpnk:
    2926/     DCD : ED 5B BC BF         	ld	de, (reg_xy)
    2927/     DD1 :                     
    2928/     DD1 :                     mk_kiypnk:
    2929/     DD1 : 21 DC BF            	ld	hl, dasm_OprStr
    2930/     DD4 : C3 CE 0F            	jp	kixypnk_crlf		; "(IX+nnH)",cr,lf
    2931/     DD7 :                     
    2932/     DD7 :                     ;
    2933/     DD7 :                     ; make "LD (IX+nn), r" or "LD r, (IX+nn)"
    2934/     DD7 :                     ;
    2935/     DD7 :                     dd_ld:
    2936/     DD7 : 79                  	ld	a, c
    2937/     DD8 : FE 07               	cp	7
    2938/     DDA : D2 EF 0D            	jp	nc, dd_ld1
    2939/     DDD :                     	
    2940/     DDD :                     ; LD (IX+nn), r
    2941/     DDD : ED 5B BC BF         	ld	de, (reg_xy)
    2942/     DE1 : CD C5 0F            	call	kixypnk_cs	; make "(IX+nn), "
    2943/     DE4 :                     
    2944/     DE4 : E5                  	push	hl
    2945/     DE5 : 21 7E 13            	ld	hl, dd_ldtbl
    2946/     DE8 : CD 0A 10            	call	get_strBufpoint
    2947/     DEB : E1                  	pop	hl
    2948/     DEC : C3 B1 10            	jp	cpstr_crlf	; "A", "L", "H", "E", D", "C", "B"
    2949/     DEF :                     				; CR, LF, 00h
    2950/     DEF :                     	
    2951/     DEF :                     ; LD r, (IX+nn)
    2952/     DEF :                     dd_ld1:
    2953/     DEF : D6 07               	sub	7
    2954/     DF1 : 4F                  	ld	c, a
    2955/     DF2 : 21 7E 13            	ld	hl, dd_ldtbl
    2956/     DF5 : CD 0A 10            	call	get_strBufpoint
    2957/     DF8 :                     
    2958/     DF8 : CD DB 10            	call	mk_rcs		; "REG, "
    2959/     DFB :                     dd_mix4:
    2960/     DFB : ED 5B BC BF         	ld	de, (reg_xy)
    2961/     DFF : C3 CE 0F            	jp	kixypnk_crlf	; "(IX+nn)", CR, LF, 00h
    2962/     E02 :                     
    2963/     E02 :                     
    2964/     E02 :                     ; "ADD A,(IX+nn)"
    2965/     E02 :                     dd_mix:
    2966/     E02 : 11 CB 11            	ld	de, ADDstr
    2967/     E05 :                     dd_mix3:
    2968/     E05 : CD 88 10            	call	mkopcstr	; "ADD"
    2969/     E08 : CD D8 10            	call	a_colon_sp	; "A, "
    2970/     E0B : 18 EE               	jr	dd_mix4		; "(IX+nn)",cr,lf
    2971/     E0D :                     
    2972/     E0D :                     ;"ADC A,(IX+nn)"
    2973/     E0D :                     dd_mix1:
    2974/     E0D : 11 CF 11            	ld	de, ADCstr
    2975/     E10 : 18 F3               	jr	dd_mix3
    2976/     E12 :                     
    2977/     E12 :                     ;"SBC A,(IX+nn)"
    2978/     E12 :                     dd_mix2:
    2979/     E12 : 11 D7 11            	ld	de, SBCstr
    2980/     E15 : 18 EE               	jr	dd_mix3
    2981/     E17 :                     
    2982/     E17 :                     ;
    2983/     E17 :                     ; check 0DD 4bytes MC
    2984/     E17 :                     ;
    2985/     E17 :                     chk_0DD4op:
    2986/     E17 : F5                  	push	af
    2987/     E18 : 3E 04               	ld	a, 4
    2988/     E1A : 32 C0 BF            	ld	(mc_Size), a	; 2byte machine code
    2989/     E1D : F1                  	pop	af
    2990/     E1E :                     
    2991/     E1E : FE 21               	cp	21h
    2992/     E20 : CA 3D 0E            	jp	z, DD_21
    2993/     E23 : FE 22               	cp	22h
    2994/     E25 : CA 4A 0E            	jp	z, DD_22
    2995/     E28 : FE 2A               	cp	2ah
    2996/     E2A : CA 53 0E            	jp	z, DD_2a
    2997/     E2D : FE 36               	cp	36h
    2998/     E2F : C2 63 0E            	jp	nz, chk_DD_CB
    2999/     E32 :                     ; DD 36
    3000/     E32 :                     ; "LD (IX+xx), yy"
    3001/     E32 :                     
    3002/     E32 : ED 5B BC BF         	ld	de, (reg_xy)
    3003/     E36 : CD C5 0F            	call	kixypnk_cs	; "(IX+xx), "
    3004/     E39 : 5A                  	ld	e, d		; e: yy
    3005/     E3A : C3 13 10            	jp	mk_n2crlf	; "0yyH",cr,lf
    3006/     E3D :                     
    3007/     E3D :                     
    3008/     E3D :                     ; "LD IX, nnnn"
    3009/     E3D :                     DD_21:
    3010/     E3D : ED 5B BC BF         	ld	de, (reg_xy)
    3011/     E41 : CD DB 10            	call	mk_rcs		; "IX, "
    3012/     E44 : CD F3 0F            	call	get_nnnn
    3013/     E47 : C3 19 10            	jp	mk_n4crlf	; "nnnnH",cr,lf
    3014/     E4A :                     
    3015/     E4A :                     ; "LD (nnnn), IX"
    3016/     E4A :                     DD_22:
    3017/     E4A : CD F3 0F            	call	get_nnnn
    3018/     E4D : CD 1F 10            	call	ins_kn4kcs	; "(nnnnH), "
    3019/     E50 : C3 A8 10            	jp	ix_crlf		; "IX",cr,lf
    3020/     E53 :                     
    3021/     E53 :                     ; "LD IX, (nnnn)"
    3022/     E53 :                     DD_2a:
    3023/     E53 : ED 5B BC BF         	ld	de, (reg_xy)
    3024/     E57 :                     DD_2a1:
    3025/     E57 : CD DB 10            	call	mk_rcs		; "IX, "
    3026/     E5A : CD F3 0F            	call	get_nnnn
    3027/     E5D : CD 2E 10            	call	mk_kn4k		; "(nnnnH)"
    3028/     E60 : C3 B4 10            	jp	insPostStr	; cr,lf
    3029/     E63 :                     
    3030/     E63 :                     chk_DD_CB
    3031/     E63 : FE CB               	cp	0CBH
    3032/     E65 : C2 EB 0C            	jp	nz, op_err
    3033/     E68 :                     
    3034/     E68 : CD F3 0F            	call	get_nnnn	; d: 3rd OP, e:nn
    3035/     E6B : 7A                  	ld	a, d
    3036/     E6C :                     
    3037/     E6C : 01 07 00            	ld	bc, dd_rt_tble - dd_rt_tbles
    3038/     E6F : 21 4D 11            	ld	hl, dd_rt_tbles
    3039/     E72 : ED B1               	cpir
    3040/     E74 : C2 83 0E            	jp	nz, DD_CB_nn_XX
    3041/     E77 :                     
    3042/     E77 : 21 B6 13            	ld	hl, dd_rt_str
    3043/     E7A : CD 0A 10            	call	get_strBufpoint
    3044/     E7D : CD 88 10            	call	mkopcstr	; RLC, RRC, RL, RR, SLA, SRA, SRL
    3045/     E80 : C3 CD 0D            	jp	mk_kixpnk	; "(IX+nnH)",cr,lf
    3046/     E83 :                     
    3047/     E83 :                     ; check BIT, RES, SET
    3048/     E83 :                     DD_CB_nn_XX:
    3049/     E83 :                     
    3050/     E83 :                     	; check undefine MC
    3051/     E83 : 01 18 00            	ld	bc, dd_bit_opTble - dd_bit_opTbl
    3052/     E86 : 21 54 11            	ld	hl, dd_bit_opTbl
    3053/     E89 : ED B1               	cpir
    3054/     E8B : C2 EB 0C            	jp	nz, op_err
    3055/     E8E :                     
    3056/     E8E : FE 80               	cp	80h
    3057/     E90 : DA A7 0E            	jp	c, dd_bit
    3058/     E93 : FE C0               	cp	0c0h
    3059/     E95 : DA AF 0E            	jp	c, dd_res
    3060/     E98 :                     
    3061/     E98 :                     ; DD_SET
    3062/     E98 :                     ; "SET i, (IX+nn)"
    3063/     E98 :                     
    3064/     E98 : 11 B9 12            	ld	de, SETstr
    3065/     E9B : CD 88 10            	call	mkopcstr
    3066/     E9E :                     
    3067/     E9E :                     DD_BSR:
    3068/     E9E :                     
    3069/     E9E : 21 DC BF            	ld	hl, dasm_OprStr ; set operand string buffer
    3070/     EA1 : CD 03 0D            	call	set_bitno	; "i, "
    3071/     EA4 : C3 FB 0D            	jp	dd_mix4		; "(IX+nn)", cr,lf
    3072/     EA7 :                     
    3073/     EA7 :                     ; DD_BIT
    3074/     EA7 :                     ; "BIT i, (IX+nn)"
    3075/     EA7 :                     dd_bit:
    3076/     EA7 : 11 4E 12            	ld	de, BITstr
    3077/     EAA : CD 88 10            	call	mkopcstr
    3078/     EAD : 18 EF               	jr	DD_BSR
    3079/     EAF :                     
    3080/     EAF :                     ; DD_RES
    3081/     EAF :                     ; "RES i, (IX+nn)"
    3082/     EAF :                     dd_res:
    3083/     EAF : 11 52 12            	ld	de, RESstr
    3084/     EB2 : CD 88 10            	call	mkopcstr
    3085/     EB5 : 18 E7               	jr	DD_BSR
    3086/     EB7 :                     
    3087/     EB7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3088/     EB7 :                     	; OPECODE 0EDH check
    3089/     EB7 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3090/     EB7 :                     
    3091/     EB7 :                     chk_0EDH:
    3092/     EB7 : FE ED               	cp	0edh
    3093/     EB9 : C2 B4 0F            	jp	nz, chk_0FDH
    3094/     EBC :                     
    3095/     EBC : 7E                  	ld	a, (hl)		; get 2nd opcode
    3096/     EBD :                     
    3097/     EBD :                     	; check undefine MC
    3098/     EBD : 01 38 00            	ld	bc, ed_op_tble - ed_op_tbl
    3099/     EC0 : 21 6C 11            	ld	hl, ed_op_tbl
    3100/     EC3 : ED B1               	cpir
    3101/     EC5 : C2 EB 0C            	jp	nz, op_err
    3102/     EC8 :                     
    3103/     EC8 : 79                  	ld	a, c
    3104/     EC9 : FE 06               	cp	6
    3105/     ECB : DA 95 0F            	jp	c, ed_4mc
    3106/     ECE : FE 1B               	cp	27
    3107/     ED0 : DA 87 0F            	jp	c, ed_no_opr
    3108/     ED3 : FE 1E               	cp	30
    3109/     ED5 : DA 74 0F            	jp	c, ed_im
    3110/     ED8 : CA 54 0F            	jp	z, ed_ld_ar
    3111/     EDB : FE 1F               	cp	31
    3112/     EDD : CA 5D 0F            	jp	z, ed_ld_ai
    3113/     EE0 : FE 20               	cp	32
    3114/     EE2 : CA 66 0F            	jp	z, ed_ld_ra
    3115/     EE5 : FE 21               	cp	33
    3116/     EE7 : CA 6F 0F            	jp	z, ed_ld_ia
    3117/     EEA : FE 26               	cp	38
    3118/     EEC : DA 43 0F            	jp	c, ed_adc
    3119/     EEF : FE 2A               	cp	42
    3120/     EF1 : DA 2D 0F            	jp	c, ed_sbc
    3121/     EF4 : FE 31               	cp	49
    3122/     EF6 : DA 12 0F            	jp	c, ed_out
    3123/     EF9 :                     
    3124/     EF9 :                     ; c: 49 - 55 : IN r,(C) (r:B,C,D,E,H,L,A)
    3125/     EF9 :                     
    3126/     EF9 : 11 31 12            	ld	de, INstr
    3127/     EFC : CD 88 10            	call	mkopcstr
    3128/     EFF :                     
    3129/     EFF : 79                  	ld	a, c
    3130/     F00 : D6 31               	sub	49
    3131/     F02 : 4F                  	ld	c, a
    3132/     F03 : 21 7E 13            	ld	hl, dd_ldtbl
    3133/     F06 : CD 0A 10            	call	get_strBufpoint	; get strung buffer
    3134/     F09 : CD DB 10            	call	mk_rcs		; "REG, "
    3135/     F0C : 11 C1 12            	ld	de, KCKstr
    3136/     F0F : C3 B1 10            	jp	cpstr_crlf	; "(C)",cr,lf
    3137/     F12 :                     
    3138/     F12 :                     ; c: 42 - 48 : OUT (C),r(r:B,C,D,E,H,L,A)
    3139/     F12 :                     ed_out:
    3140/     F12 : 11 2D 12            	ld	de, OUTstr
    3141/     F15 : CD 88 10            	call	mkopcstr
    3142/     F18 :                     
    3143/     F18 : 11 C1 12            	ld	de, KCKstr
    3144/     F1B : CD DB 10            	call	mk_rcs		; "(C), "
    3145/     F1E :                     
    3146/     F1E : 79                  	ld	a, c
    3147/     F1F : D6 2A               	sub	42
    3148/     F21 : 4F                  	ld	c, a
    3149/     F22 : E5                  	push	hl
    3150/     F23 : 21 7E 13            	ld	hl, dd_ldtbl
    3151/     F26 :                     
    3152/     F26 :                     ed_out1:
    3153/     F26 : CD 0A 10            	call	get_strBufpoint	; get strung buffer
    3154/     F29 : E1                  	pop	hl
    3155/     F2A : C3 B1 10            	jp	cpstr_crlf	; "REG",cr,lf
    3156/     F2D :                     
    3157/     F2D :                     ; c: 38 - 41 : SBC HL,rr(rr:BC,DE,HL,SP)
    3158/     F2D :                     ed_sbc:
    3159/     F2D : 11 D7 11            	ld	de, SBCstr
    3160/     F30 : CD 88 10            	call	mkopcstr
    3161/     F33 :                     
    3162/     F33 : 11 47 1F            	ld	de, RNHL
    3163/     F36 : CD DB 10            	call	mk_rcs		; "HL, "
    3164/     F39 :                     
    3165/     F39 : 79                  	ld	a, c
    3166/     F3A : D6 26               	sub	38
    3167/     F3C :                     ed_sbc1:
    3168/     F3C : 4F                  	ld	c, a
    3169/     F3D : E5                  	push	hl
    3170/     F3E : 21 06 13            	ld	hl, INC_DEC_ADDrp
    3171/     F41 : 18 E3               	jr	ed_out1
    3172/     F43 :                     
    3173/     F43 :                     ; c: 34 - 37 : ADC HL,rr(rr:BC,DE,HL,SP)
    3174/     F43 :                     ed_adc:
    3175/     F43 : 11 CF 11            	ld	de, ADCstr
    3176/     F46 : CD 88 10            	call	mkopcstr
    3177/     F49 :                     
    3178/     F49 : 11 47 1F            	ld	de, RNHL
    3179/     F4C : CD DB 10            	call	mk_rcs		; "HL, "
    3180/     F4F :                     
    3181/     F4F : 79                  	ld	a, c
    3182/     F50 : D6 22               	sub	34
    3183/     F52 : 18 E8               	jr	ed_sbc1
    3184/     F54 :                     
    3185/     F54 :                     ; c: 30, 31 : LD A,R ; LD A,I
    3186/     F54 :                     ed_ld_ar:
    3187/     F54 : CD D8 10            	call	a_colon_sp	; "A, "
    3188/     F57 : 11 82 1F            	ld	de, RNR
    3189/     F5A : C3 B1 10            	jp	cpstr_crlf	; "R",cr,lf
    3190/     F5D :                     	
    3191/     F5D :                     ed_ld_ai:
    3192/     F5D : CD D8 10            	call	a_colon_sp	; "A, "
    3193/     F60 : 11 80 1F            	ld	de, RNI
    3194/     F63 : C3 B1 10            	jp	cpstr_crlf	; "I",cr,lf
    3195/     F66 :                     	
    3196/     F66 :                     ; c: 32, 33 : LD R,A ; LD I,A
    3197/     F66 :                     ed_ld_ra:
    3198/     F66 : 11 82 1F            	ld	de, RNR
    3199/     F69 :                     ed_ld_ra1:
    3200/     F69 : CD DB 10            	call	mk_rcs		; "R, "
    3201/     F6C : C3 A3 10            	jp	a_crlf		; "A",cr,lf
    3202/     F6F :                     
    3203/     F6F :                     ed_ld_ia:
    3204/     F6F : 11 80 1F            	ld	de, RNI
    3205/     F72 : 18 F5               	jr	ed_ld_ra1
    3206/     F74 :                     	
    3207/     F74 :                     ; c: 27, 28, 29 : IM 2, IM 1, IM 0
    3208/     F74 :                     ed_im:
    3209/     F74 : 11 5A 12            	ld	de, IMstr
    3210/     F77 : CD 88 10            	call	mkopcstr
    3211/     F7A :                     
    3212/     F7A : 3E 1D               	ld	a, 29
    3213/     F7C : 91                  	sub	c
    3214/     F7D : C6 30               	add	a, '0'		; '0', '1', '2'
    3215/     F7F : 21 DC BF            	ld	hl, dasm_OprStr
    3216/     F82 : 77                  	ld	(hl), a
    3217/     F83 : 23                  	inc	hl
    3218/     F84 : C3 B4 10            	jp	insPostStr
    3219/     F87 :                     
    3220/     F87 :                     ; c: 6 - 26 ed_noopr
    3221/     F87 :                     ed_no_opr:
    3222/     F87 : D6 06               	sub	6
    3223/     F89 : 4F                  	ld	c, a
    3224/     F8A : 06 00               	ld	b, 0
    3225/     F8C : 21 8C 13            	ld	hl, ed_noopr
    3226/     F8F : CD 0A 10            	call	get_strBufpoint		; de : string buffer
    3227/     F92 : C3 88 10            	jp	mkopcstr
    3228/     F95 :                     ;
    3229/     F95 :                     ; check ED 4 byte MC
    3230/     F95 :                     ;
    3231/     F95 :                     ed_4mc:
    3232/     F95 : 3E 04               	ld	a, 4
    3233/     F97 : 32 C0 BF            	ld	(mc_Size), a	; 4byte machine code
    3234/     F9A :                     
    3235/     F9A : C5                  	push	bc
    3236/     F9B : 79                  	ld	a, c
    3237/     F9C : 21 4C 13            	ld	hl, ed_rp_str
    3238/     F9F : CD 0A 10            	call	get_strBufpoint		; de : string buffer
    3239/     FA2 : C1                  	pop	bc
    3240/     FA3 : 79                  	ld	a, c
    3241/     FA4 : FE 03               	cp	3
    3242/     FA6 : DA 57 0E            	jp	c, DD_2a1		; "rr, (nnnnH)",cr,lf
    3243/     FA9 :                     					; rr: BC, DE, SP
    3244/     FA9 :                     ; "(nnnnH), rr" rr: BC, DE, SP
    3245/     FA9 :                     
    3246/     FA9 : D5                  	push	de
    3247/     FAA : CD F3 0F            	call	get_nnnn
    3248/     FAD : CD 1F 10            	call	ins_kn4kcs	; "(nnnnH), "
    3249/     FB0 : D1                  	pop	de
    3250/     FB1 : C3 B1 10            	jp	cpstr_crlf	; "REG",cr,lf
    3251/     FB4 :                     
    3252/     FB4 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3253/     FB4 :                     	; OPECODE 0FDH check
    3254/     FB4 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3255/     FB4 :                     
    3256/     FB4 :                     chk_0FDH:
    3257/     FB4 :                     
    3258/     FB4 : 11 77 1F            	ld	de, RNIY
    3259/     FB7 : ED 53 BC BF         	ld	(reg_xy), de	; save index reg string
    3260/     FBB : 11 68 13            	ld	de, addiyrp_tbl
    3261/     FBE : ED 53 BE BF         	ld	(xy_srtp), de
    3262/     FC2 :                     
    3263/     FC2 : C3 24 0D            	jp	chk_0DDH_1
    3264/     FC5 :                     
    3265/     FC5 :                     ;-----------------------------------
    3266/     FC5 :                     ; make "(REG+nn), " at dasm_OprStr
    3267/     FC5 :                     ;	REG : IX or IY
    3268/     FC5 :                     ; input de: RNIX, or RNIY
    3269/     FC5 :                     ;-----------------------------------
    3270/     FC5 :                     kixypnk_cs:
    3271/     FC5 : 21 DC BF            	ld	hl, dasm_OprStr
    3272/     FC8 : CD D4 0F            	call	mk_kixypnk
    3273/     FCB : C3 00 11            	jp	ins_kmR
    3274/     FCE :                     
    3275/     FCE :                     ;-----------------------------------
    3276/     FCE :                     ; make "(REG+nn)",cr,lf 
    3277/     FCE :                     ;	REG : IX or IY
    3278/     FCE :                     ; input de: RNIX, or RNIY
    3279/     FCE :                     ;       hl: string buffer
    3280/     FCE :                     ;-----------------------------------
    3281/     FCE :                     kixypnk_crlf:
    3282/     FCE : CD D4 0F            	call	mk_kixypnk
    3283/     FD1 : C3 B4 10            	jp	insPostStr	; CR, LF, 00h
    3284/     FD4 :                     
    3285/     FD4 :                     ;-----------------------------------
    3286/     FD4 :                     ; make "(IX+nn)", "(IY+nn)" string
    3287/     FD4 :                     ; input de: RNIX, or RNIY
    3288/     FD4 :                     ;       hl: string buffer
    3289/     FD4 :                     ;-----------------------------------
    3290/     FD4 :                     mk_kixypnk:
    3291/     FD4 : CD EB 10            	call	ins_kakkoL	; "("
    3292/     FD7 : CD E3 10            	call	st_copy	; IX
    3293/     FDA : CD F3 0F            	call	get_nnnn
    3294/     FDD : 7B                  	ld	a, e		;get number
    3295/     FDE : FE 80               	cp	80h
    3296/     FE0 : 38 0C               	jr	c, numPlus	; number plus
    3297/     FE2 : ED 44               	neg			; a = not a + 1
    3298/     FE4 : 5F                  	ld	e, a
    3299/     FE5 : CD FC 10            	call	ins_misR	; -
    3300/     FE8 :                     sv_nnkr:
    3301/     FE8 : CD 56 10            	call	hex2str_asm	; nnh
    3302/     FEB : C3 EF 10            	jp	ins_kakkoR	; ")"
    3303/     FEE :                     	
    3304/     FEE :                     numPlus:
    3305/     FEE : CD F8 10            	call	ins_plsR	; +
    3306/     FF1 : 18 F5               	jr	sv_nnkr
    3307/     FF3 :                     
    3308/     FF3 :                     ; de : nnnn , or d:yy, e:xx
    3309/     FF3 :                     get_nnnn:
    3310/     FF3 : E5                  	push	hl
    3311/     FF4 : 2A BA BF            	ld	hl, (dasm_adr)
    3312/     FF7 : 23                  	inc	hl		; 2nd opecode address
    3313/     FF8 : 23                  	inc	hl		; operand address
    3314/     FF9 : 5E                  	ld	e, (hl)		; get nn
    3315/     FFA : 23                  	inc	hl
    3316/     FFB : 56                  	ld	d, (hl)		; d:yy use for "LD (IX+xx), yy"
    3317/     FFC :                     				; d:OP use for 4bytes MC like "DD CB xx OP"
    3318/     FFC :                     				; de : YYXX : ED OP XX YY
    3319/     FFC : E1                  	pop	hl
    3320/     FFD : C9                  	ret
    3321/     FFE :                     
    3322/     FFE :                     ;-------------------------------------------------
    3323/     FFE :                     ; hl: massage table
    3324/     FFE :                     ; bc: found operand point
    3325/     FFE :                     ;
    3326/     FFE :                     ; output: copy strings to dasm_OprStr buffer
    3327/     FFE :                     ;         hl = end point of copied string buffer
    3328/     FFE :                     ;-------------------------------------------------
    3329/     FFE :                     mk_str:
    3330/     FFE : CD 0A 10            	call	get_strBufpoint
    3331/    1001 : 21 DC BF            	ld	hl, dasm_OprStr
    3332/    1004 : C3 E3 10            	jp	st_copy
    3333/    1007 :                     
    3334/    1007 :                     ;------------------------------------------------
    3335/    1007 :                     ; get register strings address
    3336/    1007 :                     ; input bc: string buffer offset
    3337/    1007 :                     ; output de: register strings address
    3338/    1007 :                     ;------------------------------------------------
    3339/    1007 :                     get_rstg_off:
    3340/    1007 : 21 DE 12            	ld	hl, disRegTbl
    3341/    100A :                     
    3342/    100A :                     ;-------------------------------------------------
    3343/    100A :                     ; input
    3344/    100A :                     ;	bc: found operand point
    3345/    100A :                     ;	hl: massage table
    3346/    100A :                     ; output: 
    3347/    100A :                     ;	DE : string point
    3348/    100A :                     ;-------------------------------------------------
    3349/    100A :                     get_strBufpoint:
    3350/    100A : CB 21               	sla	c
    3351/    100C : CB 10               	rl	b		; bc *=2
    3352/    100E : 09                  	add	hl, bc		; get operand string point
    3353/    100F : 5E                  	ld	e, (hl)
    3354/    1010 : 23                  	inc	hl
    3355/    1011 : 56                  	ld	d, (hl)
    3356/    1012 : C9                  	ret
    3357/    1013 :                     
    3358/    1013 :                     ;------------------------------------------------
    3359/    1013 :                     ; insert "nnH", CR, LF to buffer
    3360/    1013 :                     ;input e: value
    3361/    1013 :                     ;      hl: string buffer
    3362/    1013 :                     ;------------------------------------------------
    3363/    1013 :                     mk_n2crlf:
    3364/    1013 : CD 56 10            	call	hex2str_asm
    3365/    1016 : C3 B4 10            	jp	insPostStr
    3366/    1019 :                     
    3367/    1019 :                     ;------------------------------------------------
    3368/    1019 :                     ; insert "nnnnH", CR, LF to buffer
    3369/    1019 :                     ;input de: value
    3370/    1019 :                     ;      hl: string buffer
    3371/    1019 :                     ;------------------------------------------------
    3372/    1019 :                     mk_n4crlf:
    3373/    1019 : CD 45 10            	call	hex4str_asm
    3374/    101C : C3 B4 10            	jp	insPostStr
    3375/    101F :                     
    3376/    101F :                     ;------------------------------------------------
    3377/    101F :                     ; insert "(nnnnH), " to buffer dasm_OprStr
    3378/    101F :                     ;input de: value
    3379/    101F :                     ;
    3380/    101F :                     ; make "(nnnnH), " to dasm_OprStr buffer
    3381/    101F :                     ; output hl: end point of string buffer
    3382/    101F :                     ;------------------------------------------------
    3383/    101F :                     ins_kn4kcs:
    3384/    101F : 21 DC BF            	ld	hl, dasm_OprStr	;operand str buffer
    3385/    1022 : CD EB 10            	call	ins_kakkoL	; "("
    3386/    1025 : CD 45 10            	call	hex4str_asm
    3387/    1028 : CD EF 10            	call	ins_kakkoR	; ")"
    3388/    102B : C3 00 11            	jp	ins_kmR		; ", "
    3389/    102E :                     
    3390/    102E :                     ;------------------------------------------------
    3391/    102E :                     ; insert "(nnnnH)" to buffer
    3392/    102E :                     ;input de: value
    3393/    102E :                     ;      hl: string buffer
    3394/    102E :                     ;------------------------------------------------
    3395/    102E :                     mk_kn4k:
    3396/    102E : CD EB 10            	call	ins_kakkoL	; "("
    3397/    1031 : CD 45 10            	call	hex4str_asm
    3398/    1034 : C3 EF 10            	jp	ins_kakkoR	; ")"
    3399/    1037 :                     
    3400/    1037 :                     ;------------------------------------------------
    3401/    1037 :                     ; Make address string from branch relative value
    3402/    1037 :                     ; input hl: string buffer pointer
    3403/    1037 :                     ; output *hl= "nnnnH",cr,lf,0
    3404/    1037 :                     ;------------------------------------------------
    3405/    1037 :                     mkRel_str:
    3406/    1037 : E5                  	push	hl
    3407/    1038 : 2A BA BF            	ld	hl, (dasm_adr)
    3408/    103B : CD 97 05            	call	Rel_adr_c	; return hl : target addr
    3409/    103E : EB                  	ex	de, hl		; hl: buffer, de: addr value
    3410/    103F : E1                  	pop	hl
    3411/    1040 : CD 45 10            	call	hex4str_asm
    3412/    1043 : 18 6F               	jr	insPostStr
    3413/    1045 :                     	
    3414/    1045 :                     ;------------------------------------------------
    3415/    1045 :                     ;input de: value, hl: save baffer.
    3416/    1045 :                     ;output 4hex chars(asm format)
    3417/    1045 :                     ;	(ex). "0FFFFH"
    3418/    1045 :                     ;             "1234H"
    3419/    1045 :                     ;       hl : hl = hl + 5(or 6); *hl=0
    3420/    1045 :                     ;------------------------------------------------
    3421/    1045 :                     hex4str_asm:
    3422/    1045 : 7A                  	ld	a, d
    3423/    1046 : FE A0               	cp	0a0h
    3424/    1048 : 38 04               	jr	c, h4sa_1
    3425/    104A : 3E 30               	ld	a, '0'
    3426/    104C : 77                  	ld	(hl), a
    3427/    104D : 23                  	inc	hl
    3428/    104E :                     
    3429/    104E :                     h4sa_1:
    3430/    104E : CD 64 10            	call	hex4str
    3431/    1051 :                     h4sa_2:
    3432/    1051 : 3E 48               	ld	a, 'H'
    3433/    1053 : C3 F1 10            	jp	ikk_1
    3434/    1056 :                     
    3435/    1056 :                     ;------------------------------------------------
    3436/    1056 :                     ;input e: value, hl: save baffer.
    3437/    1056 :                     ;output: 2 hex chars(asm format)
    3438/    1056 :                     ;	(ex). "0FFH"
    3439/    1056 :                     ;             "12H"
    3440/    1056 :                     ;       hl : hl = hl + 3(or 4); *hl=0
    3441/    1056 :                     ;------------------------------------------------
    3442/    1056 :                     hex2str_asm:
    3443/    1056 : 7B                  	ld	a, e
    3444/    1057 : FE A0               	cp	0a0h
    3445/    1059 : 38 04               	jr	c, h2sa_1
    3446/    105B : 3E 30               	ld	a, '0'
    3447/    105D : 77                  	ld	(hl), a
    3448/    105E : 23                  	inc	hl
    3449/    105F :                     
    3450/    105F :                     h2sa_1:
    3451/    105F : CD 6C 10            	call	hex2str
    3452/    1062 : 18 ED               	jr	h4sa_2
    3453/    1064 :                     
    3454/    1064 :                     ;------------------------------------------------
    3455/    1064 :                     ;input de: value, hl: save baffer.
    3456/    1064 :                     ;output: 4 hex chras in save buffer
    3457/    1064 :                     ;	 hl = hl + 4
    3458/    1064 :                     ;------------------------------------------------
    3459/    1064 :                     hex4str:
    3460/    1064 : 7A                  	ld	a, d
    3461/    1065 : CD 75 10            	call	h2s_n1
    3462/    1068 : 7A                  	ld	a, d
    3463/    1069 : CD 79 10            	call	h2s_n2
    3464/    106C :                     
    3465/    106C :                     ;------------------------------------------------
    3466/    106C :                     ;input e: value, hl: save baffer.
    3467/    106C :                     ;output: 2 hex chras in save buffer
    3468/    106C :                     ;	 hl = hl + 2
    3469/    106C :                     ;------------------------------------------------
    3470/    106C :                     hex2str:
    3471/    106C : 7B                  	ld	a, e
    3472/    106D : CD 75 10            	call	h2s_n1
    3473/    1070 : 7B                  	ld	a, e
    3474/    1071 : CD 79 10            	call	h2s_n2
    3475/    1074 : C9                  	ret
    3476/    1075 :                     
    3477/    1075 :                     h2s_n1:
    3478/    1075 : 0F                  	rrca
    3479/    1076 : 0F                  	rrca
    3480/    1077 : 0F                  	rrca
    3481/    1078 : 0F                  	rrca
    3482/    1079 :                     h2s_n2:
    3483/    1079 : E6 0F               	and	0fh
    3484/    107B : F6 30               	or	30h
    3485/    107D : FE 3A               	cp	3aH
    3486/    107F : 38 70               	jr	c, ikk_1	; '0' to '9'
    3487/    1081 : C6 07               	add	a, 07h		; 'A' to 'F'
    3488/    1083 : 18 6C               	jr	ikk_1
    3489/    1085 :                     
    3490/    1085 :                     add_opstr:
    3491/    1085 : 11 CB 11            	ld	de, ADDstr
    3492/    1088 :                     ;-----------------------------------
    3493/    1088 :                     ; make opecode strings
    3494/    1088 :                     ; input de : opecode strings
    3495/    1088 :                     ;-----------------------------------
    3496/    1088 :                     mkopcstr:
    3497/    1088 : F5                  	push	af
    3498/    1089 : C5                  	push	bc
    3499/    108A : 06 08               	ld	b, 8	;tab size
    3500/    108C : 21 D4 BF            	ld	hl, dasm_OpcStr
    3501/    108F :                     dmkstr0:
    3502/    108F : 1A                  	ld	a, (de)
    3503/    1090 : B7                  	or	a
    3504/    1091 : 28 06               	jr	z, dmkst1
    3505/    1093 : 77                  	ld	(hl), a
    3506/    1094 : 23                  	inc	hl
    3507/    1095 : 13                  	inc	de
    3508/    1096 : 05                  	dec	b
    3509/    1097 : 18 F6               	jr	dmkstr0
    3510/    1099 :                     dmkst1:
    3511/    1099 : 3E 20               	ld	a, ' '
    3512/    109B :                     dmkst2:
    3513/    109B : 77                  	ld	(hl), a
    3514/    109C : 23                  	inc	hl
    3515/    109D : 05                  	dec	b
    3516/    109E : 20 FB               	jr	nz, dmkst2
    3517/    10A0 : C1                  	pop	bc
    3518/    10A1 : F1                  	pop	af
    3519/    10A2 : C9                  	ret
    3520/    10A3 :                     
    3521/    10A3 :                     ;
    3522/    10A3 :                     ; "REG",CR,LF
    3523/    10A3 :                     ;
    3524/    10A3 :                     a_crlf:
    3525/    10A3 : 11 37 1F            	ld	de, RNA
    3526/    10A6 : 18 09               	jr	cpstr_crlf	; "A",CR,LF
    3527/    10A8 :                     ;bc_crlf:
    3528/    10A8 :                     ;	ld	de, RNBC
    3529/    10A8 :                     ;	jr	cpstr_crlf
    3530/    10A8 :                     ;de_crlf:
    3531/    10A8 :                     ;	ld	de, RNDE
    3532/    10A8 :                     ;	jr	cpstr_crlf
    3533/    10A8 :                     ix_crlf:
    3534/    10A8 : ED 5B BC BF         	ld	de, (reg_xy)
    3535/    10AC : 18 03               	jr	cpstr_crlf
    3536/    10AE :                     ;sp_crlf:
    3537/    10AE :                     ;	ld	de, RNSP
    3538/    10AE :                     ;	jr	cpstr_crlf
    3539/    10AE :                     hl_crlf:
    3540/    10AE : 11 47 1F            	ld	de, RNHL
    3541/    10B1 :                     cpstr_crlf:
    3542/    10B1 : CD E3 10            	call	st_copy		; "REG"
    3543/    10B4 :                     	
    3544/    10B4 :                     ;-----------------------------------
    3545/    10B4 :                     ; insert CR, LF, 00H(end delimiter)
    3546/    10B4 :                     ; input hl : insert buffer
    3547/    10B4 :                     ;-----------------------------------
    3548/    10B4 :                     insPostStr:
    3549/    10B4 : 3E 0D               	ld	a, CR
    3550/    10B6 : 77                  	ld	(hl), a		; CR code
    3551/    10B7 : 23                  	inc	hl
    3552/    10B8 : 3E 0A               	ld	a, LF
    3553/    10BA : 77                  	ld	(hl), a		; LF code
    3554/    10BB : 23                  	inc	hl
    3555/    10BC : AF                  	xor	a
    3556/    10BD : 77                  	ld	(hl), a		; end delimiter
    3557/    10BE : C9                  	ret
    3558/    10BF :                     
    3559/    10BF :                     mk_krk_1:
    3560/    10BF : 21 DC BF            	ld	hl, dasm_OprStr
    3561/    10C2 :                     ;----------------------------
    3562/    10C2 :                     ; insert "(Reg)" to buffer
    3563/    10C2 :                     ;
    3564/    10C2 :                     ; input de: register string
    3565/    10C2 :                     ;	hl: save buffer
    3566/    10C2 :                     ;----------------------------
    3567/    10C2 :                     mk_krk:
    3568/    10C2 : CD EB 10            	call	ins_kakkoL	; "("
    3569/    10C5 : CD E3 10            	call	st_copy		; "REG"
    3570/    10C8 : 18 25               	jr	ins_kakkoR	; ")"
    3571/    10CA :                     
    3572/    10CA :                     ;----------------------------
    3573/    10CA :                     ; insert "(Reg), " to dasm_OprStr
    3574/    10CA :                     ;
    3575/    10CA :                     ; input de: register string
    3576/    10CA :                     ;----------------------------
    3577/    10CA :                     mk_krkcs:
    3578/    10CA : 21 DC BF            	ld	hl, dasm_OprStr
    3579/    10CD : CD EB 10            	call	ins_kakkoL	; "("
    3580/    10D0 : CD E3 10            	call	st_copy		; "REG"
    3581/    10D3 : CD EF 10            	call	ins_kakkoR	; ")"
    3582/    10D6 : 18 28               	jr	ins_kmR		; ", "
    3583/    10D8 :                     
    3584/    10D8 :                     ;----------------------------
    3585/    10D8 :                     ; insert "A, " to dasm_OprStr
    3586/    10D8 :                     ;----------------------------
    3587/    10D8 :                     a_colon_sp:
    3588/    10D8 : 11 37 1F            	ld	de, RNA
    3589/    10DB :                     ;----------------------------
    3590/    10DB :                     ; insert "Reg, " to dasm_OprStr
    3591/    10DB :                     ;
    3592/    10DB :                     ; input de: register string
    3593/    10DB :                     ;----------------------------
    3594/    10DB :                     mk_rcs:
    3595/    10DB : 21 DC BF            	ld	hl, dasm_OprStr
    3596/    10DE : CD E3 10            	call	st_copy		; "REG"
    3597/    10E1 : 18 1D               	jr	ins_kmR		; ", "
    3598/    10E3 :                     
    3599/    10E3 :                     ;-------------------------------------------------
    3600/    10E3 :                     ; copy string to output buffer
    3601/    10E3 :                     ; input:
    3602/    10E3 :                     ;	de : string point
    3603/    10E3 :                     ;	hl : output buffer
    3604/    10E3 :                     ;-------------------------------------------------
    3605/    10E3 :                     st_copy:
    3606/    10E3 : 1A                  	ld	a, (de)
    3607/    10E4 : 77                  	ld	(hl), a
    3608/    10E5 : B7                  	or	a
    3609/    10E6 : C8                  	ret	z	; return after coping delimiter
    3610/    10E7 :                     			; hl : delimiter position
    3611/    10E7 : 23                  	inc	hl
    3612/    10E8 : 13                  	inc	de
    3613/    10E9 : 18 F8               	jr	st_copy
    3614/    10EB :                     
    3615/    10EB :                     ;--------------
    3616/    10EB :                     ; insert "("
    3617/    10EB :                     ;--------------
    3618/    10EB :                     ins_kakkoL:
    3619/    10EB : 3E 28               	ld	a, '('
    3620/    10ED : 18 02               	jr	ikk_1
    3621/    10EF :                     	
    3622/    10EF :                     ;--------------
    3623/    10EF :                     ; insert ")"
    3624/    10EF :                     ;--------------
    3625/    10EF :                     ins_kakkoR:
    3626/    10EF : 3E 29               	ld	a, ')'
    3627/    10F1 :                     ikk_1:
    3628/    10F1 : 77                  	ld	(hl), a
    3629/    10F2 : 23                  	inc	hl
    3630/    10F3 : C9                  	ret
    3631/    10F4 :                     
    3632/    10F4 :                     ;--------------
    3633/    10F4 :                     ; insert " "
    3634/    10F4 :                     ;--------------
    3635/    10F4 :                     ins_spcR:
    3636/    10F4 : 3E 20               	ld	a, ' '
    3637/    10F6 : 18 F9               	jr	ikk_1
    3638/    10F8 :                     
    3639/    10F8 :                     ;--------------
    3640/    10F8 :                     ; insert "+"
    3641/    10F8 :                     ;--------------
    3642/    10F8 :                     ins_plsR:
    3643/    10F8 : 3E 2B               	ld	a, '+'
    3644/    10FA : 18 F5               	jr	ikk_1
    3645/    10FC :                     
    3646/    10FC :                     ;--------------
    3647/    10FC :                     ; insert "-"
    3648/    10FC :                     ;--------------
    3649/    10FC :                     ins_misR:
    3650/    10FC : 3E 2D               	ld	a, '-'
    3651/    10FE : 18 F1               	jr	ikk_1
    3652/    1100 :                     
    3653/    1100 :                     ;--------------
    3654/    1100 :                     ; insert ", "
    3655/    1100 :                     ;--------------
    3656/    1100 :                     ins_kmR:
    3657/    1100 : 3E 2C               	ld	a, ','
    3658/    1102 : CD F1 10            	call	ikk_1
    3659/    1105 : 18 ED               	jr	ins_spcR
    3660/    1107 :                     
    3661/    1107 :                     ;------------------------------------------
    3662/    1107 :                     ; Dis assemble tables
    3663/    1107 :                     ;------------------------------------------
    3664/    1107 :                     oth_1op_s:
    3665/    1107 : 00                  	DB	00H	; NOP
    3666/    1108 : 07                  	DB	07H	; RLCA
    3667/    1109 : 0F                  	DB	0FH	; RRCA
    3668/    110A : 17                  	DB	17H	; RLA
    3669/    110B : 1F                  	DB	1FH	; RRA
    3670/    110C : 27                  	DB	27H	; DAA
    3671/    110D : 2F                  	DB	2FH	; CPL
    3672/    110E : 37                  	DB	37H	; SCF
    3673/    110F : 3F                  	DB	3FH	; CCF
    3674/    1110 : C9                  	DB	0C9H	; RET
    3675/    1111 : D9                  	DB	0D9H	; EXX
    3676/    1112 : F3                  	DB	0F3H	; DI
    3677/    1113 : FB                  	DB	0FBH	; EI
    3678/    1114 :                     oth_1op_e:
    3679/    1114 :                     
    3680/    1114 :                     INC_OPCDTBLS:
    3681/    1114 : 04                  	DB	04H	; INC	B
    3682/    1115 : 0C                  	DB	0CH	; INC	C
    3683/    1116 : 14                  	DB	14H	; INC	D
    3684/    1117 : 1C                  	DB	1CH	; INC	E
    3685/    1118 : 24                  	DB	24H	; INC	H
    3686/    1119 : 2C                  	DB	2CH	; INC	L
    3687/    111A : 34                  	DB	34H	; INC	(HL)
    3688/    111B : 3C                  	DB	3CH	; INC	A
    3689/    111C :                     INC_OPCDTBLE:
    3690/    111C :                     
    3691/    111C :                     DEC_OPCDTBLS:
    3692/    111C : 05                  	DB	05H	; DEC	B
    3693/    111D : 0D                  	DB	0DH	; DEC	C
    3694/    111E : 15                  	DB	15H	; DEC	D
    3695/    111F : 1D                  	DB	1DH	; DEC	E
    3696/    1120 : 25                  	DB	25H	; DEC	H
    3697/    1121 : 2D                  	DB	2DH	; DEC	L
    3698/    1122 : 35                  	DB	35H	; DEC	(HL)
    3699/    1123 : 3D                  	DB	3DH	; DEC	A
    3700/    1124 :                     DEC_OPCDTBLE:
    3701/    1124 :                     
    3702/    1124 :                     inc_rp_s:
    3703/    1124 : 03                  	DB	03H	; INC	BC
    3704/    1125 : 13                  	DB	13H	; INC	DE
    3705/    1126 : 23                  	DB	23H	; INC	HL
    3706/    1127 : 33                  	DB	33H	; INC	SP
    3707/    1128 :                     inc_rp_e:
    3708/    1128 :                     
    3709/    1128 :                     dec_rp_s:
    3710/    1128 : 0B                  	DB	0BH	; DEC	BC
    3711/    1129 : 1B                  	DB	1BH	; DEC	DE
    3712/    112A : 2B                  	DB	2BH	; DEC	HL
    3713/    112B : 3B                  	DB	3BH	; DEC	SP
    3714/    112C :                     dec_rp_e:
    3715/    112C :                     
    3716/    112C :                     add_rp_s:
    3717/    112C : 09                  	DB	09H	; ADD	HL,BC
    3718/    112D : 19                  	DB	19H	; ADD	HL,DE
    3719/    112E : 29                  	DB	29H	; ADD	HL,HL
    3720/    112F : 39                  	DB	39H	; ADD	HL,SP
    3721/    1130 :                     add_rp_e:
    3722/    1130 :                     
    3723/    1130 :                     pop_rp_s:
    3724/    1130 : C1                  	DB	0C1H	; POP	BC
    3725/    1131 : D1                  	DB	0D1H	; POP	DE
    3726/    1132 : E1                  	DB	0E1H	; POP	HL
    3727/    1133 : F1                  	DB	0F1H	; POP	AF
    3728/    1134 :                     pop_rp_e:
    3729/    1134 :                     
    3730/    1134 :                     push_rp_s:
    3731/    1134 : C5                  	DB	0C5H	; PUSH	BC
    3732/    1135 : D5                  	DB	0D5H	; PUSH	DE
    3733/    1136 : E5                  	DB	0E5H	; PUSH	HL
    3734/    1137 : F5                  	DB	0F5H	; PUSH	AF
    3735/    1138 :                     push_rp_e:
    3736/    1138 :                     
    3737/    1138 :                     dd_ld_tbl:
    3738/    1138 : 46                  	DB	46h	; nn: LD B,(IX+nn)
    3739/    1139 : 4E                  	DB	4Eh	; nn: LD C,(IX+nn)
    3740/    113A : 56                  	DB	56h	; nn: LD D,(IX+nn)
    3741/    113B : 5E                  	DB	5Eh	; nn: LD E,(IX+nn)
    3742/    113C : 66                  	DB	66h	; nn: LD H,(IX+nn)
    3743/    113D : 6E                  	DB	6Eh	; nn: LD L,(IX+nn)
    3744/    113E : 7E                  	DB	7Eh	; nn: LD A,(IX+nn)
    3745/    113F :                     
    3746/    113F : 70                  	DB	70h	; nn: LD (IX+nn),B
    3747/    1140 : 71                  	DB	71h	; nn: LD (IX+nn),C
    3748/    1141 : 72                  	DB	72h	; nn: LD (IX+nn),D
    3749/    1142 : 73                  	DB	73h	; nn: LD (IX+nn),E
    3750/    1143 : 74                  	DB	74h	; nn: LD (IX+nn),H
    3751/    1144 : 75                  	DB	75h	; nn: LD (IX+nn),L
    3752/    1145 : 77                  	DB	77h	; nn: LD (IX+nn),A
    3753/    1146 :                     dd_ld_tble:
    3754/    1146 :                     
    3755/    1146 :                     dd_log_tbl:
    3756/    1146 : 96                  	DB	96h	; nn: SUB (IX+nn)
    3757/    1147 : A6                  	DB	0A6h	; nn: AND (IX+nn)
    3758/    1148 : AE                  	DB	0AEh	; nn: XOR (IX+nn)
    3759/    1149 : B6                  	DB	0B6h	; nn: OR  (IX+nn)
    3760/    114A : BE                  	DB	0BEh	; nn: CP  (IX+nn)
    3761/    114B : 34                  	DB	34h	; nn: INC (IX+nn)
    3762/    114C : 35                  	DB	35h	; nn: DEC (IX+nn)
    3763/    114D :                     dd_log_tble:
    3764/    114D :                     
    3765/    114D :                     dd_rt_tbles:
    3766/    114D : 06                  	DB	06h	; RLC (IX+nn)
    3767/    114E : 0E                  	DB	0Eh	; RRC (IX+nn)
    3768/    114F : 16                  	DB	16h	; RL  (IX+nn)
    3769/    1150 : 1E                  	DB	1Eh	; RR  (IX+nn)
    3770/    1151 : 26                  	DB	26h	; SLA (IX+nn)
    3771/    1152 : 2E                  	DB	2Eh	; SRA (IX+nn)
    3772/    1153 : 3E                  	DB	3Eh	; SRL (IX+nn)
    3773/    1154 :                     dd_rt_tble:
    3774/    1154 :                     
    3775/    1154 :                     ; use checking undefine MC ( DD CB nn XX )
    3776/    1154 :                     dd_bit_opTbl:
    3777/    1154 : 46                  	DB	46h	; BIT 0,(IX+12H)
    3778/    1155 : 4E                  	DB	4Eh	; BIT 1,(IX+12H)
    3779/    1156 : 56                  	DB	56h	; BIT 2,(IX+12H)
    3780/    1157 : 5E                  	DB	5Eh	; BIT 3,(IX+12H)
    3781/    1158 : 66                  	DB	66h	; BIT 4,(IX+12H)
    3782/    1159 : 6E                  	DB	6Eh	; BIT 5,(IX+12H)
    3783/    115A : 76                  	DB	76h	; BIT 6,(IX+12H)
    3784/    115B : 7E                  	DB	7Eh	; BIT 7,(IX+12H)
    3785/    115C : 86                  	DB	86h	; RES 0,(IX+12H)
    3786/    115D : 8E                  	DB	8Eh	; RES 1,(IX+12H)
    3787/    115E : 96                  	DB	96h	; RES 2,(IX+12H)
    3788/    115F : 9E                  	DB	9Eh	; RES 3,(IX+12H)
    3789/    1160 : A6                  	DB	0A6h	; RES 4,(IX+12H)
    3790/    1161 : AE                  	DB	0AEh	; RES 5,(IX+12H)
    3791/    1162 : B6                  	DB	0B6h	; RES 6,(IX+12H)
    3792/    1163 : BE                  	DB	0BEh	; RES 7,(IX+12H)
    3793/    1164 : C6                  	DB	0C6h	; SET 0,(IX+12H)
    3794/    1165 : CE                  	DB	0CEh	; SET 1,(IX+12H)
    3795/    1166 : D6                  	DB	0D6h	; SET 2,(IX+12H)
    3796/    1167 : DE                  	DB	0DEh	; SET 3,(IX+12H)
    3797/    1168 : E6                  	DB	0E6h	; SET 4,(IX+12H)
    3798/    1169 : EE                  	DB	0EEh	; SET 5,(IX+12H)
    3799/    116A : F6                  	DB	0F6h	; SET 6,(IX+12H)
    3800/    116B : FE                  	DB	0FEh	; SET 7,(IX+12H)
    3801/    116C :                     dd_bit_opTble:
    3802/    116C :                     
    3803/    116C :                     ; use checking undefine MC ( ED XX ....)
    3804/    116C :                     ed_op_tbl:
    3805/    116C : 40                  	DB	40h	; 55:IN  B,(C)
    3806/    116D : 48                   	DB	48h	; 54:IN  C,(C)
    3807/    116E : 50                  	DB	50h	; 53:IN  D,(C)
    3808/    116F : 58                  	DB	58h	; 52:IN  E,(C)
    3809/    1170 : 60                  	DB	60h	; 51:IN  H,(C)
    3810/    1171 : 68                  	DB	68h	; 50:IN  L,(C)
    3811/    1172 : 78                  	DB	78h	; 49:IN  A,(C)
    3812/    1173 :                     
    3813/    1173 : 41                  	DB	41h	; 48:OUT (C),B
    3814/    1174 : 49                  	DB	49h	; 47:OUT (C),C
    3815/    1175 : 51                  	DB	51h	; 46:OUT (C),D
    3816/    1176 : 59                  	DB	59h	; 45:OUT (C),E
    3817/    1177 : 61                  	DB	61h	; 44:OUT (C),H
    3818/    1178 : 69                  	DB	69h	; 43:OUT (C),L
    3819/    1179 : 79                  	DB	79h	; 42:OUT (C),A
    3820/    117A :                     
    3821/    117A : 42                  	DB	42h	; 41:SBC HL,BC
    3822/    117B : 52                  	DB	52h	; 40:SBC HL,DE
    3823/    117C : 62                  	DB	62h	; 39:SBC HL,HL
    3824/    117D : 72                  	DB	72h	; 38:SBC HL,SP
    3825/    117E :                     
    3826/    117E : 4A                  	DB	4Ah	; 37:ADC HL,BC
    3827/    117F : 5A                  	DB	5Ah	; 36:ADC HL,DE
    3828/    1180 : 6A                  	DB	6Ah	; 35:ADC HL,HL
    3829/    1181 : 7A                  	DB	7Ah	; 34:ADC HL,SP
    3830/    1182 :                     
    3831/    1182 : 47                  	DB	47h	; 33:LD I,A
    3832/    1183 : 4F                  	DB	4Fh	; 32:LD R,A
    3833/    1184 : 57                  	DB	57h	; 31:LD A,I
    3834/    1185 : 5F                  	DB	5Fh	; 30:LD A,R
    3835/    1186 :                     
    3836/    1186 : 46                  	DB	46h	; 29:IM  0
    3837/    1187 : 56                  	DB	56h	; 28:IM  1
    3838/    1188 : 5E                  	DB	5Eh	; 27:IM  2
    3839/    1189 :                     
    3840/    1189 : 44                  	DB	44h	; 26:NEG
    3841/    118A : 45                  	DB	45h	; 25:RETN
    3842/    118B : 4D                  	DB	4Dh	; 24:RETI
    3843/    118C : 67                  	DB	67h	; 23:RRD
    3844/    118D : 6F                  	DB	6Fh	; 22:RLD
    3845/    118E : A0                  	DB	0A0h	; 21:LDI
    3846/    118F : A1                  	DB	0A1h	; 20:CPI
    3847/    1190 : A2                  	DB	0A2h	; 19:INI
    3848/    1191 : A3                  	DB	0A3h	; 18:OUTI
    3849/    1192 : A8                  	DB	0A8h	; 17:LDD
    3850/    1193 : A9                  	DB	0A9h	; 16:CPD
    3851/    1194 : AA                  	DB	0AAh	; 15:IND
    3852/    1195 : AB                  	DB	0ABh	; 14:OUTD
    3853/    1196 : B0                  	DB	0B0h	; 13:LDIR
    3854/    1197 : B1                  	DB	0B1h	; 12:CPIR
    3855/    1198 : B2                  	DB	0B2h	; 11:INIR
    3856/    1199 : B3                  	DB	0B3h	; 10:OTIR
    3857/    119A : B8                  	DB	0B8h	; 09:LDDR
    3858/    119B : B9                  	DB	0B9h	; 08:CPDR
    3859/    119C : BA                  	DB	0BAh	; 07:INDR
    3860/    119D : BB                  	DB	0BBh	; 06:OTDR
    3861/    119E :                     
    3862/    119E : 43                  	DB	43h	; 05:LD (nnnn),BC
    3863/    119F : 53                  	DB	53h	; 04:LD (nnnn),DE
    3864/    11A0 : 73                  	DB	73h	; 03:LD (nnnn),SP
    3865/    11A1 :                     
    3866/    11A1 : 4B                  	DB	4Bh	; 02:LD BC,(nnnn)
    3867/    11A2 : 5B                  	DB	5Bh	; 01:LD DE,(nnnn)
    3868/    11A3 : 7B                  	DB	7Bh	; 00:LD SP,(nnnn)
    3869/    11A4 :                     ed_op_tble:
    3870/    11A4 :                     
    3871/    11A4 : 41 46 00            RNAF:		DB	"AF",00H
    3872/    11A7 : 41 46 27 00         RNAFX:		DB	"AF'",00H
    3873/    11AB :                     
    3874/    11AB : 52 45 54 00         RETstr:		db	"RET", 00h
    3875/    11AF : 4A 50 00            JPstr:		db	"JP", 00h
    3876/    11B2 : 4A 52 00            JRstr:		db	"JR", 00h
    3877/    11B5 : 44 4A 4E 5A 00      DJNZstr:	db	"DJNZ", 00h
    3878/    11BA : 43 41 4C 4C 00      CALLstr:	db	"CALL", 00h
    3879/    11BF : 52 53 54 00         RSTstr:		db	"RST", 00h
    3880/    11C3 : 4C 44 00            LDstr:		db	"LD", 00h
    3881/    11C6 : 48 41 4C 54 00      HLTstr:		db	"HALT", 00h
    3882/    11CB : 41 44 44 00         ADDstr:		db	"ADD", 00h
    3883/    11CF : 41 44 43 00         ADCstr:		db	"ADC", 00h
    3884/    11D3 : 53 55 42 00         SUBstr:		db	"SUB", 00h
    3885/    11D7 : 53 42 43 00         SBCstr:		db	"SBC", 00h
    3886/    11DB : 41 4E 44 00         ANDstr:		db	"AND", 00h
    3887/    11DF : 58 4F 52 00         XORstr:		db	"XOR", 00h
    3888/    11E3 : 4F 52 00            ORstr:		db	"OR", 00h
    3889/    11E6 : 43 50 00            CPstr:		db	"CP", 00h
    3890/    11E9 : 49 4E 43 00         INCstr:		db	"INC", 00h
    3891/    11ED : 44 45 43 00         DECstr:		db	"DEC", 00h
    3892/    11F1 : 50 4F 50 00         POPstr:		db	"POP", 00h
    3893/    11F5 : 50 55 53 48 00      PUSHstr:	db	"PUSH",00h
    3894/    11FA : 45 58 00            EXstr:		db	"EX", 00h
    3895/    11FD :                     
    3896/    11FD : 45 58 58 00         EXXstr:		db	"EXX", 00h
    3897/    1201 : 4E 4F 50 00         NOPstr:		db	"NOP", 00h
    3898/    1205 : 52 4C 43 41 00      RLCAstr:	db	"RLCA", 00h
    3899/    120A : 52 52 43 41 00      RRCAstr:	db	"RRCA", 00h
    3900/    120F : 52 4C 41 00         RLAstr:		db	"RLA", 00h
    3901/    1213 : 52 52 41 00         RRAstr:		db	"RRA", 00h
    3902/    1217 : 44 41 41 00         DAAstr:		db	"DAA", 00h
    3903/    121B : 43 50 4C 00         CPLstr:		db	"CPL", 00h
    3904/    121F : 53 43 46 00         SCFstr:		db	"SCF", 00h
    3905/    1223 : 43 43 46 00         CCFstr:		db	"CCF", 00h
    3906/    1227 : 44 49 00            DIstr:		db	"DI", 00h
    3907/    122A : 45 49 00            EIstr:		db	"EI", 00h
    3908/    122D :                     
    3909/    122D : 4F 55 54 00         OUTstr:		db	"OUT", 00h
    3910/    1231 : 49 4E 00            INstr:		db	"IN", 00h
    3911/    1234 :                     
    3912/    1234 : 52 4C 43 00         RLCstr		db	"RLC", 00h
    3913/    1238 : 52 52 43 00         RRCstr		db	"RRC", 00h
    3914/    123C : 52 4C 00            RLstr		db	"RL", 00h
    3915/    123F : 52 52 00            RRstr		db	"RR", 00h
    3916/    1242 : 53 4C 41 00         SLAstr		db	"SLA", 00h
    3917/    1246 : 53 52 41 00         SRAstr		db	"SRA", 00h
    3918/    124A : 53 52 4C 00         SRLstr		db	"SRL", 00h
    3919/    124E : 42 49 54 00         BITstr		db	"BIT", 00h
    3920/    1252 : 52 45 53 00         RESstr		db	"RES", 00h
    3921/    1256 : 4E 45 47 00         NEGstr		db	"NEG", 00h
    3922/    125A : 49 4D 00            IMstr		db	"IM", 00h
    3923/    125D : 52 52 44 00         RRDstr		db	"RRD", 00h
    3924/    1261 : 52 4C 44 00         RLDstr		db	"RLD", 00h
    3925/    1265 : 4C 44 49 00         LDIstr		db	"LDI", 00h
    3926/    1269 : 43 50 49 00         CPIstr		db	"CPI", 00h
    3927/    126D : 49 4E 49 00         INIstr		db	"INI", 00h
    3928/    1271 : 4F 55 54 49 00      OUTIstr		db	"OUTI", 00h
    3929/    1276 : 4C 44 44 00         LDDstr		db	"LDD", 00h
    3930/    127A : 43 50 44 00         CPDstr		db	"CPD", 00h
    3931/    127E : 49 4E 44 00         INDstr		db	"IND", 00h
    3932/    1282 : 4F 55 54 44 00      OUTDstr		db	"OUTD", 00h
    3933/    1287 : 4C 44 49 52 00      LDIRstr		db	"LDIR", 00h
    3934/    128C : 43 50 49 52 00      CPIRstr		db	"CPIR", 00h
    3935/    1291 : 49 4E 49 52 00      INIRstr		db	"INIR", 00h
    3936/    1296 : 4F 54 49 52 00      OTIRstr		db	"OTIR", 00h
    3937/    129B : 4C 44 44 52 00      LDDRstr		db	"LDDR", 00h
    3938/    12A0 : 43 50 44 52 00      CPDRstr		db	"CPDR", 00h
    3939/    12A5 : 49 4E 44 52 00      INDRstr		db	"INDR", 00h
    3940/    12AA : 4F 54 44 52 00      OTDRstr		db	"OTDR", 00h
    3941/    12AF : 52 45 54 49 00      RETIstr		db	"RETI", 00h
    3942/    12B4 : 52 45 54 4E 00      RETNstr		db	"RETN", 00h
    3943/    12B9 :                     ;BITstr		db	"BIT", 00h
    3944/    12B9 :                     ;RESstr		db	"RES", 00h
    3945/    12B9 : 53 45 54 00         SETstr		db	"SET", 00h
    3946/    12BD : 3F 3F 3F 00         ER_OPMSG:	db	"???", 00h
    3947/    12C1 : 28 43 29 00         KCKstr		db	"(C)", 00h
    3948/    12C5 :                     
    3949/    12C5 : 28 48 4C 29 00      kRNHL:	db	"(HL)", 00h
    3950/    12CA : 4E 5A 00            cc0:	db	"NZ", 00h
    3951/    12CD : 5A 00               cc1:	db	"Z", 00h
    3952/    12CF : 4E 43 00            cc2:	db	"NC", 00h
    3953/    12D2 : 43 00               cc3:	db	"C", 00h
    3954/    12D4 : 50 4F 00            cc4:	db	"PO", 00h
    3955/    12D7 : 50 45 00            cc5:	db	"PE", 00h
    3956/    12DA : 50 00               cc6:	db	"P", 00h
    3957/    12DC : 4D 00               cc7:	db	"M", 00h
    3958/    12DE :                     
    3959/    12DE : 3C 1F 3E 1F 43 1F   disRegTbl:	dw	RNB, RNC, RND, RNE, RNH, RNL, kRNHL, RNA
             12E4 : 45 1F 4A 1F 4C 1F 
             12EA : C5 12 37 1F       
    3960/    12EE : DC 12 DA 12 D7 12   CC_opr:		dw	cc7, cc6, cc5, cc4, cc3, cc2, cc1, cc0
             12F4 : D4 12 D2 12 CF 12 
             12FA : CD 12 CA 12       
    3961/    12FE : D2 12 CF 12 CD 12   JRCC_opr1:	dw	cc3, cc2, cc1, cc0
             1304 : CA 12             
    3962/    1306 : 7A 1F 47 1F 40 1F   INC_DEC_ADDrp:	dw	RNSP, RNHL, RNDE, RNBC
             130C : 39 1F             
    3963/    130E : A4 11 47 1F 40 1F   POP_PUSHrp:	dw	RNAF, RNHL, RNDE, RNBC
             1314 : 39 1F             
    3964/    1316 :                     
    3965/    1316 : 2A 12 27 12 FD 11   oth_1op_tbl:	dw	EIstr, DIstr, EXXstr, RETstr, CCFstr
             131C : AB 11 23 12       
    3966/    1320 : 1F 12 1B 12 17 12   		dw	SCFstr, CPLstr, DAAstr, RRAstr
             1326 : 13 12             
    3967/    1328 : 0F 12 0A 12 05 12   		dw	RLAstr, RRCAstr, RLCAstr, NOPstr
             132E : 01 12             
    3968/    1330 :                     
    3969/    1330 : 2D 12 31 12 E6 11   logop2str:	dw	OUTstr, INstr, CPstr, ORstr, XORstr
             1336 : E3 11 DF 11       
    3970/    133A : DB 11 D3 11 D7 11   		dw	ANDstr, SUBstr, SBCstr, ADCstr, ADDstr
             1340 : CF 11 CB 11       
    3971/    1344 :                     
    3972/    1344 : 7A 1F 47 1F 40 1F   logop3str	dw	RNSP, RNHL, RNDE, RNBC
             134A : 39 1F             
    3973/    134C : 7A 1F 40 1F 39 1F   ed_rp_str	dw	RNSP, RNDE, RNBC, RNSP, RNDE, RNBC
             1352 : 7A 1F 40 1F 39 1F 
    3974/    1358 :                     
    3975/    1358 : F1 11 F5 11 ED 11   dd_2opt:	dw	POPstr, PUSHstr, DECstr, INCstr
             135E : E9 11             
    3976/    1360 : 7A 1F 74 1F 40 1F   addixrp_tbl:	dw	RNSP, RNIX, RNDE, RNBC
             1366 : 39 1F             
    3977/    1368 : 7A 1F 77 1F 40 1F   addiyrp_tbl:	dw	RNSP, RNIY, RNDE, RNBC
             136E : 39 1F             
    3978/    1370 :                     
    3979/    1370 : ED 11 E9 11 E6 11   ddlogtbl:	dw	DECstr, INCstr, CPstr, ORstr, XORstr, ANDstr, SUBstr
             1376 : E3 11 DF 11 DB 11 
             137C : D3 11             
    3980/    137E : 37 1F 4C 1F 4A 1F   dd_ldtbl:	dw	RNA, RNL, RNH, RNE, RND, RNC, RNB
             1384 : 45 1F 43 1F 3E 1F 
             138A : 3C 1F             
    3981/    138C :                     
    3982/    138C : AA 12 A5 12 A0 12   ed_noopr:	dw	OTDRstr, INDRstr, CPDRstr, LDDRstr
             1392 : 9B 12             
    3983/    1394 : 96 12 91 12 8C 12   		dw	OTIRstr, INIRstr, CPIRstr, LDIRstr
             139A : 87 12             
    3984/    139C : 82 12 7E 12 7A 12   		dw	OUTDstr, INDstr, CPDstr, LDDstr
             13A2 : 76 12             
    3985/    13A4 : 71 12 6D 12 69 12   		dw	OUTIstr, INIstr, CPIstr, LDIstr
             13AA : 65 12             
    3986/    13AC : 61 12 5D 12 AF 12   		dw	RLDstr, RRDstr, RETIstr, RETNstr
             13B2 : B4 12             
    3987/    13B4 : 56 12               		dw	NEGstr
    3988/    13B6 :                     
    3989/    13B6 : 4A 12 46 12 42 12   dd_rt_str:	dw	SRLstr, SRAstr, SLAstr, RRstr
             13BC : 3F 12             
    3990/    13BE : 3C 12 38 12 34 12   		dw	RLstr, RRCstr, RLCstr
    3991/    13C4 :                     	
    3992/    13C4 :                     ;;;
    3993/    13C4 :                     ;;; GO address
    3994/    13C4 :                     ;;; 
    3995/    13C4 :                     
    3996/    13C4 :                     GO:
    3997/    13C4 : ED 5B 85 BF         	ld	de, (REGPC)
    3998/    13C8 : ED 53 91 BF         	ld	(goTmp), de	; save go tmp go address
    3999/    13CC : 23                  	INC	HL
    4000/    13CD : CD 7F 18            	CALL	SKIPSP
    4001/    13D0 : CD 8F 18            	CALL	RDHEX
    4002/    13D3 : 30 03               	jr	nc, gostmp
    4003/    13D5 : B7                  	OR	A
    4004/    13D6 : 28 0A               	JR	Z, g_stpadr
    4005/    13D8 :                     gostmp:
    4006/    13D8 : 7A                  	ld	a, d
    4007/    13D9 : FE C0               	cp	(RAM_E + 1) >> 8	; a - 0C0H
    4008/    13DB : D2 7B 01            	jp	nc, ERR			; detect No RAM area
    4009/    13DE : ED 53 91 BF         	LD	(goTmp),DE		; save going address
    4010/    13E2 :                     g_stpadr:
    4011/    13E2 : CD 7F 18            	CALL	SKIPSP
    4012/    13E5 : 7E                  	LD	A,(HL)
    4013/    13E6 : B7                  	or	a
    4014/    13E7 : 28 18               	jr	z, GO1
    4015/    13E9 : FE 2C               	cp	','
    4016/    13EB : C2 7B 01            	jp	nz, ERR
    4017/    13EE :                     
    4018/    13EE :                     ; set break point with go command
    4019/    13EE :                     
    4020/    13EE : 23                  	INC	HL
    4021/    13EF : CD 7F 18            	CALL	SKIPSP
    4022/    13F2 : CD 8F 18            	CALL	RDHEX		; 1st arg.
    4023/    13F5 : DA 7B 01            	jp	c, ERR
    4024/    13F8 :                     
    4025/    13F8 : 21 AA BF            	ld	hl, tmpb_f	; hl: temp break point buffer
    4026/    13FB : CD DD 02            	call	setbpadr
    4027/    13FE : DA 7B 01            	jp	c, ERR		; address is incorrect
    4028/    1401 :                     
    4029/    1401 :                     GO1:
    4030/    1401 : 2A 91 BF            	LD	hl, (goTmp)
    4031/    1404 : 22 85 BF            	ld	(REGPC), hl	; set go address
    4032/    1407 :                     
    4033/    1407 :                     G0:
    4034/    1407 :                     ; check Trace mode
    4035/    1407 :                     
    4036/    1407 : 3A 9A BF            	ld	a, (tpt1_f)
    4037/    140A : B7                  	or	a
    4038/    140B : 28 1A               	jr	z, donot_trace
    4039/    140D :                     	
    4040/    140D : 2A 97 BF            	ld	hl,(tmpT)
    4041/    1410 : 22 85 BF            	ld	(REGPC), hl	; set trace address
    4042/    1413 :                     
    4043/    1413 : 21 9A BF            	ld	hl, tpt1_f
    4044/    1416 : 11 9C BF            	ld	de, tpt1_adr
    4045/    1419 : CD 7F 14            	call	set_bp
    4046/    141C : 21 9E BF            	ld	hl, tpt2_f
    4047/    141F : 11 A0 BF            	ld	de, tpt2_adr
    4048/    1422 : CD 7F 14            	call	set_bp
    4049/    1425 : 18 1B               	jr	skp_tbp		; skip set tmp bp and bp, if tracing
    4050/    1427 :                     
    4051/    1427 :                     ; set break point
    4052/    1427 :                     donot_trace:
    4053/    1427 : 21 A2 BF            	ld	hl, bpt1_f
    4054/    142A : 11 A4 BF            	ld	de, bpt1_adr
    4055/    142D : CD 7F 14            	call	set_bp
    4056/    1430 : 21 A6 BF            	ld	hl, bpt2_f
    4057/    1433 : 11 A8 BF            	ld	de, bpt2_adr
    4058/    1436 : CD 7F 14            	call	set_bp
    4059/    1439 :                     
    4060/    1439 :                     
    4061/    1439 :                     ; check go, break pointer
    4062/    1439 :                     
    4063/    1439 : 21 AA BF            	ld	hl, tmpb_f
    4064/    143C : 11 AC BF            	ld	de, tmpb_adr
    4065/    143F : CD 7F 14            	call	set_bp
    4066/    1442 :                     
    4067/    1442 :                     	;; R register adjustment
    4068/    1442 :                     
    4069/    1442 :                     skp_tbp:
    4070/    1442 : 2A 83 BF            	LD	HL,(REGSP)
    4071/    1445 : F9                  	LD	SP,HL
    4072/    1446 : 2A 85 BF            	LD	HL,(REGPC)
    4073/    1449 : E5                  	PUSH	HL
    4074/    144A : DD 2A 7F BF         	LD	IX,(REGIX)
    4075/    144E : FD 2A 81 BF         	LD	IY,(REGIY)
    4076/    1452 : 2A 77 BF            	LD	HL,(REGAFX)
    4077/    1455 : E5                  	PUSH	HL
    4078/    1456 : ED 4B 79 BF         	LD	BC,(REGBCX)
    4079/    145A : ED 5B 7B BF         	LD	DE,(REGDEX)
    4080/    145E : 2A 7D BF            	LD	HL,(REGHLX)
    4081/    1461 : D9                  	EXX
    4082/    1462 : F1                  	POP	AF
    4083/    1463 : 08                  	EX	AF,AF'
    4084/    1464 : 2A 6F BF            	LD	HL,(REGAF)
    4085/    1467 : E5                  	PUSH	HL
    4086/    1468 : ED 4B 71 BF         	LD	BC,(REGBC)
    4087/    146C : ED 5B 73 BF         	LD	DE,(REGDE)
    4088/    1470 : 2A 75 BF            	LD	HL,(REGHL)
    4089/    1473 : 3A 87 BF            	LD	A,(REGI)
    4090/    1476 : ED 47               	LD	I,A
    4091/    1478 : 3A 88 BF            	LD	A,(REGR)
    4092/    147B : ED 4F               	LD	R,A
    4093/    147D : F1                  	POP	AF
    4094/    147E : C9                  	RET			; POP PC
    4095/    147F :                     
    4096/    147F :                     set_bp:
    4097/    147F : 7E                  	ld	a, (hl)
    4098/    1480 : B7                  	or	a
    4099/    1481 : C8                  	ret	z
    4100/    1482 :                     
    4101/    1482 : 1A                  	ld	a, (de)
    4102/    1483 : 4F                  	ld	c, a
    4103/    1484 : 13                  	inc	de
    4104/    1485 : 1A                  	ld	a, (de)
    4105/    1486 : 47                  	ld	b, a	; bc = break point address
    4106/    1487 :                     
    4107/    1487 : 3E FF               	ld	a, 0FFH
    4108/    1489 : 02                  	ld	(bc), a	; insert RST 38H code
    4109/    148A : C9                  	ret
    4110/    148B :                     	
    4111/    148B :                     ;;;
    4112/    148B :                     ;;; SET memory
    4113/    148B :                     ;;; 
    4114/    148B :                     
    4115/    148B :                     SETM:
    4116/    148B : 23                  	INC	HL
    4117/    148C : CD 7F 18            	CALL	SKIPSP
    4118/    148F : CD 8F 18            	CALL	RDHEX
    4119/    1492 :                     
    4120/    1492 : DA 7B 01            	jp	c, ERR
    4121/    1495 :                     
    4122/    1495 : CD 7F 18            	CALL	SKIPSP
    4123/    1498 : 7E                  	LD	A,(HL)
    4124/    1499 : B7                  	OR	A
    4125/    149A : C2 7B 01            	JP	NZ,ERR
    4126/    149D : 79                  	LD	A,C
    4127/    149E : B7                  	OR	A
    4128/    149F : 20 04               	JR	NZ,SM0
    4129/    14A1 : ED 5B 6A BF         	LD	DE,(SADDR)
    4130/    14A5 :                     
    4131/    14A5 :                     
    4132/    14A5 :                     SM0:
    4133/    14A5 : EB                  	EX	DE,HL
    4134/    14A6 :                     SM1:
    4135/    14A6 : CD CE 17            	CALL	HEXOUT4
    4136/    14A9 : E5                  	PUSH	HL
    4137/    14AA : 21 55 1D            	LD	HL,DSEP1
    4138/    14AD : CD C5 17            	CALL	STROUT
    4139/    14B0 : E1                  	POP	HL
    4140/    14B1 : 7E                  	LD	A,(HL)
    4141/    14B2 : E5                  	PUSH	HL
    4142/    14B3 : CD D3 17            	CALL	HEXOUT2
    4143/    14B6 : 3E 20               	LD	A,' '
    4144/    14B8 : CD B0 1F            	CALL	CONOUT
    4145/    14BB : CD 25 18            	CALL	GETLIN
    4146/    14BE : CD 7F 18            	CALL	SKIPSP
    4147/    14C1 : 7E                  	LD	A,(HL)
    4148/    14C2 : B7                  	OR	A
    4149/    14C3 : 20 07               	JR	NZ,SM2
    4150/    14C5 :                     	;; Empty  (Increment address)
    4151/    14C5 : E1                  	POP	HL
    4152/    14C6 : 23                  	INC	HL
    4153/    14C7 : 22 6A BF            	LD	(SADDR),HL
    4154/    14CA : 18 DA               	JR	SM1
    4155/    14CC :                     SM2:
    4156/    14CC : FE 2D               	CP	'-'
    4157/    14CE : 20 07               	JR	NZ,SM3
    4158/    14D0 :                     	;; '-'  (Decrement address)
    4159/    14D0 : E1                  	POP	HL
    4160/    14D1 : 2B                  	DEC	HL
    4161/    14D2 : 22 6A BF            	LD	(SADDR),HL
    4162/    14D5 : 18 CF               	JR	SM1
    4163/    14D7 :                     SM3:
    4164/    14D7 : FE 2E               	CP	'.'
    4165/    14D9 : 20 07               	JR	NZ,SM4
    4166/    14DB : E1                  	POP	HL
    4167/    14DC : 22 6A BF            	LD	(SADDR),HL
    4168/    14DF : C3 3B 01            	JP	WSTART
    4169/    14E2 :                     SM4:
    4170/    14E2 : CD 8F 18            	CALL	RDHEX
    4171/    14E5 : B7                  	OR	A
    4172/    14E6 : E1                  	POP	HL
    4173/    14E7 : CA 7B 01            	JP	Z,ERR
    4174/    14EA : 73                  	LD	(HL),E
    4175/    14EB : 23                  	INC	HL
    4176/    14EC : 22 6A BF            	LD	(SADDR),HL	; set value
    4177/    14EF :                     
    4178/    14EF :                     	; resave opcode for BP command
    4179/    14EF : ED 5B A4 BF         	ld	de, (bpt1_adr)
    4180/    14F3 : 1A                  	ld	a, (de)
    4181/    14F4 : 32 A3 BF            	ld	(bpt1_op), a
    4182/    14F7 : ED 5B A8 BF         	ld	de, (bpt2_adr)
    4183/    14FB : 1A                  	ld	a, (de)
    4184/    14FC : 32 A7 BF            	ld	(bpt2_op), a
    4185/    14FF :                     
    4186/    14FF : 18 A5               	JR	SM1
    4187/    1501 :                     
    4188/    1501 :                     ;;;
    4189/    1501 :                     ;;; LOAD HEX file
    4190/    1501 :                     ;;;
    4191/    1501 :                     
    4192/    1501 :                     LOADH:
    4193/    1501 :                     	; clear brk point
    4194/    1501 : AF                  	xor	a
    4195/    1502 : 32 A2 BF            	ld	(bpt1_f), a
    4196/    1505 : 32 A6 BF            	ld	(bpt2_f), a
    4197/    1508 :                     	
    4198/    1508 : 23                  	INC	HL
    4199/    1509 : CD 7F 18            	CALL	SKIPSP
    4200/    150C : CD 8F 18            	CALL	RDHEX
    4201/    150F : CD 7F 18            	CALL	SKIPSP
    4202/    1512 : 7E                  	LD	A,(HL)
    4203/    1513 : B7                  	OR	A
    4204/    1514 : C2 7B 01            	JP	NZ,ERR
    4205/    1517 :                     
    4206/    1517 : 79                  	LD	A,C
    4207/    1518 : B7                  	OR	A
    4208/    1519 : 20 03               	JR	NZ,LH0
    4209/    151B :                     
    4210/    151B : 11 00 00            	LD	DE,0		;Offset
    4211/    151E :                     LH0:
    4212/    151E : CD 84 1F            	CALL	CONIN
    4213/    1521 :                     ;	CALL	UPPER
    4214/    1521 : FE 53               	CP	'S'
    4215/    1523 : 28 61               	JR	Z,LHS0
    4216/    1525 :                     LH1:
    4217/    1525 : FE 3A               	CP	':'
    4218/    1527 : 28 0D               	JR	Z,LHI0
    4219/    1529 :                     LH2:
    4220/    1529 :                     	;; Skip to EOL
    4221/    1529 : FE 0D               	CP	CR
    4222/    152B : 28 F1               	JR	Z,LH0
    4223/    152D : FE 0A               	CP	LF
    4224/    152F : 28 ED               	JR	Z,LH0
    4225/    1531 :                     LH3:
    4226/    1531 : CD 84 1F            	CALL	CONIN
    4227/    1534 : 18 F3               	JR	LH2
    4228/    1536 :                     
    4229/    1536 :                     LHI0:
    4230/    1536 : 3E 2E               	ld	a, '.'
    4231/    1538 : CD B0 1F            	call	CONOUT
    4232/    153B :                     
    4233/    153B : CD EA 17            	CALL	HEXIN
    4234/    153E : 4F                  	LD	C,A		; Checksum
    4235/    153F : 47                  	LD	B,A		; Length
    4236/    1540 :                     
    4237/    1540 : CD EA 17            	CALL	HEXIN
    4238/    1543 : 67                  	LD	H,A		; Address H
    4239/    1544 : 81                  	ADD	A,C
    4240/    1545 : 4F                  	LD	C,A
    4241/    1546 :                     
    4242/    1546 : CD EA 17            	CALL	HEXIN
    4243/    1549 : 6F                  	LD	L,A		; Address L
    4244/    154A : 81                  	ADD	A,C
    4245/    154B : 4F                  	LD	C,A
    4246/    154C :                     
    4247/    154C :                     	;; Add offset
    4248/    154C : 19                  	ADD	HL,DE
    4249/    154D :                     
    4250/    154D : CD EA 17            	CALL	HEXIN
    4251/    1550 : 32 6D BF            	LD	(RECTYP),A
    4252/    1553 : 81                  	ADD	A,C
    4253/    1554 : 4F                  	LD	C,A		; Checksum
    4254/    1555 :                     
    4255/    1555 : 78                  	LD	A,B
    4256/    1556 : B7                  	OR	A
    4257/    1557 : 28 14               	JR	Z,LHI3
    4258/    1559 :                     LHI1:
    4259/    1559 : CD EA 17            	CALL	HEXIN
    4260/    155C : F5                  	PUSH	AF
    4261/    155D : 81                  	ADD	A,C
    4262/    155E : 4F                  	LD	C,A		; Checksum
    4263/    155F :                     
    4264/    155F : 3A 6D BF            	LD	A,(RECTYP)
    4265/    1562 : B7                  	OR	A
    4266/    1563 : 20 05               	JR	NZ,LHI20
    4267/    1565 :                     
    4268/    1565 : F1                  	POP	AF
    4269/    1566 : 77                  	LD	(HL),A
    4270/    1567 : 23                  	INC	HL
    4271/    1568 : 18 01               	JR	LHI2
    4272/    156A :                     LHI20:
    4273/    156A : F1                  	POP	AF
    4274/    156B :                     LHI2:
    4275/    156B : 10 EC               	DJNZ	LHI1
    4276/    156D :                     LHI3:
    4277/    156D : CD EA 17            	CALL	HEXIN
    4278/    1570 : 81                  	ADD	A,C
    4279/    1571 : 20 0A               	JR	NZ,LHIE		; Checksum error
    4280/    1573 : 3A 6D BF            	LD	A,(RECTYP)
    4281/    1576 : B7                  	OR	A
    4282/    1577 : CA 31 15            	JP	Z,LH3
    4283/    157A : C3 3B 01            	JP	WSTART
    4284/    157D :                     LHIE:
    4285/    157D : 21 30 1D            	LD	HL,IHEMSG
    4286/    1580 : CD C5 17            	CALL	STROUT
    4287/    1583 : C3 3B 01            	JP	WSTART
    4288/    1586 :                     	
    4289/    1586 :                     LHS0:
    4290/    1586 : CD 84 1F            	CALL	CONIN
    4291/    1589 : 32 6D BF            	LD	(RECTYP),A
    4292/    158C :                     
    4293/    158C : CD EA 17            	CALL	HEXIN
    4294/    158F : 47                  	LD	B,A		; Length+3
    4295/    1590 : 4F                  	LD	C,A		; Checksum
    4296/    1591 :                     
    4297/    1591 : CD EA 17            	CALL	HEXIN
    4298/    1594 : 67                  	LD	H,A
    4299/    1595 : 81                  	ADD	A,C
    4300/    1596 : 4F                  	LD	C,A
    4301/    1597 :                     	
    4302/    1597 : CD EA 17            	CALL	HEXIN
    4303/    159A : 6F                  	LD	L,A
    4304/    159B : 81                  	ADD	A,C
    4305/    159C : 4F                  	LD	C,A
    4306/    159D :                     
    4307/    159D : 19                  	ADD	HL,DE
    4308/    159E :                     
    4309/    159E : 05                  	DEC	B
    4310/    159F : 05                  	DEC	B
    4311/    15A0 : 05                  	DEC	B
    4312/    15A1 : 28 15               	JR	Z,LHS3
    4313/    15A3 :                     LHS1:
    4314/    15A3 : CD EA 17            	CALL	HEXIN
    4315/    15A6 : F5                  	PUSH	AF
    4316/    15A7 : 81                  	ADD	A,C
    4317/    15A8 : 4F                  	LD	C,A		; Checksum
    4318/    15A9 :                     
    4319/    15A9 : 3A 6D BF            	LD	A,(RECTYP)
    4320/    15AC : FE 31               	CP	'1'
    4321/    15AE : 20 05               	JR	NZ,LHS2
    4322/    15B0 :                     
    4323/    15B0 : F1                  	POP	AF
    4324/    15B1 : 77                  	LD	(HL),A
    4325/    15B2 : 23                  	INC	HL
    4326/    15B3 : 18 01               	JR	LHS20
    4327/    15B5 :                     LHS2:
    4328/    15B5 : F1                  	POP	AF
    4329/    15B6 :                     LHS20:
    4330/    15B6 : 10 EB               	DJNZ	LHS1
    4331/    15B8 :                     LHS3:
    4332/    15B8 : CD EA 17            	CALL	HEXIN
    4333/    15BB : 81                  	ADD	A,C
    4334/    15BC : FE FF               	CP	0FFH
    4335/    15BE : 20 12               	JR	NZ,LHSE
    4336/    15C0 :                     
    4337/    15C0 : 3A 6D BF            	LD	A,(RECTYP)
    4338/    15C3 : FE 37               	CP	'7'
    4339/    15C5 : 28 11               	JR	Z,LHSR
    4340/    15C7 : FE 38               	CP	'8'
    4341/    15C9 : 28 0D               	JR	Z,LHSR
    4342/    15CB : FE 39               	CP	'9'
    4343/    15CD : 28 09               	JR	Z,LHSR
    4344/    15CF : C3 31 15            	JP	LH3
    4345/    15D2 :                     LHSE:
    4346/    15D2 : 21 3D 1D            	LD	HL,SHEMSG
    4347/    15D5 : CD C5 17            	CALL	STROUT
    4348/    15D8 :                     LHSR:
    4349/    15D8 : C3 3B 01            	JP	WSTART
    4350/    15DB :                     	
    4351/    15DB :                     ;;;
    4352/    15DB :                     ;;; SAVE HEX file
    4353/    15DB :                     ;;;
    4354/    15DB :                     
    4355/    15DB :                     SAVEH:
    4356/    15DB : 23                  	INC	HL
    4357/    15DC : 7E                  	LD	A,(HL)
    4358/    15DD :                     ;	CALL	UPPER
    4359/    15DD : FE 49               	CP	'I'
    4360/    15DF : 28 04               	JR	Z,SH0
    4361/    15E1 : FE 53               	CP	'S'
    4362/    15E3 : 20 04               	JR	NZ,SH1
    4363/    15E5 :                     SH0:
    4364/    15E5 : 23                  	INC	HL
    4365/    15E6 : 32 6C BF            	LD	(HEXMOD),A
    4366/    15E9 :                     SH1:
    4367/    15E9 : CD 7F 18            	CALL	SKIPSP
    4368/    15EC : CD 8F 18            	CALL	RDHEX
    4369/    15EF : B7                  	OR	A
    4370/    15F0 : 28 1C               	JR	Z,SHE
    4371/    15F2 : D5                  	PUSH	DE
    4372/    15F3 : DD E1               	POP	IX		; IX = Start address
    4373/    15F5 : CD 7F 18            	CALL	SKIPSP
    4374/    15F8 : 7E                  	LD	A,(HL)
    4375/    15F9 : FE 2C               	CP	','
    4376/    15FB : 20 11               	JR	NZ,SHE
    4377/    15FD : 23                  	INC	HL
    4378/    15FE : CD 7F 18            	CALL	SKIPSP
    4379/    1601 : CD 8F 18            	CALL	RDHEX		; DE = End address
    4380/    1604 : B7                  	OR	A
    4381/    1605 : 28 07               	JR	Z,SHE
    4382/    1607 : CD 7F 18            	CALL	SKIPSP
    4383/    160A : 7E                  	LD	A,(HL)
    4384/    160B : B7                  	OR	A
    4385/    160C : 28 03               	JR	Z,SH2
    4386/    160E :                     SHE:
    4387/    160E : C3 7B 01            	JP	ERR
    4388/    1611 :                     
    4389/    1611 :                     SH2:
    4390/    1611 : DD E5               	PUSH	IX
    4391/    1613 : E1                  	POP	HL
    4392/    1614 : EB                  	EX	DE,HL
    4393/    1615 : 23                  	INC	HL
    4394/    1616 : B7                  	OR	A
    4395/    1617 : ED 52               	SBC	HL,DE		; HL = Length
    4396/    1619 :                     SH3:
    4397/    1619 : CD 39 16            	CALL	SHL00
    4398/    161C : 7C                  	LD	A,H
    4399/    161D : B5                  	OR	L
    4400/    161E : 20 F9               	JR	NZ,SH3
    4401/    1620 :                     
    4402/    1620 : 3A 6C BF            	LD	A,(HEXMOD)
    4403/    1623 : FE 49               	CP	'I'
    4404/    1625 : 20 09               	JR	NZ,SH4
    4405/    1627 :                     	;; End record for Intel HEX
    4406/    1627 : 21 59 1D            	LD	HL,IHEXER
    4407/    162A : CD C5 17            	CALL	STROUT
    4408/    162D : C3 3B 01            	JP	WSTART
    4409/    1630 :                     SH4:
    4410/    1630 :                     	;; End record for Motorola S record
    4411/    1630 : 21 67 1D            	LD	HL,SRECER
    4412/    1633 : CD C5 17            	CALL	STROUT
    4413/    1636 : C3 3B 01            	JP	WSTART
    4414/    1639 :                     
    4415/    1639 :                     SHL00:
    4416/    1639 : 0E 10               	LD	C,16
    4417/    163B : 7C                  	LD	A,H
    4418/    163C : B7                  	OR	A
    4419/    163D : 20 05               	JR	NZ,SHL0
    4420/    163F : 7D                  	LD	A,L
    4421/    1640 : B9                  	CP	C
    4422/    1641 : 30 01               	JR	NC,SHL0
    4423/    1643 : 4F                  	LD	C,A
    4424/    1644 :                     SHL0:
    4425/    1644 : 06 00               	LD	B,0
    4426/    1646 : B7                  	OR	A
    4427/    1647 : ED 42               	SBC	HL,BC
    4428/    1649 : 41                  	LD	B,C
    4429/    164A :                     
    4430/    164A : 3A 6C BF            	LD	A,(HEXMOD)
    4431/    164D : FE 49               	CP	'I'
    4432/    164F : 20 30               	JR	NZ,SHLS
    4433/    1651 :                     
    4434/    1651 :                     	;; Intel HEX
    4435/    1651 : 3E 3A               	LD	A,':'
    4436/    1653 : CD B0 1F            	CALL	CONOUT
    4437/    1656 :                     
    4438/    1656 : 78                  	LD	A,B
    4439/    1657 : CD D3 17            	CALL	HEXOUT2		; Length
    4440/    165A : 48                  	LD	C,B		; Checksum
    4441/    165B :                     
    4442/    165B : 7A                  	LD	A,D
    4443/    165C : CD D3 17            	CALL	HEXOUT2
    4444/    165F : 7A                  	LD	A,D
    4445/    1660 : 81                  	ADD	A,C
    4446/    1661 : 4F                  	LD	C,A
    4447/    1662 :                     	
    4448/    1662 : 7B                  	LD	A,E
    4449/    1663 : CD D3 17            	CALL	HEXOUT2
    4450/    1666 : 7B                  	LD	A,E
    4451/    1667 : 81                  	ADD	A,C
    4452/    1668 : 4F                  	LD	C,A
    4453/    1669 :                     	
    4454/    1669 : AF                  	XOR	A
    4455/    166A : CD D3 17            	CALL	HEXOUT2
    4456/    166D :                     SHLI0:
    4457/    166D : 1A                  	LD	A,(DE)
    4458/    166E : F5                  	PUSH	AF
    4459/    166F : CD D3 17            	CALL	HEXOUT2
    4460/    1672 : F1                  	POP	AF
    4461/    1673 : 81                  	ADD	A,C
    4462/    1674 : 4F                  	LD	C,A
    4463/    1675 :                     
    4464/    1675 : 13                  	INC	DE
    4465/    1676 : 10 F5               	DJNZ	SHLI0
    4466/    1678 :                     
    4467/    1678 : 79                  	LD	A,C
    4468/    1679 : ED 44               	NEG
    4469/    167B : CD D3 17            	CALL	HEXOUT2
    4470/    167E : C3 0E 18            	JP	CRLF
    4471/    1681 :                     
    4472/    1681 :                     SHLS:
    4473/    1681 :                     	;; Motorola S record
    4474/    1681 : 3E 53               	LD	A,'S'
    4475/    1683 : CD B0 1F            	CALL	CONOUT
    4476/    1686 : 3E 31               	LD	A,'1'
    4477/    1688 : CD B0 1F            	CALL	CONOUT
    4478/    168B :                     
    4479/    168B : 78                  	LD	A,B
    4480/    168C : C6 03               	ADD	A,2+1		; DataLength + 2(Addr) + 1(Sum)
    4481/    168E : 4F                  	LD	C,A
    4482/    168F : CD D3 17            	CALL	HEXOUT2
    4483/    1692 :                     
    4484/    1692 : 7A                  	LD	A,D
    4485/    1693 : CD D3 17            	CALL	HEXOUT2
    4486/    1696 : 7A                  	LD	A,D
    4487/    1697 : 81                  	ADD	A,C
    4488/    1698 : 4F                  	LD	C,A
    4489/    1699 :                     	
    4490/    1699 : 7B                  	LD	A,E
    4491/    169A : CD D3 17            	CALL	HEXOUT2
    4492/    169D : 7B                  	LD	A,E
    4493/    169E : 81                  	ADD	A,C
    4494/    169F : 4F                  	LD	C,A
    4495/    16A0 :                     SHLS0:
    4496/    16A0 : 1A                  	LD	A,(DE)
    4497/    16A1 : F5                  	PUSH	AF
    4498/    16A2 : CD D3 17            	CALL	HEXOUT2		; Data
    4499/    16A5 : F1                  	POP	AF
    4500/    16A6 : 81                  	ADD	A,C
    4501/    16A7 : 4F                  	LD	C,A
    4502/    16A8 :                     
    4503/    16A8 : 13                  	INC	DE
    4504/    16A9 : 10 F5               	DJNZ	SHLS0
    4505/    16AB :                     
    4506/    16AB : 79                  	LD	A,C
    4507/    16AC : 2F                  	CPL
    4508/    16AD : CD D3 17            	CALL	HEXOUT2
    4509/    16B0 : C3 0E 18            	JP	CRLF
    4510/    16B3 :                     
    4511/    16B3 :                     ;;;
    4512/    16B3 :                     ;;; Register
    4513/    16B3 :                     ;;;
    4514/    16B3 :                     
    4515/    16B3 :                     REG:
    4516/    16B3 : 23                  	INC	HL
    4517/    16B4 : CD 7F 18            	CALL	SKIPSP
    4518/    16B7 :                     ;	CALL	UPPER
    4519/    16B7 : B7                  	OR	A
    4520/    16B8 : 20 06               	JR	NZ,RG0
    4521/    16BA : CD 39 17            	CALL	RDUMP
    4522/    16BD : C3 3B 01            	JP	WSTART
    4523/    16C0 :                     RG0:
    4524/    16C0 : EB                  	EX	DE,HL
    4525/    16C1 : 21 1D 1E            	LD	HL,RNTAB
    4526/    16C4 :                     RG1:
    4527/    16C4 : BE                  	CP	(HL)
    4528/    16C5 : 28 0D               	JR	Z,RG2		; Character match
    4529/    16C7 : 4F                  	LD	C,A
    4530/    16C8 : 23                  	INC	HL
    4531/    16C9 : 7E                  	LD	A,(HL)
    4532/    16CA : B7                  	OR	A
    4533/    16CB : 28 69               	JR	Z,RGE		; Found end mark
    4534/    16CD : 79                  	LD	A,C
    4535/    16CE : 01 05 00            	LD	BC,5
    4536/    16D1 : 09                  	ADD	HL,BC		; Next entry
    4537/    16D2 : 18 F0               	JR	RG1
    4538/    16D4 :                     RG2:
    4539/    16D4 : 23                  	INC	HL
    4540/    16D5 : 7E                  	LD	A,(HL)
    4541/    16D6 : FE 0F               	CP	0FH		; Link code
    4542/    16D8 : 20 09               	JR	NZ,RG3
    4543/    16DA :                     	;; Next table
    4544/    16DA : 23                  	INC	HL
    4545/    16DB : 4E                  	LD	C,(HL)
    4546/    16DC : 23                  	INC	HL
    4547/    16DD : 66                  	LD	H,(HL)
    4548/    16DE : 69                  	LD	L,C
    4549/    16DF : 13                  	INC	DE
    4550/    16E0 : 1A                  	LD	A,(DE)
    4551/    16E1 :                     ;	CALL	UPPER
    4552/    16E1 : 18 E1               	JR	RG1
    4553/    16E3 :                     RG3:
    4554/    16E3 : B7                  	OR	A
    4555/    16E4 : 28 50               	JR	Z,RGE		; Found end mark
    4556/    16E6 :                     
    4557/    16E6 : 4E                  	LD	C,(HL)		; LD C,A???
    4558/    16E7 : 23                  	INC	HL
    4559/    16E8 : 5E                  	LD	E,(HL)
    4560/    16E9 : 23                  	INC	HL
    4561/    16EA : 56                  	LD	D,(HL)
    4562/    16EB : D5                  	PUSH	DE		; Reg storage address
    4563/    16EC : 23                  	INC	HL
    4564/    16ED : 7E                  	LD	A,(HL)
    4565/    16EE : 23                  	INC	HL
    4566/    16EF : 66                  	LD	H,(HL)
    4567/    16F0 : 6F                  	LD	L,A		; HL: Reg name
    4568/    16F1 : CD C5 17            	CALL	STROUT
    4569/    16F4 : 3E 3D               	LD	A,'='
    4570/    16F6 : CD B0 1F            	CALL	CONOUT
    4571/    16F9 :                     
    4572/    16F9 : 79                  	LD	A,C
    4573/    16FA : E6 07               	AND	07H
    4574/    16FC : FE 01               	CP	1
    4575/    16FE : 20 08               	JR	NZ,RG4
    4576/    1700 :                     	;; 8 bit register
    4577/    1700 : E1                  	POP	HL
    4578/    1701 : 7E                  	LD	A,(HL)
    4579/    1702 : E5                  	PUSH	HL
    4580/    1703 : CD D3 17            	CALL	HEXOUT2
    4581/    1706 : 18 0C               	JR	RG5
    4582/    1708 :                     RG4:
    4583/    1708 :                     	;; 16 bit register
    4584/    1708 : E1                  	POP	HL
    4585/    1709 : E5                  	PUSH	HL
    4586/    170A : 23                  	INC	HL
    4587/    170B : 7E                  	LD	A,(HL)
    4588/    170C : CD D3 17            	CALL	HEXOUT2
    4589/    170F : 2B                  	DEC	HL
    4590/    1710 : 7E                  	LD	A,(HL)
    4591/    1711 : CD D3 17            	CALL	HEXOUT2
    4592/    1714 :                     RG5:
    4593/    1714 : 3E 20               	LD	A,' '
    4594/    1716 : CD B0 1F            	CALL	CONOUT
    4595/    1719 : C5                  	PUSH	BC		; C: reg size
    4596/    171A : CD 25 18            	CALL	GETLIN
    4597/    171D : CD 7F 18            	CALL	SKIPSP
    4598/    1720 : CD 8F 18            	CALL	RDHEX
    4599/    1723 : B7                  	OR	A
    4600/    1724 : 28 0D               	JR	Z,RGR
    4601/    1726 : C1                  	POP	BC
    4602/    1727 : E1                  	POP	HL
    4603/    1728 : 79                  	LD	A,C
    4604/    1729 : FE 01               	CP	1
    4605/    172B : 20 03               	JR	NZ,RG6
    4606/    172D :                     	;; 8 bit register
    4607/    172D : 73                  	LD	(HL),E
    4608/    172E : 18 03               	JR	RG7
    4609/    1730 :                     RG6:
    4610/    1730 :                     	;; 16 bit register
    4611/    1730 : 73                  	LD	(HL),E
    4612/    1731 : 23                  	INC	HL
    4613/    1732 : 72                  	LD	(HL),D
    4614/    1733 :                     RG7:
    4615/    1733 :                     RGR:
    4616/    1733 : C3 3B 01            	JP	WSTART
    4617/    1736 :                     RGE:
    4618/    1736 : C3 7B 01            	JP	ERR
    4619/    1739 :                     
    4620/    1739 :                     RDUMP:
    4621/    1739 : 21 74 1D            	LD	HL,RDTAB
    4622/    173C :                     RD0:
    4623/    173C : 5E                  	LD	E,(HL)
    4624/    173D : 23                  	INC	HL
    4625/    173E : 56                  	LD	D,(HL)
    4626/    173F : 23                  	INC	HL
    4627/    1740 : 7A                  	LD	A,D
    4628/    1741 : B3                  	OR	E
    4629/    1742 : CA 0E 18            	JP	Z,CRLF		; End
    4630/    1745 : D5                  	push	de
    4631/    1746 : EB                  	EX	DE,HL
    4632/    1747 : CD C5 17            	CALL	STROUT	; print name of register
    4633/    174A : EB                  	EX	DE,HL
    4634/    174B : D1                  	pop	de
    4635/    174C :                     
    4636/    174C :                     ; flag check
    4637/    174C : 3E 1D               	ld	a, RDSF_H
    4638/    174E : BA                  	cp	d
    4639/    174F : 20 07               	jr	nz, rd101
    4640/    1751 : 3E DF               	ld	a, RDSF_L
    4641/    1753 : BB                  	cp	e
    4642/    1754 : 20 02               	jr	nz, rd101
    4643/    1756 : 18 29               	jr	rd20
    4644/    1758 :                     
    4645/    1758 :                     rd101:
    4646/    1758 : 3E 1E               	ld	a, RDSFX_H
    4647/    175A : BA                  	cp	d
    4648/    175B : 20 05               	jr	nz, rd10
    4649/    175D : 3E 06               	ld	a, RDSFX_L
    4650/    175F : BB                  	cp	e
    4651/    1760 : 28 1F               	jr	z, rd20
    4652/    1762 :                     
    4653/    1762 :                     rd10:
    4654/    1762 : 5E                  	LD	E,(HL)
    4655/    1763 : 23                  	INC	HL
    4656/    1764 : 56                  	LD	D,(HL)
    4657/    1765 : 23                  	INC	HL
    4658/    1766 : 7E                  	LD	A,(HL)
    4659/    1767 : 23                  	INC	HL
    4660/    1768 : EB                  	EX	DE,HL
    4661/    1769 : FE 01               	CP	1
    4662/    176B : 20 07               	JR	NZ,RD1
    4663/    176D :                     	;; 1 byte
    4664/    176D : 7E                  	LD	A,(HL)
    4665/    176E : CD D3 17            	CALL	HEXOUT2
    4666/    1771 : EB                  	EX	DE,HL
    4667/    1772 : 18 C8               	JR	RD0
    4668/    1774 :                     RD1:
    4669/    1774 :                     	;; 2 byte
    4670/    1774 : 23                  	INC	HL
    4671/    1775 : 7E                  	LD	A,(HL)
    4672/    1776 : CD D3 17            	CALL	HEXOUT2		; High byte
    4673/    1779 : 2B                  	DEC	HL
    4674/    177A : 7E                  	LD	A,(HL)
    4675/    177B : CD D3 17            	CALL	HEXOUT2		; Low byte
    4676/    177E : EB                  	EX	DE,HL
    4677/    177F : 18 BB               	JR	RD0
    4678/    1781 :                     
    4679/    1781 :                     ; make flag image string
    4680/    1781 :                     rd20:
    4681/    1781 : 5E                  	LD	E,(HL)
    4682/    1782 : 23                  	INC	HL
    4683/    1783 : 56                  	LD	D,(HL)
    4684/    1784 : 23                  	INC	HL
    4685/    1785 : 1A                  	ld	a, (de)		; get flag values
    4686/    1786 :                     
    4687/    1786 : D5                  	push	de
    4688/    1787 : E5                  	push	hl
    4689/    1788 :                     
    4690/    1788 :                     ; make flag image
    4691/    1788 :                     
    4692/    1788 : 21 AE BF            	ld	hl, F_bit
    4693/    178B : 01 B5 17            	ld	bc, F_bit_on
    4694/    178E : 11 BD 17            	ld	de, F_bit_off
    4695/    1791 : F5                  	push	af		; adjustment SP. DO NOT DELETE THIS LINE!
    4696/    1792 :                     
    4697/    1792 :                     flg_loop:
    4698/    1792 : F1                  	pop	af		; "push af" before loop back
    4699/    1793 : CB 27               	sla	a
    4700/    1795 : 30 06               	jr	nc, flg_off
    4701/    1797 : F5                  	push	af
    4702/    1798 : 0A                  	ld	a, (bc)
    4703/    1799 : 77                  	ld	(hl), a
    4704/    179A : F1                  	pop	af
    4705/    179B : 18 04               	jr	flg_nxt
    4706/    179D :                     flg_off:
    4707/    179D : F5                  	push	af
    4708/    179E : 1A                  	ld	a, (de)
    4709/    179F : 77                  	ld	(hl), a
    4710/    17A0 : F1                  	pop	af
    4711/    17A1 :                     
    4712/    17A1 :                     flg_nxt:
    4713/    17A1 : 03                  	inc	bc
    4714/    17A2 : 13                  	inc	de
    4715/    17A3 : 23                  	inc	hl
    4716/    17A4 :                     
    4717/    17A4 : F5                  	push	af
    4718/    17A5 : 7E                  	ld	a, (hl)
    4719/    17A6 : B7                  	or	a		;check delimiter
    4720/    17A7 : 20 E9               	jr	nz, flg_loop
    4721/    17A9 :                     
    4722/    17A9 : F1                  	pop	af		; restore stack position
    4723/    17AA : 21 AE BF            	ld	hl, F_bit
    4724/    17AD : CD C5 17            	call	STROUT		; print flag register for bit imaze
    4725/    17B0 :                     
    4726/    17B0 : E1                  	pop	hl
    4727/    17B1 : D1                  	pop	de
    4728/    17B2 :                     
    4729/    17B2 : 23                  	inc	hl
    4730/    17B3 : 18 87               	JR	RD0
    4731/    17B5 :                     
    4732/    17B5 : 53 5A 2E 48 2E 50   F_bit_on:	db	"SZ.H.PNC"
             17BB : 4E 43             
    4733/    17BD : 2E 2E 2E 2E 2E 2E   F_bit_off:	db	"........"
             17C3 : 2E 2E             
    4734/    17C5 :                     
    4735/    17C5 :                     
    4736/    17C5 :                     ;;;
    4737/    17C5 :                     ;;; Other support routines
    4738/    17C5 :                     ;;;
    4739/    17C5 :                     
    4740/    17C5 :                     STROUT:
    4741/    17C5 : 7E                  	LD	A,(HL)
    4742/    17C6 : A7                  	AND	A
    4743/    17C7 : C8                  	RET	Z
    4744/    17C8 : CD B0 1F            	CALL	CONOUT
    4745/    17CB : 23                  	INC	HL
    4746/    17CC : 18 F7               	JR	STROUT
    4747/    17CE :                     
    4748/    17CE :                     ; input:  HL
    4749/    17CE :                     ; output: 4 hex_char output console
    4750/    17CE :                     
    4751/    17CE :                     HEXOUT4:
    4752/    17CE : 7C                  	LD	A,H
    4753/    17CF : CD D3 17            	CALL	HEXOUT2
    4754/    17D2 : 7D                  	LD	A,L
    4755/    17D3 :                     
    4756/    17D3 :                     ; input:  A
    4757/    17D3 :                     ; output: 2 hex_char output console
    4758/    17D3 :                     HEXOUT2:
    4759/    17D3 : F5                  	PUSH	AF
    4760/    17D4 : 1F                  	RRA
    4761/    17D5 : 1F                  	RRA
    4762/    17D6 : 1F                  	RRA
    4763/    17D7 : 1F                  	RRA
    4764/    17D8 : CD DC 17            	CALL	HEXOUT1
    4765/    17DB : F1                  	POP	AF
    4766/    17DC :                     
    4767/    17DC :                     ; input:  A
    4768/    17DC :                     ; output: 1 hex_char output console
    4769/    17DC :                     HEXOUT1:
    4770/    17DC : E6 0F               	AND	0FH
    4771/    17DE : C6 30               	ADD	A,'0'
    4772/    17E0 : FE 3A               	CP	'9'+1
    4773/    17E2 : DA B0 1F            	JP	C,CONOUT
    4774/    17E5 : C6 07               	ADD	A,'A'-'9'-1
    4775/    17E7 : C3 B0 1F            	JP	CONOUT
    4776/    17EA :                     
    4777/    17EA :                     HEXIN:
    4778/    17EA : AF                  	XOR	A
    4779/    17EB : CD F2 17            	CALL	HI0
    4780/    17EE : 07                  	RLCA
    4781/    17EF : 07                  	RLCA
    4782/    17F0 : 07                  	RLCA
    4783/    17F1 : 07                  	RLCA
    4784/    17F2 :                     HI0:
    4785/    17F2 : C5                  	PUSH	BC
    4786/    17F3 : 4F                  	LD	C,A
    4787/    17F4 : CD 84 1F            	CALL	CONIN
    4788/    17F7 :                     ;	CALL	UPPER
    4789/    17F7 : FE 30               	CP	'0'
    4790/    17F9 : 38 11               	JR	C,HIR
    4791/    17FB : FE 3A               	CP	'9'+1
    4792/    17FD : 38 0A               	JR	C,HI1
    4793/    17FF : FE 41               	CP	'A'
    4794/    1801 : 38 09               	JR	C,HIR
    4795/    1803 : FE 47               	CP	'F'+1
    4796/    1805 : 30 05               	JR	NC,HIR
    4797/    1807 : D6 07               	SUB	'A'-'9'-1
    4798/    1809 :                     HI1:
    4799/    1809 : D6 30               	SUB	'0'
    4800/    180B : B1                  	OR	C
    4801/    180C :                     HIR:
    4802/    180C : C1                  	POP	BC
    4803/    180D : C9                  	RET
    4804/    180E :                     	
    4805/    180E :                     CRLF:
    4806/    180E : 3E 0D               	LD	A,CR
    4807/    1810 : CD B0 1F            	CALL	CONOUT
    4808/    1813 : 3E 0A               	LD	A,LF
    4809/    1815 : C3 B0 1F            	JP	CONOUT
    4810/    1818 :                     
    4811/    1818 :                     CLR_CRT:
    4812/    1818 : E5                  	PUSH	HL
    4813/    1819 : 21 21 18            	LD	HL, ESC_CRT_CLR
    4814/    181C : CD C5 17            	CALL	STROUT
    4815/    181F : E1                  	POP	HL
    4816/    1820 : C9                  	RET
    4817/    1821 :                     	
    4818/    1821 :                     ESC_CRT_CLR:
    4819/    1821 : 1B                  	db	01BH
    4820/    1822 : 5B 32               	db	"[2"
    4821/    1824 : 00                  	db	0
    4822/    1825 :                     
    4823/    1825 :                     GETLIN:
    4824/    1825 : 21 43 BF            	LD	HL,INBUF
    4825/    1828 :                     
    4826/    1828 :                     GL00:
    4827/    1828 : E5                  	push	hl
    4828/    1829 : C5                  	PUSH	BC
    4829/    182A : 06 00               	LD	B,0
    4830/    182C :                     
    4831/    182C :                     GL0:	; input hl
    4832/    182C :                     
    4833/    182C : CD 84 1F            	CALL	CONIN
    4834/    182F : FE 0D               	CP	CR
    4835/    1831 : 28 44               	JR	Z,GLE
    4836/    1833 : FE 0A               	CP	LF
    4837/    1835 : 28 40               	JR	Z,GLE
    4838/    1837 : FE 08               	CP	BS
    4839/    1839 : 28 25               	JR	Z,GLB
    4840/    183B : FE 7F               	CP	DEL
    4841/    183D : 28 21               	JR	Z,GLB
    4842/    183F : FE 20               	CP	' '
    4843/    1841 : 38 E9               	JR	C,GL0
    4844/    1843 : FE 80               	CP	80H
    4845/    1845 : 30 E5               	JR	NC,GL0
    4846/    1847 : 4F                  	LD	C,A
    4847/    1848 : 78                  	LD	A,B
    4848/    1849 : FE 1F               	CP	BUFLEN-1
    4849/    184B : 30 DF               	JR	NC,GL0	; Too long
    4850/    184D : 04                  	INC	B
    4851/    184E : 79                  	LD	A,C
    4852/    184F : CD B0 1F            	CALL	CONOUT
    4853/    1852 : FE 61               	cp	'a'
    4854/    1854 : 38 06               	jr	c, GL1
    4855/    1856 : FE 7B               	cp	'z'+1
    4856/    1858 : 30 02               	jr	nc, GL1
    4857/    185A : E6 DF               	and	0DFH	; make upper code
    4858/    185C :                     GL1:
    4859/    185C : 77                  	LD	(HL),A
    4860/    185D : 23                  	INC	HL
    4861/    185E : 18 CC               	JR	GL0
    4862/    1860 :                     GLB:
    4863/    1860 : 78                  	LD	A,B
    4864/    1861 : A7                  	AND	A
    4865/    1862 : 28 C8               	JR	Z,GL0
    4866/    1864 : 05                  	DEC	B
    4867/    1865 : 2B                  	DEC	HL
    4868/    1866 : 3E 08               	LD	A,08H
    4869/    1868 : CD B0 1F            	CALL	CONOUT
    4870/    186B : 3E 20               	LD	A,' '
    4871/    186D : CD B0 1F            	CALL	CONOUT
    4872/    1870 : 3E 08               	LD	A,08H
    4873/    1872 : CD B0 1F            	CALL	CONOUT
    4874/    1875 : 18 B5               	JR	GL0
    4875/    1877 :                     GLE:
    4876/    1877 : CD 0E 18            	CALL	CRLF
    4877/    187A : 36 00               	LD	(HL),00H
    4878/    187C : C1                  	POP	BC
    4879/    187D : E1                  	pop	hl
    4880/    187E : C9                  	RET
    4881/    187F :                     
    4882/    187F :                     SKIPSP:
    4883/    187F : 7E                  	LD	A,(HL)
    4884/    1880 : FE 20               	CP	' '
    4885/    1882 : C0                  	RET	NZ
    4886/    1883 : 23                  	INC	HL
    4887/    1884 : 18 F9               	JR	SKIPSP
    4888/    1886 :                     
    4889/    1886 :                     UPPER:
    4890/    1886 : FE 61               	CP	'a'
    4891/    1888 : D8                  	RET	C
    4892/    1889 : FE 7B               	CP	'z'+1
    4893/    188B : D0                  	RET	NC
    4894/    188C : C6 E0               	ADD	A,'A'-'a'
    4895/    188E : C9                  	RET
    4896/    188F :                     
    4897/    188F :                     RDHEX:
    4898/    188F : 0E 00               	LD	C,0
    4899/    1891 : 11 00 00            	LD	DE,0
    4900/    1894 :                     RH0:
    4901/    1894 : 7E                  	LD	A,(HL)
    4902/    1895 :                     ;	CALL	UPPER
    4903/    1895 : FE 30               	CP	'0'
    4904/    1897 : 38 2C               	JR	C,RHE
    4905/    1899 : FE 3A               	CP	'9'+1
    4906/    189B : 38 0A               	JR	C,RH1
    4907/    189D : FE 41               	CP	'A'
    4908/    189F : 38 24               	JR	C,RHE
    4909/    18A1 : FE 47               	CP	'F'+1
    4910/    18A3 : 30 20               	JR	NC,RHE
    4911/    18A5 : D6 07               	SUB	'A'-'9'-1
    4912/    18A7 :                     RH1:
    4913/    18A7 : D6 30               	SUB	'0'
    4914/    18A9 : 17                  	RLA
    4915/    18AA : 17                  	RLA
    4916/    18AB : 17                  	RLA
    4917/    18AC : 17                  	RLA
    4918/    18AD : 17                  	RLA
    4919/    18AE : CB 13               	RL	E
    4920/    18B0 : CB 12               	RL	D
    4921/    18B2 : 17                  	RLA
    4922/    18B3 : CB 13               	RL	E
    4923/    18B5 : CB 12               	RL	D
    4924/    18B7 : 17                  	RLA
    4925/    18B8 : CB 13               	RL	E
    4926/    18BA : CB 12               	RL	D
    4927/    18BC : 17                  	RLA
    4928/    18BD : CB 13               	RL	E
    4929/    18BF : CB 12               	RL	D
    4930/    18C1 : 23                  	INC	HL
    4931/    18C2 : 0C                  	INC	C
    4932/    18C3 : 18 CF               	JR	RH0
    4933/    18C5 :                     RHE:
    4934/    18C5 : 79                  	ld	a, c
    4935/    18C6 : B7                  	or	a
    4936/    18C7 : 28 06               	jr	z, rhe1
    4937/    18C9 : FE 05               	cp	5
    4938/    18CB : 30 02               	jr	nc, rhe1
    4939/    18CD : B7                  	or	a	; clear carry
    4940/    18CE : C9                  	ret
    4941/    18CF :                     	
    4942/    18CF :                     rhe1:
    4943/    18CF : 37                  	scf	; set carry
    4944/    18D0 : C9                  	RET
    4945/    18D1 :                     
    4946/    18D1 :                     ;;;
    4947/    18D1 :                     ;;; API Handler
    4948/    18D1 :                     ;;:   C : API entory NO.
    4949/    18D1 :                     ;;;
    4950/    18D1 :                     
    4951/    18D1 :                     RST30H_IN:
    4952/    18D1 :                     
    4953/    18D1 : E5                  	PUSH	HL
    4954/    18D2 : C5                  	PUSH	BC
    4955/    18D3 : 21 E1 18            	LD	HL,APITBL
    4956/    18D6 : 06 00               	LD	B,0
    4957/    18D8 : 09                  	ADD	HL,BC
    4958/    18D9 : 09                  	ADD	HL,BC
    4959/    18DA : 46                  	LD	B,(HL)
    4960/    18DB : 23                  	INC	HL
    4961/    18DC : 66                  	LD	H,(HL)
    4962/    18DD : 68                  	LD	L,B
    4963/    18DE : C1                  	POP	BC
    4964/    18DF : E3                  	EX	(SP),HL		; Restore HL, jump address on stack top
    4965/    18E0 :                     no_operate:
    4966/    18E0 : C9                  	RET
    4967/    18E1 :                     
    4968/    18E1 :                     APITBL:
    4969/    18E1 : 0B 19               	DW	API00		; 00: CSTART
    4970/    18E3 : 0E 19               	DW	API01		; 01: WSTART
    4971/    18E5 : B0 1F               	DW	CONOUT		; 02: CONOUT
    4972/    18E7 : C5 17               	DW	STROUT		; 03: STROUT
    4973/    18E9 : 84 1F               	DW	CONIN		; 04: CONIN
    4974/    18EB : AA 1F               	DW	CONST		; 05: CONST
    4975/    18ED : 50 19               	DW	API06		; 06: PSPEC
    4976/    18EF : CE 17               	DW	HEXOUT4		; 07: CONOUT HEX4bytes: input HL
    4977/    18F1 : D3 17               	DW	HEXOUT2		; 08: CONOUT HEX2bytes: input A
    4978/    18F3 : DC 17               	DW	HEXOUT1		; 09: CONOUT HEX1byte : input A
    4979/    18F5 : 18 18               	DW	CLR_CRT		; 10: Clear screen (ESC+[2)
    4980/    18F7 : 28 18               	DW	GL00		; 11: GET a line (input HL : input buffer address)
    4981/    18F9 : 7F 18               	DW	SKIPSP		; 12: SKIP Spase
    4982/    18FB : 0E 18               	DW	CRLF		; 13: CONOUT CRLF
    4983/    18FD : 86 18               	DW	UPPER		; 14: Lower to UPPER
    4984/    18FF : 8F 18               	DW	RDHEX		; 15: get hex number from chr buffer
    4985/    1901 :                     				;     input  HL : hex string buffer
    4986/    1901 :                     				;     output DE : hex number
    4987/    1901 :                     				;            CF=1 : error, C, A = hex counts(1-4)
    4988/    1901 : 87 1A               	DW	DEC_STR		; 16: get decimal srtings
    4989/    1903 :                     				; input hl : return storings buffer addr.
    4990/    1903 :                     				;       de : 16bit binary
    4991/    1903 : BD 1A               	DW	DIV16_8		; 17; division 16bit / 8bit
    4992/    1905 : 33 1B               	DW	MUL_8		; 18: multiply 8bit * 8bit
    4993/    1907 : E0 18               	DW	no_operate	; 19: no operation : if RAM12K=0
    4994/    1909 : 6E 08               	dw	get_disasm_st	; 20: dis assemble string
    4995/    190B :                     				;     input: HL buffer. need 42bytes
    4996/    190B :                     				;     output : DE : next MC address
    4997/    190B :                     				;              A  : disassembled MC size
    4998/    190B :                     
    4999/    190B :                     	;; CSTART
    5000/    190B :                     API00:
    5001/    190B : C3 BE 00            	JP	CSTART
    5002/    190E :                     
    5003/    190E :                     	;; WSTART from API
    5004/    190E :                     API01:
    5005/    190E : 31 00 BF            	LD	SP,STACKM	; reset SP for monitor
    5006/    1911 :                     
    5007/    1911 :                     ; check stop by bp and trace operation
    5008/    1911 :                     
    5009/    1911 : 3A AA BF            	ld	a, (tmpb_f)
    5010/    1914 : B7                  	or	a
    5011/    1915 : 28 06               	jr	z, ws_chk1
    5012/    1917 : 21 AB BF            	ld	hl, tmpb_op
    5013/    191A : CD 3F 1A            	call	rstr_tpt
    5014/    191D :                     ws_chk1:
    5015/    191D : 3A 9A BF            	ld	a, (tpt1_f)
    5016/    1920 : B7                  	or	a
    5017/    1921 : 28 06               	jr	z, ws_chk2
    5018/    1923 : 21 9B BF            	ld	hl, tpt1_op
    5019/    1926 : CD 3F 1A            	call	rstr_tpt
    5020/    1929 :                     
    5021/    1929 :                     ws_chk2:
    5022/    1929 : 3A 9E BF            	ld	a, (tpt2_f)
    5023/    192C : B7                  	or	a
    5024/    192D : 28 06               	jr	z, ws_chk3
    5025/    192F : 21 9F BF            	ld	hl, tpt2_op
    5026/    1932 : CD 3F 1A            	call	rstr_tpt
    5027/    1935 :                     ws_chk3:
    5028/    1935 : 3A A6 BF            	ld	a, (bpt2_f)
    5029/    1938 : B7                  	or	a
    5030/    1939 : 28 06               	jr	z, ws_chk4
    5031/    193B : 21 A7 BF            	ld	hl, bpt2_op
    5032/    193E : CD 4B 1A            	call	rstr_bpt
    5033/    1941 :                     ws_chk4:
    5034/    1941 : 3A A2 BF            	ld	a, (bpt1_f)
    5035/    1944 : B7                  	or	a
    5036/    1945 : 28 06               	jr	z, ws_chk5
    5037/    1947 : 21 A3 BF            	ld	hl, bpt1_op
    5038/    194A : CD 4B 1A            	call	rstr_bpt
    5039/    194D :                     ws_chk5:
    5040/    194D : C3 15 1A            	JP	backTomon
    5041/    1950 :                     
    5042/    1950 :                     	;; PSPEC
    5043/    1950 :                     API06:
    5044/    1950 : AF                  	XOR	A
    5045/    1951 : C9                  	RET
    5046/    1952 :                     
    5047/    1952 :                     ;;;
    5048/    1952 :                     ;;; Break Point
    5049/    1952 :                     ;;; trace Point
    5050/    1952 :                     ;;; go, stop point
    5051/    1952 :                     ;;; operation handler
    5052/    1952 :                     ;;
    5053/    1952 :                     RST38H_IN:
    5054/    1952 : F5                  	PUSH	AF
    5055/    1953 : ED 5F               	LD	A,R
    5056/    1955 : 32 88 BF            	LD	(REGR),A
    5057/    1958 : ED 57               	LD	A,I
    5058/    195A : 32 87 BF            	LD	(REGI),A
    5059/    195D : 22 75 BF            	LD	(REGHL),HL
    5060/    1960 : ED 53 73 BF         	LD	(REGDE),DE
    5061/    1964 : ED 43 71 BF         	LD	(REGBC),BC
    5062/    1968 : E1                  	POP	HL
    5063/    1969 : 22 6F BF            	LD	(REGAF),HL
    5064/    196C : 08                  	EX	AF,AF'
    5065/    196D : F5                  	PUSH	AF
    5066/    196E : D9                  	EXX
    5067/    196F : 22 7D BF            	LD	(REGHLX),HL
    5068/    1972 : ED 53 7B BF         	LD	(REGDEX),DE
    5069/    1976 : ED 43 79 BF         	LD	(REGBCX),BC
    5070/    197A : E1                  	POP	HL
    5071/    197B : 22 77 BF            	LD	(REGAFX),HL
    5072/    197E : DD 22 7F BF         	LD	(REGIX),IX
    5073/    1982 : FD 22 81 BF         	LD	(REGIY),IY
    5074/    1986 : E1                  	POP	HL
    5075/    1987 : 2B                  	DEC	HL
    5076/    1988 : 22 85 BF            	LD	(REGPC),HL
    5077/    198B : ED 73 83 BF         	LD	(REGSP),SP
    5078/    198F :                     
    5079/    198F :                     ; check bp and trace operation
    5080/    198F :                     
    5081/    198F : 31 00 BF            	LD	SP,STACKM	; reset SP for monitor
    5082/    1992 : AF                  	xor	a
    5083/    1993 : 57                  	ld	d, a
    5084/    1994 : 5F                  	ld	e, a		;clear msg pointer
    5085/    1995 :                     
    5086/    1995 :                     
    5087/    1995 :                     ; check go, end operation
    5088/    1995 : 3A AA BF            	ld	a, (tmpb_f)
    5089/    1998 : B7                  	or	a
    5090/    1999 : 28 09               	jr	z, chk_bp
    5091/    199B : 11 75 1A            	ld	de, stpBrk_msg
    5092/    199E : 21 AB BF            	ld	hl, tmpb_op
    5093/    19A1 : CD 3F 1A            	call	rstr_tpt
    5094/    19A4 :                     
    5095/    19A4 :                     ; check set break point
    5096/    19A4 :                     
    5097/    19A4 :                     chk_bp:
    5098/    19A4 : 3A A6 BF            	ld	a, (bpt2_f)
    5099/    19A7 : B7                  	or	a
    5100/    19A8 : 28 09               	jr	z, bp_chk1
    5101/    19AA : 11 75 1A            	ld	de, stpBrk_msg
    5102/    19AD : 21 A7 BF            	ld	hl, bpt2_op
    5103/    19B0 : CD 4B 1A            	call	rstr_bpt
    5104/    19B3 :                     
    5105/    19B3 :                     bp_chk1:
    5106/    19B3 : 3A A2 BF            	ld	a, (bpt1_f)
    5107/    19B6 : B7                  	or	a
    5108/    19B7 : 28 09               	jr	z, tp_chk1
    5109/    19B9 : 11 75 1A            	ld	de, stpBrk_msg
    5110/    19BC : 21 A3 BF            	ld	hl, bpt1_op
    5111/    19BF : CD 4B 1A            	call	rstr_bpt
    5112/    19C2 :                     
    5113/    19C2 :                     ; check trace operation
    5114/    19C2 :                     tp_chk1:
    5115/    19C2 : 3A 9A BF            	ld	a, (tpt1_f)
    5116/    19C5 : B7                  	or	a
    5117/    19C6 : 28 09               	jr	z, tp_chk2
    5118/    19C8 : 11 7E 1A            	ld	de, trace_msg
    5119/    19CB : 21 9B BF            	ld	hl, tpt1_op
    5120/    19CE : CD 3F 1A            	call	rstr_tpt
    5121/    19D1 :                     
    5122/    19D1 :                     tp_chk2:
    5123/    19D1 : 3A 9E BF            	ld	a, (tpt2_f)
    5124/    19D4 : B7                  	or	a
    5125/    19D5 : 28 09               	jr	z, bp_chk_end
    5126/    19D7 :                     
    5127/    19D7 : 11 7E 1A            	ld	de, trace_msg
    5128/    19DA : 21 9F BF            	ld	hl, tpt2_op
    5129/    19DD : CD 3F 1A            	call	rstr_tpt
    5130/    19E0 :                     
    5131/    19E0 :                     bp_chk_end:
    5132/    19E0 : 7A                  	ld	a, d
    5133/    19E1 : B3                  	or	e
    5134/    19E2 : 20 03               	jr	nz, no_rst38_msg
    5135/    19E4 :                     
    5136/    19E4 :                     	; set RST 38H message
    5137/    19E4 : 11 6B 1A            	LD	de,RST38MSG
    5138/    19E7 :                     
    5139/    19E7 :                     no_rst38_msg:
    5140/    19E7 : 1A                  	ld	a, (de)		; get first char of message
    5141/    19E8 : FE 54               	cp	'T'		; trace ?
    5142/    19EA : 28 0C               	jr	z, chk_ntrace
    5143/    19EC :                     	
    5144/    19EC : EB                  	ex	de, hl
    5145/    19ED : CD C5 17            	CALL	STROUT
    5146/    19F0 :                     
    5147/    19F0 :                     	;; R register adjustment
    5148/    19F0 :                     
    5149/    19F0 : CD 39 17            	CALL	RDUMP
    5150/    19F3 : CD 52 1A            	call	dis_call	; list disassemble
    5151/    19F6 : 18 1D               	jr	backTomon	; goto WBOOT
    5152/    19F8 :                     
    5153/    19F8 :                     ;
    5154/    19F8 :                     ; check continue trace operation
    5155/    19F8 :                     ;
    5156/    19F8 :                     chk_ntrace:
    5157/    19F8 : 3A 93 BF            	ld	a, (TP_mode)
    5158/    19FB : FE 46               	cp	'F'		; chk
    5159/    19FD : 28 0A               	jr	z, skp_rmsg
    5160/    19FF :                     
    5161/    19FF :                     ;no_trace:
    5162/    19FF : EB                  	ex	de, hl
    5163/    1A00 : CD C5 17            	CALL	STROUT
    5164/    1A03 :                     
    5165/    1A03 :                     	;; R register adjustment
    5166/    1A03 :                     
    5167/    1A03 : CD 39 17            	CALL	RDUMP
    5168/    1A06 : CD 52 1A            	call	dis_call	; list disassemble
    5169/    1A09 :                     
    5170/    1A09 :                     skp_rmsg:
    5171/    1A09 : CD AA 1F            	call	CONST
    5172/    1A0C : 28 13               	jr	z, t_no_ky		; no key in
    5173/    1A0E : CD 84 1F            	call	CONIN
    5174/    1A11 : FE 03               	cp	03h	; chk CTL+C
    5175/    1A13 : 20 0C               	jr	nz, t_no_ky
    5176/    1A15 :                     
    5177/    1A15 :                     	; stop_trace
    5178/    1A15 :                     backTomon:
    5179/    1A15 : AF                  	xor	a
    5180/    1A16 : 32 99 BF            	ld	(fever_t), a	; clear forever flag
    5181/    1A19 : 67                  	ld	h, a
    5182/    1A1A : 6F                  	ld	l, a
    5183/    1A1B : 22 95 BF            	ld	(TC_cnt), hl
    5184/    1A1E : C3 3B 01            	JP	WSTART
    5185/    1A21 :                     	
    5186/    1A21 :                     	; check trace forever
    5187/    1A21 :                     t_no_ky:
    5188/    1A21 : 3A 99 BF            	ld	a, (fever_t)
    5189/    1A24 : B7                  	or	a
    5190/    1A25 : C2 36 1A            	jp	nz, repeat_trace
    5191/    1A28 :                     
    5192/    1A28 : 2A 95 BF            	ld	hl, (TC_cnt)
    5193/    1A2B : 2B                  	dec	hl
    5194/    1A2C : 22 95 BF            	ld	(TC_cnt), hl
    5195/    1A2F : 7D                  	ld	a, l
    5196/    1A30 : B4                  	or	h
    5197/    1A31 : 20 03               	jr	nz, repeat_trace
    5198/    1A33 : C3 3B 01            	JP	WSTART
    5199/    1A36 :                     
    5200/    1A36 :                     repeat_trace:
    5201/    1A36 : 2A 85 BF            	ld	hl, (REGPC)
    5202/    1A39 : 22 97 BF            	ld	(tmpT), hl
    5203/    1A3C : C3 5E 04            	jp	t_op_chk
    5204/    1A3F :                     
    5205/    1A3F :                     rstr_tpt:	; HL=buffer point
    5206/    1A3F : E5                  	push	hl
    5207/    1A40 : 7E                  	ld	a, (hl)
    5208/    1A41 : 23                  	inc	hl
    5209/    1A42 : 4E                  	ld	c, (hl)
    5210/    1A43 : 23                  	inc	hl
    5211/    1A44 : 46                  	ld	b, (hl)
    5212/    1A45 :                     
    5213/    1A45 : 02                  	ld	(bc), a		; restor OP CODE
    5214/    1A46 : E1                  	pop	hl
    5215/    1A47 : AF                  	xor	a
    5216/    1A48 : 2B                  	dec	hl
    5217/    1A49 : 77                  	ld	(hl), a		; clear trace flag
    5218/    1A4A : C9                  	ret
    5219/    1A4B :                     
    5220/    1A4B :                     rstr_bpt:	; HL=buffer point
    5221/    1A4B : 7E                  	ld	a, (hl)
    5222/    1A4C : 23                  	inc	hl
    5223/    1A4D : 4E                  	ld	c, (hl)
    5224/    1A4E : 23                  	inc	hl
    5225/    1A4F : 46                  	ld	b, (hl)
    5226/    1A50 :                     
    5227/    1A50 : 02                  	ld	(bc), a		; restor OP CODE
    5228/    1A51 : C9                  	ret
    5229/    1A52 :                     
    5230/    1A52 :                     dis_call:
    5231/    1A52 : 2A 85 BF            	ld	hl, (REGPC)
    5232/    1A55 : 22 BA BF            	ld	(dasm_adr), hl	; set disasm address
    5233/    1A58 : CD C4 08            	call	dis_analysis
    5234/    1A5B : CD 89 08            	call	mk_adr_str	; conout address and machine code
    5235/    1A5E : 21 C1 BF            	ld	hl, adr_mc_buf
    5236/    1A61 : CD C5 17            	call	STROUT		; conout disassemble strings
    5237/    1A64 : 2A 85 BF            	ld	hl, (REGPC)
    5238/    1A67 : 22 BA BF            	ld	(dasm_adr), hl	; restrore disasm address
    5239/    1A6A : C9                  	ret
    5240/    1A6B :                     
    5241/    1A6B :                     RST38MSG:
    5242/    1A6B : 52 53 54 20 33 38   	DB	"RST 38H",CR,LF,00H
             1A71 : 48 0D 0A 00       
    5243/    1A75 :                     stpBrk_msg:	
    5244/    1A75 : 42 72 65 61 6B 21   	db	"Break!",CR,LF,00H
             1A7B : 0D 0A 00          
    5245/    1A7E :                     trace_msg:	
    5246/    1A7E : 54 72 61 63 65 21   	db	"Trace!",CR,LF,00H
             1A84 : 0D 0A 00          
    5247/    1A87 :                     
    5248/    1A87 :                     ;
    5249/    1A87 :                     ; make decimal string
    5250/    1A87 :                     ;
    5251/    1A87 :                     ; input HL : output string buffer
    5252/    1A87 :                     ;       DE : 16bit binary
    5253/    1A87 :                     ;
    5254/    1A87 :                     ; output (HL) : decimal strings
    5255/    1A87 :                     
    5256/    1A87 :                     DEC_STR:
    5257/    1A87 : F5                  	PUSH	AF
    5258/    1A88 : C5                  	PUSH	BC
    5259/    1A89 : D5                  	PUSH	DE
    5260/    1A8A : E5                  	push	hl
    5261/    1A8B : DD E5               	push	ix
    5262/    1A8D :                     
    5263/    1A8D : E5                  	push	hl
    5264/    1A8E : DD E1               	pop	ix		; ix: save buffer top address
    5265/    1A90 :                     
    5266/    1A90 : EB                  	ex	de, hl		; hl: 16bit binary, de: buffer
    5267/    1A91 : E5                  	push	hl		; save 16bit binary
    5268/    1A92 : 21 05 00            	ld	hl, 5
    5269/    1A95 : 19                  	add	hl, de		; hl = buffer + 5
    5270/    1A96 : AF                  	xor	a
    5271/    1A97 : 77                  	ld	(hl), A
    5272/    1A98 : EB                  	ex	de, hl		; de: buffer + 5, hl : buffer
    5273/    1A99 : E1                  	pop	hl		; hl : 16bit binary
    5274/    1A9A : 01 01 00            	LD	BC, 1
    5275/    1A9D :                     
    5276/    1A9D :                     LOOP_DEC:
    5277/    1A9D : 3E 0A               	LD	A, 10
    5278/    1A9F : CD BD 1A            	CALL	DIV16_8
    5279/    1AA2 : F6 30               	OR	30H
    5280/    1AA4 : 1B                  	DEC	DE
    5281/    1AA5 : 12                  	LD	(DE), A
    5282/    1AA6 : 0C                  	INC	C
    5283/    1AA7 : 7C                  	LD	A, H
    5284/    1AA8 : B5                  	OR	L
    5285/    1AA9 : 20 F2               	JR	NZ, LOOP_DEC
    5286/    1AAB :                     
    5287/    1AAB : 79                  	LD	A, C
    5288/    1AAC : FE 06               	CP	6
    5289/    1AAE : 28 06               	JR	Z, END_DEC
    5290/    1AB0 :                     
    5291/    1AB0 : DD E5               	push	ix
    5292/    1AB2 : E1                  	pop	hl		; hl : buffer top address
    5293/    1AB3 : EB                  	EX	DE, HL
    5294/    1AB4 : ED B0               	LDIR
    5295/    1AB6 :                     
    5296/    1AB6 :                     END_DEC:
    5297/    1AB6 : DD E1               	pop	ix
    5298/    1AB8 : E1                  	pop	hl
    5299/    1AB9 : D1                  	POP	DE
    5300/    1ABA : C1                  	POP	BC
    5301/    1ABB : F1                  	POP	AF
    5302/    1ABC : C9                  	RET
    5303/    1ABD :                     
    5304/    1ABD :                     
    5305/    1ABD :                     ; DIV 16bit / 8 bit
    5306/    1ABD :                     ; input
    5307/    1ABD :                     ;	HL, A
    5308/    1ABD :                     ; output
    5309/    1ABD :                     ;	result = HL, mod = A
    5310/    1ABD :                     
    5311/    1ABD :                     DIV16_8:
    5312/    1ABD : C5                  	PUSH	BC
    5313/    1ABE : D5                  	PUSH	DE
    5314/    1ABF :                     
    5315/    1ABF : 4F                  	LD	C, A
    5316/    1AC0 : 06 0F               	LD	B, 15
    5317/    1AC2 : AF                  	XOR	A
    5318/    1AC3 : 29                  	ADD	HL, HL
    5319/    1AC4 : 17                  	RLA
    5320/    1AC5 : 91                  	SUB	C
    5321/    1AC6 : 38 0D               	JR	C, D16_MINUS_BEFORE
    5322/    1AC8 : 29                  	ADD	HL, HL
    5323/    1AC9 : 2C                  	INC	L
    5324/    1ACA :                     
    5325/    1ACA :                     D16_PLUS:
    5326/    1ACA : 17                  	RLA
    5327/    1ACB : 91                  	SUB	C
    5328/    1ACC : 38 0C               	JR	C, D16_MINUS_AFTER
    5329/    1ACE :                     
    5330/    1ACE :                     D16_PLUS_AFTER:
    5331/    1ACE : 29                  	ADD	HL, HL
    5332/    1ACF : 2C                  	INC	L
    5333/    1AD0 : 10 F8               	DJNZ	D16_PLUS
    5334/    1AD2 : C3 DE 1A            	JP	D16_END
    5335/    1AD5 :                     
    5336/    1AD5 :                     D16_MINUS_BEFORE:
    5337/    1AD5 : 29                  	ADD	HL, HL
    5338/    1AD6 :                     
    5339/    1AD6 :                     D16_MINUS:
    5340/    1AD6 : 17                  	RLA
    5341/    1AD7 : 81                  	ADD	A, C
    5342/    1AD8 : 38 F4               	JR	C, D16_PLUS_AFTER
    5343/    1ADA :                     
    5344/    1ADA :                     D16_MINUS_AFTER:
    5345/    1ADA : 29                  	ADD	HL, HL
    5346/    1ADB : 10 F9               	DJNZ	D16_MINUS
    5347/    1ADD : 81                  	ADD	A,C
    5348/    1ADE :                     D16_END:
    5349/    1ADE : D1                  	POP	DE
    5350/    1ADF : C1                  	POP	BC
    5351/    1AE0 : C9                  	RET
    5352/    1AE1 :                     
    5353/    1AE1 :                     ;
    5354/    1AE1 :                     ; input : HL / DE
    5355/    1AE1 :                     ; output : quotient HL
    5356/    1AE1 :                     ;	   remainder DE
    5357/    1AE1 :                     
    5358/    1AE1 :                     DIV16:
    5359/    1AE1 : 22 89 BF            	LD	(DIV16_NA), HL
    5360/    1AE4 : ED 53 8B BF         	LD	(DIV16_NB), DE
    5361/    1AE8 :                     
    5362/    1AE8 : AF                  	XOR	A
    5363/    1AE9 : 32 8D BF            	LD	(DIV16_NC), A
    5364/    1AEC : 32 8E BF            	LD	(DIV16_NC+1), A
    5365/    1AEF : 32 8F BF            	LD	(DIV16_ND), A
    5366/    1AF2 : 32 90 BF            	LD	(DIV16_ND+1), A
    5367/    1AF5 : 06 10               	LD	B, 16
    5368/    1AF7 :                     
    5369/    1AF7 :                     DIV16_X2:
    5370/    1AF7 : 21 8D BF            	LD	HL, DIV16_NC
    5371/    1AFA : CB 26               	SLA	(HL)
    5372/    1AFC : 23                  	INC	HL
    5373/    1AFD : CB 16               	RL	(HL)
    5374/    1AFF :                     
    5375/    1AFF : 21 89 BF            	LD	HL, DIV16_NA
    5376/    1B02 : CB 26               	SLA	(HL)
    5377/    1B04 : 23                  	INC	HL
    5378/    1B05 : CB 16               	RL	(HL)
    5379/    1B07 : 21 8F BF            	LD	HL, DIV16_ND
    5380/    1B0A : CB 16               	RL	(HL)
    5381/    1B0C : 23                  	INC	HL
    5382/    1B0D : CB 16               	RL	(HL)
    5383/    1B0F :                     
    5384/    1B0F : 2A 8B BF            	LD	HL, (DIV16_NB)
    5385/    1B12 : 5D                  	LD	E, L
    5386/    1B13 : 54                  	LD	D, H
    5387/    1B14 : 2A 8F BF            	LD	HL, (DIV16_ND)
    5388/    1B17 : AF                  	XOR	A
    5389/    1B18 : ED 52               	SBC	HL, DE
    5390/    1B1A : 30 02               	JR	NC, DIV16_X0
    5391/    1B1C : 18 0B               	JR	DIV16_X1
    5392/    1B1E :                     
    5393/    1B1E :                     DIV16_X0:
    5394/    1B1E : 22 8F BF            	LD	(DIV16_ND), HL
    5395/    1B21 :                     
    5396/    1B21 : 3A 8D BF            	LD	A, (DIV16_NC)
    5397/    1B24 : F6 01               	OR	1
    5398/    1B26 : 32 8D BF            	LD	(DIV16_NC), A
    5399/    1B29 :                     
    5400/    1B29 :                     DIV16_X1:
    5401/    1B29 : 10 CC               	DJNZ	DIV16_X2
    5402/    1B2B :                     
    5403/    1B2B : 2A 8D BF            	LD	HL,(DIV16_NC)
    5404/    1B2E : ED 5B 8F BF         	LD	DE,(DIV16_ND)
    5405/    1B32 : C9                  	RET
    5406/    1B33 :                     
    5407/    1B33 :                     ; 8bit * 8bit : ans = 16bit
    5408/    1B33 :                     ; input A , BC
    5409/    1B33 :                     ; output HL
    5410/    1B33 :                     
    5411/    1B33 :                     MUL_8:
    5412/    1B33 : F5                  	PUSH	AF
    5413/    1B34 : C5                  	PUSH	BC
    5414/    1B35 : B7                  	OR	A	; clear carry
    5415/    1B36 : 18 04               	JR	ST_MUL8
    5416/    1B38 :                     
    5417/    1B38 :                     LOOP_M8:
    5418/    1B38 : CB 21               	SLA	C
    5419/    1B3A : CB 10               	RL	B
    5420/    1B3C :                     
    5421/    1B3C :                     ST_MUL8:
    5422/    1B3C : 1F                  	RRA
    5423/    1B3D : 30 F9               	JR	NC, LOOP_M8
    5424/    1B3F : 09                  	ADD	HL, BC
    5425/    1B40 : 20 F6               	JR	NZ, LOOP_M8
    5426/    1B42 : C1                  	POP	BC
    5427/    1B43 : F1                  	POP	AF
    5428/    1B44 : C9                  	RET
    5429/    1B45 :                     ;;;
    5430/    1B45 :                     ;;; Messages
    5431/    1B45 :                     ;;;
    5432/    1B45 :                     
    5433/    1B45 : 3F 20 3A 43 6F 6D   cmd_hlp:	db	"? :Command Help", CR, LF
             1B4B : 6D 61 6E 64 20 48 
             1B51 : 65 6C 70 0D 0A    
    5434/    1B56 : 44 5B 3C 61 64 72   		db	"D[<adr>] :Dump Memory", CR, LF
             1B5C : 3E 5D 20 3A 44 75 
             1B62 : 6D 70 20 4D 65 6D 
             1B68 : 6F 72 79 0D 0A    
    5435/    1B6D : 53 5B 3C 61 64 72   		db	"S[<adr>] :Set Memory", CR, LF
             1B73 : 3E 5D 20 3A 53 65 
             1B79 : 74 20 4D 65 6D 6F 
             1B7F : 72 79 0D 0A       
    5436/    1B83 : 52 5B 3C 72 65 67   		db	"R[<reg>] :Set or Dump register", CR, LF
             1B89 : 3E 5D 20 3A 53 65 
             1B8F : 74 20 6F 72 20 44 
             1B95 : 75 6D 70 20 72 65 
             1B9B : 67 69 73 74 65 72 
             1BA1 : 0D 0A             
    5437/    1BA3 : 47 5B 3C 61 64 72   		db	"G[<adr>][,<stop adr>] :Go and Stop", CR, LF
             1BA9 : 3E 5D 5B 2C 3C 73 
             1BAF : 74 6F 70 20 61 64 
             1BB5 : 72 3E 5D 20 3A 47 
             1BBB : 6F 20 61 6E 64 20 
             1BC1 : 53 74 6F 70 0D 0A 
    5438/    1BC7 : 4C 20 3A 4C 6F 61   		db	"L :Load HexFile", CR, LF
             1BCD : 64 20 48 65 78 46 
             1BD3 : 69 6C 65 0D 0A    
    5439/    1BD8 : 50 5B 49 7C 53 5D   		db	"P[I|S] :Save HexFile(I:Intel,S:Motorola)", CR, LF
             1BDE : 20 3A 53 61 76 65 
             1BE4 : 20 48 65 78 46 69 
             1BEA : 6C 65 28 49 3A 49 
             1BF0 : 6E 74 65 6C 2C 53 
             1BF6 : 3A 4D 6F 74 6F 72 
             1BFC : 6F 6C 61 29 0D 0A 
    5440/    1C02 : 23 4C 7C 3C 6E 75   		db	"#L|<num> :Launch program", CR, LF
             1C08 : 6D 3E 20 3A 4C 61 
             1C0E : 75 6E 63 68 20 70 
             1C14 : 72 6F 67 72 61 6D 
             1C1A : 0D 0A             
    5441/    1C1C : 42 5B 31 7C 32 5B   		db	"B[1|2[,<adr>]] :Set or List Break Point", CR, LF
             1C22 : 2C 3C 61 64 72 3E 
             1C28 : 5D 5D 20 3A 53 65 
             1C2E : 74 20 6F 72 20 4C 
             1C34 : 69 73 74 20 42 72 
             1C3A : 65 61 6B 20 50 6F 
             1C40 : 69 6E 74 0D 0A    
    5442/    1C45 : 42 43 5B 31 7C 32   		db	"BC[1|2] :Clear Break Point", CR, LF
             1C4B : 5D 20 3A 43 6C 65 
             1C51 : 61 72 20 42 72 65 
             1C57 : 61 6B 20 50 6F 69 
             1C5D : 6E 74 0D 0A       
    5443/    1C61 : 54 5B 3C 61 64 72   		db	"T[<adr>][,<steps>|-1] : Trace command", CR, LF
             1C67 : 3E 5D 5B 2C 3C 73 
             1C6D : 74 65 70 73 3E 7C 
             1C73 : 2D 31 5D 20 3A 20 
             1C79 : 54 72 61 63 65 20 
             1C7F : 63 6F 6D 6D 61 6E 
             1C85 : 64 0D 0A          
    5444/    1C88 : 54 50 5B 4F 4E 7C   		db	"TP[ON|OFF] :Trace Print Mode", CR, LF
             1C8E : 4F 46 46 5D 20 3A 
             1C94 : 54 72 61 63 65 20 
             1C9A : 50 72 69 6E 74 20 
             1CA0 : 4D 6F 64 65 0D 0A 
    5445/    1CA6 : 54 4D 5B 49 7C 53   		db	"TM[I|S] :Trace Option for CALL", CR, LF
             1CAC : 5D 20 3A 54 72 61 
             1CB2 : 63 65 20 4F 70 74 
             1CB8 : 69 6F 6E 20 66 6F 
             1CBE : 72 20 43 41 4C 4C 
             1CC4 : 0D 0A             
    5446/    1CC6 : 44 49 5B 3C 61 64   		db	"DI[<adr>][,s<steps>|<adr>] :Disassemble", CR, LF, 00h
             1CCC : 72 3E 5D 5B 2C 73 
             1CD2 : 3C 73 74 65 70 73 
             1CD8 : 3E 7C 3C 61 64 72 
             1CDE : 3E 5D 20 3A 44 69 
             1CE4 : 73 61 73 73 65 6D 
             1CEA : 62 6C 65 0D 0A 00 
    5447/    1CF0 :                     
    5448/    1CF0 :                     OPNMSG:
    5449/    1CF0 : 0D 0A               	DB	CR,LF
    5450/    1CF2 : 53 42 43 5A 38 30   	db	"SBCZ80 MONITOR Rev.B02",CR,LF
             1CF8 : 20 4D 4F 4E 49 54 
             1CFE : 4F 52 20 52 65 76 
             1D04 : 2E 42 30 32 0D 0A 
    5451/    1D0A : 54 68 69 73 20 6D   	db	"This monitor is based on unimon.",CR,LF,00H
             1D10 : 6F 6E 69 74 6F 72 
             1D16 : 20 69 73 20 62 61 
             1D1C : 73 65 64 20 6F 6E 
             1D22 : 20 75 6E 69 6D 6F 
             1D28 : 6E 2E 0D 0A 00    
    5452/    1D2D :                     
    5453/    1D2D :                     PROMPT:
    5454/    1D2D : 5D 20 00            	DB	"] ",00H
    5455/    1D30 :                     
    5456/    1D30 :                     IHEMSG:
    5457/    1D30 : 45 72 72 6F 72 20   	DB	"Error ihex",CR,LF,00H
             1D36 : 69 68 65 78 0D 0A 
             1D3C : 00                
    5458/    1D3D :                     SHEMSG:
    5459/    1D3D : 45 72 72 6F 72 20   	DB	"Error srec",CR,LF,00H
             1D43 : 73 72 65 63 0D 0A 
             1D49 : 00                
    5460/    1D4A :                     ERRMSG:
    5461/    1D4A : 45 72 72 6F 72 0D   	DB	"Error",CR,LF,00H
             1D50 : 0A 00             
    5462/    1D52 :                     
    5463/    1D52 :                     DSEP0:
    5464/    1D52 : 20 3A 00            	DB	" :",00H
    5465/    1D55 :                     DSEP1:
    5466/    1D55 : 20 3A 20 00         	DB	" : ",00H
    5467/    1D59 :                     IHEXER:
    5468/    1D59 : 3A 30 30 30 30 30           DB	":00000001FF",CR,LF,00H
             1D5F : 30 30 31 46 46 0D 
             1D65 : 0A 00             
    5469/    1D67 :                     SRECER:
    5470/    1D67 : 53 39 30 33 30 30           DB	"S9030000FC",CR,LF,00H
             1D6D : 30 30 46 43 0D 0A 
             1D73 : 00                
    5471/    1D74 :                     
    5472/    1D74 :                     	;; Register dump table
    5473/    1D74 : C9 1D 70 BF         RDTAB:	DW	RDSA,   REGAF+1
    5474/    1D78 : 01                  	DB	1
    5475/    1D79 : CD 1D 71 BF         	DW	RDSBC,  REGBC
    5476/    1D7D : 02                  	DB	2
    5477/    1D7E : D3 1D 73 BF         	DW	RDSDE,  REGDE
    5478/    1D82 : 02                  	DB	2
    5479/    1D83 : D9 1D 75 BF         	DW	RDSHL,  REGHL
    5480/    1D87 : 02                  	DB	2
    5481/    1D88 : DF 1D 6F BF         	DW	RDSF,   REGAF
    5482/    1D8C : 01                  	DB	1
    5483/    1D8D :                     
    5484/    1D8D : E4 1D 7F BF         	DW	RDSIX,  REGIX
    5485/    1D91 : 02                  	DB	2
    5486/    1D92 : E9 1D 81 BF         	DW	RDSIY,  REGIY
    5487/    1D96 : 02                  	DB	2
    5488/    1D97 :                     
    5489/    1D97 : EE 1D 78 BF         	DW	RDSAX,  REGAFX+1
    5490/    1D9B : 01                  	DB	1
    5491/    1D9C : F4 1D 79 BF         	DW	RDSBCX, REGBCX
    5492/    1DA0 : 02                  	DB	2
    5493/    1DA1 : FA 1D 7B BF         	DW	RDSDEX, REGDEX
    5494/    1DA5 : 02                  	DB	2
    5495/    1DA6 : 00 1E 7D BF         	DW	RDSHLX, REGHLX
    5496/    1DAA : 02                  	DB	2
    5497/    1DAB : 06 1E 77 BF         	DW	RDSFX,  REGAFX
    5498/    1DAF : 01                  	DB	1
    5499/    1DB0 :                     
    5500/    1DB0 : 0B 1E 83 BF         	DW	RDSSP,  REGSP
    5501/    1DB4 : 02                  	DB	2
    5502/    1DB5 : 10 1E 85 BF         	DW	RDSPC,  REGPC
    5503/    1DB9 : 02                  	DB	2
    5504/    1DBA : 15 1E 87 BF         	DW	RDSI,   REGI
    5505/    1DBE : 01                  	DB	1
    5506/    1DBF : 19 1E 88 BF         	DW	RDSR,   REGR
    5507/    1DC3 : 01                  	DB	1
    5508/    1DC4 :                     
    5509/    1DC4 : 00 00 00 00         	DW	0000H,  0000H
    5510/    1DC8 : 00                  	DB	0
    5511/    1DC9 :                     
    5512/    1DC9 : 41 20 3D 00         RDSA:	DB	"A =",00H
    5513/    1DCD : 20 42 43 20 3D 00   RDSBC:	DB	" BC =",00H
    5514/    1DD3 : 20 44 45 20 3D 00   RDSDE:	DB	" DE =",00H
    5515/    1DD9 : 20 48 4C 20 3D 00   RDSHL:	DB	" HL =",00H
    5516/    1DDF :                     
    5517/    1DDF : 20 46 20 3D 00      RDSF:	DB	" F =",00H
    5518/    1DE4 :                     
    5519/    1DE4 : =1DH                 RDSF_H	equ	RDSF >> 8
    5520/    1DE4 : =0DFH                RDSF_L	equ	RDSF & 0FFh
    5521/    1DE4 :                     
    5522/    1DE4 :                     
    5523/    1DE4 : 20 49 58 3D 00      RDSIX:	DB	" IX=",00H
    5524/    1DE9 : 20 49 59 3D 00      RDSIY:	DB	" IY=",00H
    5525/    1DEE : 0D 0A 41 27 3D 00   RDSAX:	DB	CR,LF,"A'=",00H
    5526/    1DF4 : 20 42 43 27 3D 00   RDSBCX:	DB	" BC'=",00H
    5527/    1DFA : 20 44 45 27 3D 00   RDSDEX:	DB	" DE'=",00H
    5528/    1E00 : 20 48 4C 27 3D 00   RDSHLX:	DB	" HL'=",00H
    5529/    1E06 :                     
    5530/    1E06 : 20 46 27 3D 00      RDSFX:	DB	" F'=",00H
    5531/    1E0B :                     
    5532/    1E0B : =1EH                 RDSFX_H	equ	RDSFX >> 8
    5533/    1E0B : =6H                  RDSFX_L	equ	RDSFX & 0FFh
    5534/    1E0B :                     
    5535/    1E0B : 20 53 50 3D 00      RDSSP:	DB	" SP=",00H
    5536/    1E10 : 20 50 43 3D 00      RDSPC:	DB	" PC=",00H
    5537/    1E15 : 20 49 3D 00         RDSI:	DB	" I=",00H
    5538/    1E19 : 20 52 3D 00         RDSR:	DB	" R=",00H
    5539/    1E1D :                     
    5540/    1E1D :                     RNTAB:
    5541/    1E1D : 41 0F               	DB	'A',0FH		; "A?"
    5542/    1E1F : 67 1E 00 00         	DW	RNTABA,0
    5543/    1E23 : 42 0F               	DB	'B',0FH		; "B?"
    5544/    1E25 : 75 1E 00 00         	DW	RNTABB,0
    5545/    1E29 : 43 0F               	DB	'C',0FH		; "C?"
    5546/    1E2B : 97 1E 00 00         	DW	RNTABC,0
    5547/    1E2F : 44 0F               	DB	'D',0FH		; "D?"
    5548/    1E31 : A5 1E 00 00         	DW	RNTABD,0
    5549/    1E35 : 45 0F               	DB	'E',0FH		; "E?"
    5550/    1E37 : C7 1E 00 00         	DW	RNTABE,0
    5551/    1E3B : 46 0F               	DB	'F',0FH		; "F?"
    5552/    1E3D : D5 1E 00 00         	DW	RNTABF,0
    5553/    1E41 : 48 0F               	DB	'H',0FH		; "H?"
    5554/    1E43 : E3 1E 00 00         	DW	RNTABH,0
    5555/    1E47 : 49 0F               	DB	'I',0FH		; "I?"
    5556/    1E49 : 13 1F 00 00         	DW	RNTABI,0
    5557/    1E4D : 4C 0F               	DB	'L',0FH		; "L?"
    5558/    1E4F : 05 1F 00 00         	DW	RNTABL,0
    5559/    1E53 : 50 0F               	DB	'P',0FH		; "P?"
    5560/    1E55 : 27 1F 00 00         	DW	RNTABP,0
    5561/    1E59 : 52 01               	DB	'R',1		; "R"
    5562/    1E5B : 88 BF 82 1F         	DW	REGR,RNR
    5563/    1E5F : 53 0F               	DB	'S',0FH		; "S?"
    5564/    1E61 : 2F 1F 00 00         	DW	RNTABS,0
    5565/    1E65 :                     
    5566/    1E65 : 00 00               	DB	00H,0		; End mark
    5567/    1E67 :                     
    5568/    1E67 :                     RNTABA:
    5569/    1E67 : 00 01               	DB	00H,1		; "A"
    5570/    1E69 : 70 BF 37 1F         	DW	REGAF+1,RNA
    5571/    1E6D : 27 01               	DB	27H,1		; "A'"
    5572/    1E6F :                     ;;	DB	'\'',1		; "A'"
    5573/    1E6F : 78 BF 50 1F         	DW	REGAFX+1,RNAX
    5574/    1E73 :                     
    5575/    1E73 : 00 00               	DB	00H,0
    5576/    1E75 :                     	
    5577/    1E75 :                     RNTABB:
    5578/    1E75 : 00 01               	DB	00H,1		; "B"
    5579/    1E77 : 72 BF 3C 1F         	DW	REGBC+1,RNB
    5580/    1E7B : 27 01               	DB	27H,1		; "B'"
    5581/    1E7D :                     ;;	DB	'\'',1		; "B'"
    5582/    1E7D : 7A BF 57 1F         	DW	REGBCX+1,RNBX
    5583/    1E81 : 43 0F               	DB	'C',0FH		; "BC?"
    5584/    1E83 : 89 1E 00 00         	DW	RNTABBC,0
    5585/    1E87 :                     
    5586/    1E87 : 00 00               	DB	00H,0		; End mark
    5587/    1E89 :                     
    5588/    1E89 :                     RNTABBC:
    5589/    1E89 : 00 02               	DB	00H,2		; "BC"
    5590/    1E8B : 71 BF 39 1F         	DW	REGBC,RNBC
    5591/    1E8F : 27 02               	DB	27H,2		; "BC'"
    5592/    1E91 :                     ;;	DB	'\'',2		; "BC'"
    5593/    1E91 : 79 BF 53 1F         	DW	REGBCX,RNBCX
    5594/    1E95 :                     
    5595/    1E95 : 00 00               	DB	00H,0
    5596/    1E97 :                     	
    5597/    1E97 :                     RNTABC:
    5598/    1E97 : 00 01               	DB	00H,1		; "C"
    5599/    1E99 : 71 BF 3E 1F         	DW	REGBC,RNC
    5600/    1E9D : 27 01               	DB	27H,1		; "C'"
    5601/    1E9F :                     ;;	DB	'\'',1		; "C'"
    5602/    1E9F : 79 BF 5A 1F         	DW	REGBCX,RNCX
    5603/    1EA3 :                     
    5604/    1EA3 : 00 00               	DB	00H,0
    5605/    1EA5 :                     	
    5606/    1EA5 :                     RNTABD:
    5607/    1EA5 : 00 01               	DB	00H,1		; "D"
    5608/    1EA7 : 74 BF 43 1F         	DW	REGDE+1,RND
    5609/    1EAB : 27 01               	DB	27H,1		; "D'"
    5610/    1EAD :                     ;;	DB	'\'',1		; "D'"
    5611/    1EAD : 7C BF 61 1F         	DW	REGDEX+1,RNDX
    5612/    1EB1 : 45 0F               	DB	'E',0FH		; "DE?"
    5613/    1EB3 : B9 1E 00 00         	DW	RNTABDE,0
    5614/    1EB7 :                     
    5615/    1EB7 : 00 00               	DB	00H,0
    5616/    1EB9 :                     
    5617/    1EB9 :                     RNTABDE:
    5618/    1EB9 : 00 02               	DB	00H,2		; "DE"
    5619/    1EBB : 73 BF 40 1F         	DW	REGDE,RNDE
    5620/    1EBF : 27 02               	DB	27H,2		; "DE'"
    5621/    1EC1 :                     ;;	DB	'\'',2		; "DE'"
    5622/    1EC1 : 7B BF 5D 1F         	DW	REGDEX,RNDEX
    5623/    1EC5 :                     
    5624/    1EC5 : 00 00               	DB	00H,0
    5625/    1EC7 :                     	
    5626/    1EC7 :                     RNTABE:
    5627/    1EC7 : 00 01               	DB	00H,1		; "E"
    5628/    1EC9 : 73 BF 45 1F         	DW	REGDE,RNE
    5629/    1ECD : 27 01               	DB	27H,1		; "E'"
    5630/    1ECF :                     ;;	DB	'\'',1		; "E'"
    5631/    1ECF : 7B BF 64 1F         	DW	REGDEX,RNEX
    5632/    1ED3 :                     
    5633/    1ED3 : 00 00               	DB	00H,0
    5634/    1ED5 :                     	
    5635/    1ED5 :                     RNTABF:
    5636/    1ED5 : 00 01               	DB	00H,1		; "F"
    5637/    1ED7 : 6F BF 4E 1F         	DW	REGAF,RNF
    5638/    1EDB : 27 01               	DB	27H,1		; "F'"
    5639/    1EDD :                     ;;	DB	'\'',1		; "F'"
    5640/    1EDD : 77 BF 71 1F         	DW	REGAFX,RNFX
    5641/    1EE1 :                     
    5642/    1EE1 : 00 00               	DB	00H,0
    5643/    1EE3 :                     	
    5644/    1EE3 :                     RNTABH:
    5645/    1EE3 : 00 01               	DB	00H,1		; "H"
    5646/    1EE5 : 76 BF 4A 1F         	DW	REGHL+1,RNH
    5647/    1EE9 : 27 01               	DB	27H,1		; "H'"
    5648/    1EEB :                     ;;	DB	'\'',1		; "H'"
    5649/    1EEB : 7E BF 6B 1F         	DW	REGHLX+1,RNHX
    5650/    1EEF : 4C 0F               	DB	'L',0FH		; "HL?"
    5651/    1EF1 : F7 1E 00 00         	DW	RNTABHL,0
    5652/    1EF5 :                     
    5653/    1EF5 : 00 00               	DB	00H,0
    5654/    1EF7 :                     
    5655/    1EF7 :                     RNTABHL:
    5656/    1EF7 : 00 02               	DB	00H,2		; "HL"
    5657/    1EF9 : 75 BF 47 1F         	DW	REGHL,RNHL
    5658/    1EFD : 27 02               	DB	27H,2		; "HL'"
    5659/    1EFF :                     ;;	DB	'\'',2		; "HL'"
    5660/    1EFF : 7D BF 67 1F         	DW	REGHLX,RNHLX
    5661/    1F03 :                     
    5662/    1F03 : 00 00               	DB	00H,0
    5663/    1F05 :                     	
    5664/    1F05 :                     RNTABL:
    5665/    1F05 : 00 01               	DB	00H,1		; "L"
    5666/    1F07 : 75 BF 4C 1F         	DW	REGHL,RNL
    5667/    1F0B : 27 01               	DB	27H,1		; "L'"
    5668/    1F0D :                     ;;	DB	'\'',1		; "L'"
    5669/    1F0D : 7D BF 6E 1F         	DW	REGHLX,RNLX
    5670/    1F11 :                     
    5671/    1F11 : 00 00               	DB	00H,0
    5672/    1F13 :                     	
    5673/    1F13 :                     RNTABI:
    5674/    1F13 : 00 01               	DB	00H,1		; "I"
    5675/    1F15 : 87 BF 80 1F         	DW	REGI,RNI
    5676/    1F19 : 58 02               	DB	'X',2		; "IX"
    5677/    1F1B : 7F BF 74 1F         	DW	REGIX,RNIX
    5678/    1F1F : 59 02               	DB	'Y',2		; "IY"
    5679/    1F21 : 81 BF 77 1F         	DW	REGIY,RNIY
    5680/    1F25 :                     	
    5681/    1F25 : 00 00               	DB	00H,0
    5682/    1F27 :                     
    5683/    1F27 :                     RNTABP:
    5684/    1F27 : 43 02               	DB	'C',2		; "PC"
    5685/    1F29 : 85 BF 7D 1F         	DW	REGPC,RNPC
    5686/    1F2D :                     
    5687/    1F2D : 00 00               	DB	00H,0
    5688/    1F2F :                     
    5689/    1F2F :                     RNTABS:
    5690/    1F2F : 50 02               	DB	'P',2		; "SP"
    5691/    1F31 : 83 BF 7A 1F         	DW	REGSP,RNSP
    5692/    1F35 :                     
    5693/    1F35 : 00 00               	DB	00H,0
    5694/    1F37 :                     
    5695/    1F37 : 41 00               RNA:	DB	"A",00H
    5696/    1F39 : 42 43 00            RNBC:	DB	"BC",00H
    5697/    1F3C : 42 00               RNB:	DB	"B",00H
    5698/    1F3E : 43 00               RNC:	DB	"C",00H
    5699/    1F40 : 44 45 00            RNDE:	DB	"DE",00H
    5700/    1F43 : 44 00               RND:	DB	"D",00H
    5701/    1F45 : 45 00               RNE:	DB	"E",00H
    5702/    1F47 : 48 4C 00            RNHL:	DB	"HL",00H
    5703/    1F4A : 48 00               RNH:	DB	"H",00H
    5704/    1F4C : 4C 00               RNL:	DB	"L",00H
    5705/    1F4E : 46 00               RNF:	DB	"F",00H
    5706/    1F50 : 41 27 00            RNAX:	DB	"A'",00H
    5707/    1F53 : 42 43 27 00         RNBCX:	DB	"BC'",00H
    5708/    1F57 : 42 27 00            RNBX:	DB	"B'",00H
    5709/    1F5A : 43 27 00            RNCX:	DB	"C'",00H
    5710/    1F5D : 44 45 27 00         RNDEX:	DB	"DE'",00H
    5711/    1F61 : 44 27 00            RNDX:	DB	"D'",00H
    5712/    1F64 : 45 27 00            RNEX:	DB	"E'",00H
    5713/    1F67 : 48 4C 27 00         RNHLX:	DB	"HL'",00H
    5714/    1F6B : 48 27 00            RNHX:	DB	"H'",00H
    5715/    1F6E : 4C 27 00            RNLX:	DB	"L'",00H
    5716/    1F71 : 46 27 00            RNFX:	DB	"F'",00H
    5717/    1F74 : 49 58 00            RNIX:	DB	"IX",00H
    5718/    1F77 : 49 59 00            RNIY:	DB	"IY",00H
    5719/    1F7A : 53 50 00            RNSP:	DB	"SP",00H
    5720/    1F7D : 50 43 00            RNPC:	DB	"PC",00H
    5721/    1F80 : 49 00               RNI:	DB	"I",00H
    5722/    1F82 : 52 00               RNR:	DB	"R",00H
    5723/    1F84 :                     
    5724/    1F84 :                     ;;;
    5725/    1F84 :                     ;;; Console drivers
    5726/    1F84 :                     ;;;
    5727/    1F84 :                     
    5728/    1F84 :                     ;	BUFER -> A
    5729/    1F84 :                     ;
    5730/    1F84 :                     ;	SAVE REGISTERS
    5731/    1F84 :                     CONIN: ; RXA
    5732/    1F84 : C5                  	PUSH	BC
    5733/    1F85 : D5                  	PUSH	DE
    5734/    1F86 : E5                  	PUSH	HL
    5735/    1F87 :                     ;
    5736/    1F87 :                     ;	WAIT FOR NOT EMPTY
    5737/    1F87 : 3A 00 BF            RXWAIT:	LD	A,(RBFCNT)
    5738/    1F8A : FE 00               	CP	00H
    5739/    1F8C : 28 F9               	JR	Z,RXWAIT
    5740/    1F8E :                     ;
    5741/    1F8E :                     ;	READ DATA
    5742/    1F8E : F3                  	DI
    5743/    1F8F : 3D                  	DEC	A
    5744/    1F90 : 32 00 BF            	LD	(RBFCNT),A
    5745/    1F93 : 3A 01 BF            	LD	A,(RBFRDP)
    5746/    1F96 : 4F                  	LD	C,A
    5747/    1F97 : 06 00               	LD	B,00H
    5748/    1F99 : 21 03 BF            	LD	HL,RECBUF
    5749/    1F9C : 09                  	ADD	HL,BC
    5750/    1F9D : 56                  	LD	D,(HL)
    5751/    1F9E : 3C                  	INC	A
    5752/    1F9F : E6 3F               	AND	RBFSIZ-1
    5753/    1FA1 : 32 01 BF            	LD	(RBFRDP),A
    5754/    1FA4 : 7A                  	LD	A,D
    5755/    1FA5 : FB                  	EI
    5756/    1FA6 :                     ;
    5757/    1FA6 :                     ;	RESTORE REGISTERS
    5758/    1FA6 : E1                  	POP	HL
    5759/    1FA7 : D1                  	POP	DE
    5760/    1FA8 : C1                  	POP	BC
    5761/    1FA9 : C9                  	RET
    5762/    1FAA :                     
    5763/    1FAA :                     ;
    5764/    1FAA :                     ;	CHECK RECEIVE STATUS
    5765/    1FAA :                     CONST: ; KBHIT
    5766/    1FAA : 3A 00 BF            	LD	A,(RBFCNT)
    5767/    1FAD : FE 00               	CP	00H
    5768/    1FAF : C9                  	RET
    5769/    1FB0 :                     
    5770/    1FB0 :                     ;	A -> SIO
    5771/    1FB0 :                     ;
    5772/    1FB0 :                     ;	SAVE REGISTERS
    5773/    1FB0 :                     CONOUT:	; TXA
    5774/    1FB0 : F5                  	PUSH	AF
    5775/    1FB1 :                     ;
    5776/    1FB1 :                     ;	WAIT FOR SEND DONE
    5777/    1FB1 : DB 01               TXWAIT:	IN	A,(PSIOAC)
    5778/    1FB3 : CB 57               	BIT	2,A
    5779/    1FB5 : 28 FA               	JR	Z,TXWAIT
    5780/    1FB7 :                     ;
    5781/    1FB7 :                     ;	SEND DATA
    5782/    1FB7 : F1                  	POP	AF
    5783/    1FB8 : D3 00               	OUT	(PSIOAD),A
    5784/    1FBA : C9                  	RET
    5785/    1FBB :                     
    5786/    1FBB : FF FF FF FF FF FF   	db	BASIC_TOP - $ dup(0ffH)
             1FC1 : FF FF FF FF FF FF 
             1FC7 : FF FF FF FF FF FF 
             1FCD : FF FF FF FF FF FF 
             1FD3 : FF FF FF FF FF FF 
             1FD9 : FF FF FF FF FF FF 
             1FDF : FF FF FF FF FF FF 
             1FE5 : FF FF FF FF FF FF 
             1FEB : FF FF FF FF FF FF 
             1FF1 : FF FF FF FF FF FF 
             1FF7 : FF FF FF FF FF FF 
             1FFD : FF FF FF          
    5787/    2000 :                     ;	ORG	BASIC_TOP
    5788/    2000 :                     
    5789/    2000 :                     ;;;
    5790/    2000 :                     ;;; RAM area
    5791/    2000 :                     ;;;
    5792/    2000 :                     
    5793/    2000 :                     	;;
    5794/    2000 :                     	;; Work Area
    5795/    2000 :                     	;;
    5796/    2000 :                     	
    5797/    BF00 :                     	ORG	WORK_B
    5798/    BF00 :                     
    5799/    BF00 : =>FALSE              	IF	BACKDOOR
    5800/    BF00 :                     stealRST08:	ds	2	; hacking RST 08H, set jump address
    5801/    BF00 :                     stealRST10:	ds	2	; hacking RST 10H, set jump address
    5802/    BF00 :                     stealRST18:	ds	2	; hacking RST 18H, set jump address
    5803/    BF00 :                     stealRST20:	ds	2	; hacking RST 20H, set jump address
    5804/    BF00 :                     stealRST28:	ds	2	; hacking RST 28H, set jump address
    5805/    BF00 :                     stealRST30:	ds	2	; hacking RST 30H, set jump address
    5806/    BF00 :                     stealRST38:	ds	2	; hacking RST 38H, set jump address
    5807/    BF00 :                     save_hl:	ds	2
    5808/    BF00 : [5799]               	ENDIF
    5809/    BF00 :                     	
    5810/    BF00 :                     ;
    5811/    BF00 :                     ;	RECEIVE BUFFER
    5812/    BF00 :                     RBFCNT	ds	1
    5813/    BF01 :                     RBFRDP	ds	1
    5814/    BF02 :                     RBFWTP	ds	1
    5815/    BF03 :                     RECBUF	ds	RBFSIZ
    5816/    BF43 :                     
    5817/    BF43 :                     INBUF:	DS	BUFLEN	; Line input buffer
    5818/    BF63 :                     
    5819/    BF63 :                     DSADDR:	DS	2	; Dump start address
    5820/    BF65 :                     DEADDR:	DS	2	; Dump end address
    5821/    BF67 :                     DSTATE:	DS	1	; Dump state
    5822/    BF68 :                     GADDR:	DS	2	; Go address
    5823/    BF6A :                     SADDR:	DS	2	; Set address
    5824/    BF6C :                     HEXMOD:	DS	1	; HEX file mode
    5825/    BF6D :                     RECTYP:	DS	1	; Record type
    5826/    BF6E :                     SIZE:	DS	1	; I/O Size 00H,'W','S'
    5827/    BF6F :                     
    5828/    BF6F :                     REG_B:	
    5829/    BF6F :                     REGAF:	DS	2
    5830/    BF71 :                     REGBC:	DS	2
    5831/    BF73 :                     REGDE:	DS	2
    5832/    BF75 :                     REGHL:	DS	2
    5833/    BF77 :                     REGAFX:	DS	2		; Register AF'
    5834/    BF79 :                     REGBCX:	DS	2
    5835/    BF7B :                     REGDEX:	DS	2
    5836/    BF7D :                     REGHLX:	DS	2		; Register HL'
    5837/    BF7F :                     REGIX:	DS	2
    5838/    BF81 :                     REGIY:	DS	2
    5839/    BF83 :                     REGSP:	DS	2
    5840/    BF85 :                     REGPC:	DS	2
    5841/    BF87 :                     REGI:	DS	1
    5842/    BF88 :                     REGR:	DS	1
    5843/    BF89 :                     REG_E:
    5844/    BF89 :                     
    5845/    BF89 :                     ; DIV 16 /16 buffer
    5846/    BF89 :                     DIV16_NA:	ds	2
    5847/    BF8B :                     DIV16_NB:	ds	2
    5848/    BF8D :                     DIV16_NC:	DS	2
    5849/    BF8F :                     DIV16_ND:	DS	2
    5850/    BF91 :                     
    5851/    BF91 :                     ; go command temp start address
    5852/    BF91 :                     goTmp:		ds	2
    5853/    BF93 :                     
    5854/    BF93 :                     ; trace mode switch
    5855/    BF93 :                     TP_mode:	ds	1	; N: display on, F: display off
    5856/    BF94 :                     TM_mode:	ds	1	; 'S':skip call, 'I':trace CALL IN
    5857/    BF95 :                     TC_cnt:		ds	2	; numbers of step
    5858/    BF97 :                     tmpT:		ds	2	; save temp buffer
    5859/    BF99 :                     fever_t:	ds	1	; flag trace forever
    5860/    BF9A :                     
    5861/    BF9A :                     ; break, trace point work area
    5862/    BF9A : =0BF9AH              dbg_wtop	equ	$
    5863/    BF9A :                     tpt1_f:		ds	1
    5864/    BF9B :                     tpt1_op:	ds	1	; save trace point1 opcode
    5865/    BF9C :                     tpt1_adr:	ds	2
    5866/    BF9E :                     tpt2_f:		ds	1
    5867/    BF9F :                     tpt2_op:	ds	1	; save trace point2 opcode (for branch)
    5868/    BFA0 :                     tpt2_adr:	ds	2
    5869/    BFA2 :                     
    5870/    BFA2 :                     ; break point work area
    5871/    BFA2 :                     bpt1_f:		ds	1
    5872/    BFA3 :                     bpt1_op:	ds	1
    5873/    BFA4 :                     bpt1_adr:	ds	2
    5874/    BFA6 :                     bpt2_f:		ds	1
    5875/    BFA7 :                     bpt2_op:	ds	1
    5876/    BFA8 :                     bpt2_adr:	ds	2
    5877/    BFAA :                     
    5878/    BFAA :                     tmpb_f:		ds	1
    5879/    BFAB :                     tmpb_op:	ds	1
    5880/    BFAC :                     tmpb_adr:	ds	2
    5881/    BFAE : =0BFAEH              dbg_wend	equ	$
    5882/    BFAE :                     
    5883/    BFAE :                     F_bit:		ds	F_bitSize+1
    5884/    BFB7 :                     
    5885/    BFB7 :                     ;::::::::::::::::::::::::::
    5886/    BFB7 :                     ; DISASEM work area
    5887/    BFB7 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;
    5888/    BFB7 :                     dasm_ed:	ds	2
    5889/    BFB9 :                     dasm_stpf:	ds	1
    5890/    BFBA :                     dasm_adr:	ds	2
    5891/    BFBC :                     reg_xy:		ds	2	; RNIX or RNIY
    5892/    BFBE :                     xy_srtp		ds	2	; strings pointer
    5893/    BFC0 :                     
    5894/    BFC0 :                     mc_Size:	ds	1
    5895/    BFC1 :                     
    5896/    BFC1 :                     ;  DidAsm string buffer
    5897/    BFC1 :                     ; total 42 bytes
    5898/    BFC1 :                     dasm_bs:
    5899/    BFC1 :                     adr_mc_buf:	ds	19
    5900/    BFD4 :                     dasm_OpcStr:	ds	8
    5901/    BFDC :                     dasm_OprStr:	ds	15
    5902/    BFEB :                     dasm_be:
    5903/    BFEB :                     
    5904/    BFEB :                     	END
 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB02.asm - Page 2 - 10/16/2022 23:3:55


  Symbol Table (* = unused):
  --------------------------

 ACS_KN2K :                    0B4D C |  ADCSTR :                      11CF C |
 ADDIXRP_TBL :                 1360 C |  ADDIYRP_TBL :                 1368 C |
 ADDSTR :                      11CB C |  ADD_OPSTR :                   1085 C |
 ADD_RP_E :                    1130 C |  ADD_RP_S :                    112C C |
 ADR_MC_BUF :                 0BFC1 C |  ANDSTR :                      11DB C |
 APENDTBL :                     1D9 C |  API00 :                       190B C |
 API01 :                       190E C |  API06 :                       1950 C |
 APITBL :                      18E1 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 A_COLON_SP :                  10D8 C |  A_CRLF :                      10A3 C |
 BACKDOOR :                       0 - |  BACKTOMON :                   1A15 C |
 BASIC_CST :                   2000 - |  BASIC_TOP :                   2000 - |
 BASIC_WST :                   2003 - |  BC_PLUS_DE :                   277 C |
 BITSTR :                      124E C |  BPT1_ADR :                   0BFA4 C |
 BPT1_F :                     0BFA2 C |  BPT1_OP :                    0BFA3 C |
 BPT2_ADR :                   0BFA8 C |  BPT2_F :                     0BFA6 C |
 BPT2_OP :                    0BFA7 C |  BP_CHK1 :                     19B3 C |
 BP_CHK_END :                  19E0 C |  BP_CLR :                       2F6 C |
 BP_CLR1 :                      30C C |  BP_LOT :                       31D C |
 BP_MSG1 :                      333 C |  BP_MSG2 :                      337 C |
 BRK_CMD :                      29F C |  BS :                             8 - |
 BUFLEN :                        20 - |  B_ACLR :                       311 C |
 B_LIST :                       27F C |  B_LIST1 :                      28D C |
 B_MSG_OUT :                    33A C |  CALC_DIS_STEP :                860 C |
 CALLSTR :                     11BA C | *CASESENSITIVE :                  0 - |
 CC0 :                         12CA C |  CC1 :                         12CD C |
 CC2 :                         12CF C |  CC3 :                         12D2 C |
 CC4 :                         12D4 C |  CC5 :                         12D7 C |
 CC6 :                         12DA C |  CC7 :                         12DC C |
 CCFSTR :                      1223 C |  CC_NNNN :                     0C2E C |
 CC_OPR :                      12EE C |  CHKERR :                       2F4 C |
 CHK_0CBH :                    0C4B C |  CHK_0DD3OP :                  0D98 C |
 CHK_0DD4OP :                  0E17 C |  CHK_0DDH :                    0D11 C |
 CHK_0DDH_1 :                  0D24 C |  CHK_0EDH :                    0EB7 C |
 CHK_0FDH :                    0FB4 C |  CHK_1MC_BNH :                 0AAA C |
 CHK_2MC :                     0AF7 C |  CHK_3MC :                     0BA7 C |
 CHK_ADC :                      970 C |  CHK_ADD :                      964 C |
 CHK_ADD_RP :                  0A29 C |  CHK_AND :                      99A C |
 CHK_BP :                      19A4 C |  CHK_CALCC :                   0C3C C |
 CHK_CALLN4 :                  0C15 C |  CHK_CP :                       9BE C |
 CHK_DD_CB :                   0E63 C |  CHK_DEC :                      9E3 C |
 CHK_DEC_RP :                  0A10 C |  CHK_DI1 :                      808 C |
 CHK_DJNZ :                    0B72 C |  CHK_EX :                      0A79 C |
 CHK_FEVRE :                    448 C |  CHK_INC :                      9CB C |
 CHK_INC_RP :                   9F7 C |  CHK_JPCC :                    0C21 C |
 CHK_JPN4 :                    0C09 C |  CHK_JRCC :                    0B8B C |
 CHK_JRNN :                    0B7B C |  CHK_LD :                       8F5 C |
 CHK_LD1 :                      933 C |  CHK_LD16 :                    0BC8 C |
 CHK_LOGOP2 :                  0B1E C |  CHK_NTRACE :                  19F8 C |
 CHK_OR :                       9B2 C |  CHK_POP_RP :                  0A47 C |
 CHK_PUSH_RP :                 0A60 C |  CHK_RET :                     0ABD C |
 CHK_RST :                     0AD6 C |  CHK_SBC :                      98B C |
 CHK_STPDI :                    827 C |  CHK_SUB :                      97F C |
 CHK_XOR :                      9A6 C |  CLCC_TBLE :                    618 C |
 CLCC_TBLS :                    610 C |  CLR_CRT :                     1818 C |
 CMD_HLP :                     1B45 C |  COMMAND_HLP :                  183 C |
*COMPMODE :                       0 - |  CONIN :                       1F84 C |
 CONOUT :                      1FB0 C |  CONST :                       1FAA C |
*CONSTPI :        3.141592653589793 - |  CPDRSTR :                     12A0 C |
 CPDSTR :                      127A C |  CPIRSTR :                     128C C |
 CPISTR :                      1269 C |  CPLSTR :                      121B C |
 CPSTR :                       11E6 C |  CPSTR_CRLF :                  10B1 C |
 CR :                            0D - |  CRLF :                        180E C |
 CSTART :                       0BE C |  D16_END :                     1ADE C |
 D16_MINUS :                   1AD6 C |  D16_MINUS_AFTER :             1ADA C |
 D16_MINUS_BEFORE :            1AD5 C |  D16_PLUS :                    1ACA C |
 D16_PLUS_AFTER :              1ACE C |  DAASTR :                      1217 C |
 DASM_ADR :                   0BFBA C |  DASM_BE :                    0BFEB C |
 DASM_BS :                    0BFC1 C |  DASM_ED :                    0BFB7 C |
 DASM_OPCSTR :                0BFD4 C |  DASM_OPRSTR :                0BFDC C |
 DASM_STPF :                  0BFB9 C | *DATE :                "10/16/2022" - |
 DBG_WEND :                   0BFAE - |  DBG_WINI :                     0FB C |
 DBG_WTOP :                   0BF9A - |  DDLOGTBL :                    1370 C |
 DD_21 :                       0E3D C |  DD_22 :                       0E4A C |
 DD_2A :                       0E53 C |  DD_2A1 :                      0E57 C |
 DD_2NDTBL :                    6D3 C |  DD_2NDTBL1 :                   6D7 C |
 DD_2NDTBL2 :                   6DB C |  DD_2NDTBL_E :                  6DD C |
 DD_2OPT :                     1358 C |  DD_BIT :                      0EA7 C |
 DD_BIT_OPTBL :                1154 C |  DD_BIT_OPTBLE :               116C C |
 DD_BSR :                      0E9E C |  DD_CB_NN_XX :                 0E83 C |
 DD_LD :                       0DD7 C |  DD_LD1 :                      0DEF C |
 DD_LDTBL :                    137E C |  DD_LD_TBL :                   1138 C |
 DD_LD_TBLE :                  1146 C |  DD_LOG_TBL :                  1146 C |
 DD_LOG_TBLE :                 114D C |  DD_MIX :                      0E02 C |
 DD_MIX1 :                     0E0D C |  DD_MIX2 :                     0E12 C |
 DD_MIX3 :                     0E05 C |  DD_MIX4 :                     0DFB C |
 DD_RES :                      0EAF C |  DD_RT_STR :                   13B6 C |
 DD_RT_TBLE :                  1154 C |  DD_RT_TBLES :                 114D C |
 DEADDR :                     0BF65 C |  DECSTR :                      11ED C |
 DEC_OPCDTBLE :                1124 C |  DEC_OPCDTBLS :                111C C |
 DEC_RP_E :                    112C C |  DEC_RP_S :                    1128 C |
 DEC_STR :                     1A87 C |  DEL :                           7F - |
 DIP_TM :                       38B C |  DISASM_GO :                    835 C |
 DISASSEMBLE :                  7E5 C |  DISREGTBL :                   12DE C |
 DISTR :                       1227 C |  DIS_ANALYSIS :                 8C4 C |
 DIS_CALL :                    1A52 C |  DIS_GO1 :                      840 C |
*DIV16 :                       1AE1 C |  DIV16_8 :                     1ABD C |
 DIV16_NA :                   0BF89 C |  DIV16_NB :                   0BF8B C |
 DIV16_NC :                   0BF8D C |  DIV16_ND :                   0BF8F C |
 DIV16_X0 :                    1B1E C |  DIV16_X1 :                    1B29 C |
 DIV16_X2 :                    1AF7 C |  DI_NXT :                       7EE C |
 DJNZSTR :                     11B5 C |  DMKST1 :                      1099 C |
 DMKST2 :                      109B C |  DMKSTR0 :                     108F C |
 DONOT_TRACE :                 1427 C |  DP0 :                          6F2 C |
 DP00 :                         702 C |  DP1 :                          717 C |
 DPB :                          799 C |  DPB0 :                         7B0 C |
 DPB1 :                         7BF C |  DPB2 :                         7C4 C |
 DPL :                          75F C |  DPL0 :                         770 C |
 DPL1 :                         780 C |  DPL2 :                         78F C |
 DPL3 :                         794 C |  DPM :                          72D C |
 DPM0 :                         738 C |  DPM1 :                         756 C |
 DSADDR :                     0BF63 C |  DSEP0 :                       1D52 C |
 DSEP1 :                       1D55 C |  DSTATE :                     0BF67 C |
 DUMP :                         6DD C |  ED_4MC :                      0F95 C |
 ED_ADC :                      0F43 C |  ED_IM :                       0F74 C |
 ED_LD_AI :                    0F5D C |  ED_LD_AR :                    0F54 C |
 ED_LD_IA :                    0F6F C |  ED_LD_RA :                    0F66 C |
 ED_LD_RA1 :                   0F69 C |  ED_NOOPR :                    138C C |
 ED_NO_OPR :                   0F87 C |  ED_OP_TBL :                   116C C |
 ED_OP_TBLE :                  11A4 C |  ED_OUT :                      0F12 C |
 ED_OUT1 :                     0F26 C |  ED_RP_STR :                   134C C |
 ED_SBC :                      0F2D C |  ED_SBC1 :                     0F3C C |
 EISTR :                       122A C |  END_DEC :                     1AB6 C |
 END_INS_TC :                   580 C |  ENTRY :                         40 - |
 ERR :                          17B C |  ERRMSG :                      1D4A C |
 ERR_TRACE_SEQ :                583 C |  ER_OPMSG :                    12BD C |
 ESC_CRT_CLR :                 1821 C |  EXP_MSB :                      5A2 C |
 EXSTR :                       11FA C |  EXXSTR :                      11FD C |
 EX_AF_AF :                    0A94 C |  EX_SP_HL :                    0AA2 C |
*E_CSTART :                       0 C | *FALSE :                          0 - |
 FEVER_T :                    0BF99 C |  FLG_LOOP :                    1792 C |
 FLG_NXT :                     17A1 C |  FLG_OFF :                     179D C |
*FULLPMMU :                       1 - |  F_BIT :                      0BFAE C |
 F_BITSIZE :                      8 - |  F_BIT_OFF :                   17BD C |
 F_BIT_ON :                    17B5 C |  G0 :                          1407 C |
 GADDR :                      0BF68 C |  GETLIN :                      1825 C |
 GET_BI :                       251 C |  GET_DI1 :                      802 C |
 GET_DISASM_ST :                86E C |  GET_N4 :                      0BF0 C |
 GET_N4CRLF :                  0BC2 C |  GET_NNNN :                    0FF3 C |
 GET_NUM :                      233 C |  GET_NUM0 :                     236 C |
 GET_RSTG_OFF :                1007 C |  GET_R_NUM :                    8EC C |
 GET_STRBUFPOINT :             100A C |  GL0 :                         182C C |
 GL00 :                        1828 C |  GL1 :                         185C C |
 GLB :                         1860 C |  GLE :                         1877 C |
 GO :                          13C4 C |  GO1 :                         1401 C |
 GOSTMP :                      13D8 C |  GOTMP :                      0BF91 C |
 G_STPADR :                    13E2 C |  H2SA_1 :                      105F C |
 H2S_N1 :                      1075 C |  H2S_N2 :                      1079 C |
 H4SA_1 :                      104E C |  H4SA_2 :                      1051 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HEX2STR :                     106C C |
 HEX2STR_ASM :                 1056 C |  HEX4STR :                     1064 C |
 HEX4STR_ASM :                 1045 C |  HEXIN :                       17EA C |
 HEXMOD :                     0BF6C C |  HEXOUT1 :                     17DC C |
 HEXOUT2 :                     17D3 C |  HEXOUT4 :                     17CE C |
 HI0 :                         17F2 C |  HI1 :                         1809 C |
 HIR :                         180C C |  HLTSTR :                      11C6 C |
 HL_CRLF :                     10AE C |  IB1 :                          5B3 C |
 IB2 :                          5B2 C |  IB3 :                          5B1 C |
 ICKA1 :                        5EC C |  ICKA_END :                     5F7 C |
 IGNORE :                        50 C |  IHEMSG :                      1D30 C |
 IHEXER :                      1D59 C |  IKK_1 :                       10F1 C |
 IMSTR :                       125A C |  INADR_CHK_AND_WRT :            5D1 C |
 INBUF :                      0BF43 C |  INCSTR :                      11E9 C |
 INC_DEC :                      9DD C |  INC_DEC_ADDRP :               1306 C |
 INC_OPCDTBLE :                111C C |  INC_OPCDTBLS :                1114 C |
 INC_RP_E :                    1128 C |  INC_RP_S :                    1124 C |
 INDRSTR :                     12A5 C |  INDSTR :                      127E C |
 INIRSTR :                     1291 C |  INISTR :                      126D C |
 INS2 :                         620 C |  INSBRK_1OP :                   5A4 C |
 INSBRK_2OP :                   5A9 C |  INSBRK_3OP :                   5AE C |
 INSBRK_BRP :                   5B8 C |  INSBRK_SP :                    5C4 C |
 INSPOSTSTR :                  10B4 C |  INSTC1 :                       4D4 C |
*INSTC2 :                       462 C |  INSTR :                       1231 C |
*INSUPMODE :                      0 - |  INS_EX_OPC :                  0A8E C |
 INS_HLKK :                    0BFA C |  INS_HL_OPR :                  0A8B C |
 INS_IXRP :                    0D83 C |  INS_JPIX :                    0D59 C |
*INS_JPIX1 :                   0D5D C |  INS_KAKKOL :                  10EB C |
 INS_KAKKOR :                  10EF C |  INS_KKA :                     0BE4 C |
 INS_KKHL :                    0BDE C |  INS_KMR :                     1100 C |
 INS_KN2K :                    0B56 C |  INS_KN4KCS :                  101F C |
 INS_KSPKIX :                  0D6B C |  INS_MISR :                    10FC C |
 INS_N2CRLF :                  0B43 C |  INS_PLSR :                    10F8 C |
 INS_RSTG :                    0CF6 C |  INS_SPCR :                    10F4 C |
 INS_SPIX :                    0D7A C |  INTEXT :                        76 C |
 INTRCV :                        53 C |  IR0 :                          0D8 C |
 IR00 :                         0EF C |  ITABLE :                        40 C |
 IX_CRLF :                     10A8 C |  JPCC_TBLE :                    610 C |
 JPCC_TBLS :                    608 C |  JPHL :                         51A C |
 JPSTR :                       11AF C |  JRCC_OPR1 :                   12FE C |
 JRCC_TBLE :                    608 C |  JRCC_TBLS :                    603 C |
 JRCC_TBLS1 :                   604 C |  JRSTR :                       11B2 C |
 JR_N4CRLF :                   0B82 C |  KCKSTR :                      12C1 C |
 KIXYPNK_CRLF :                0FCE C |  KIXYPNK_CS :                  0FC5 C |
 KN2K :                        0B62 C |  KN4HK :                       0BEA C |
 KN4KCRLF :                    0C00 C |  KRNHL :                       12C5 C |
 LANCH1 :                       1F9 C |  LANCH10 :                      231 C |
 LANCH11 :                      231 C |  LANCH12 :                      231 C |
 LANCH13 :                      231 C |  LANCH14 :                      231 C |
 LANCH15 :                      231 C |  LANCH16 :                      231 C |
 LANCH2 :                       215 C |  LANCH3 :                       231 C |
 LANCH4 :                       231 C |  LANCH5 :                       231 C |
 LANCH6 :                       231 C |  LANCH7 :                       231 C |
 LANCH8 :                       231 C |  LANCH9 :                       231 C |
 LAUNCHER :                     18B C |  LD1OP :                        946 C |
 LDDRSTR :                     129B C |  LDDSTR :                      1276 C |
 LDIRSTR :                     1287 C |  LDISTR :                      1265 C |
 LDSTR :                       11C3 C |  LD_A_KBCK :                    912 C |
 LD_A_KDEK :                    920 C |  LD_A_KXXK :                    915 C |
 LD_KBCK_A :                    925 C |  LD_KDEK_A :                    92E C |
 LD_KXXK_A :                    928 C |  LD_R_NN_E :                    6C1 C |
 LD_R_NN_S :                    6B9 C |  LF :                            0A - |
 LH0 :                         151E C | *LH1 :                         1525 C |
 LH2 :                         1529 C |  LH3 :                         1531 C |
 LHI0 :                        1536 C |  LHI1 :                        1559 C |
 LHI2 :                        156B C |  LHI20 :                       156A C |
 LHI3 :                        156D C |  LHIE :                        157D C |
 LHS0 :                        1586 C |  LHS1 :                        15A3 C |
 LHS2 :                        15B5 C |  LHS20 :                       15B6 C |
 LHS3 :                        15B8 C |  LHSE :                        15D2 C |
 LHSR :                        15D8 C | *LISTON :                         1 - |
 LOADH :                       1501 C |  LOGOP2STR :                   1330 C |
 LOGOP3STR :                   1344 C |  LOG_OP_E :                     6CB C |
 LOG_OP_S :                     6C1 C |  LOOP_DEC :                    1A9D C |
 LOOP_M8 :                     1B38 C |  LST_END :                      1D6 C |
 LST_PRG :                      1BB C |  LST_PRG1 :                     1BE C |
 L_B2 :                         32D C | *MACEXP :                         7 - |
 MAS_1 :                        89F C |  MAS_2 :                        8B0 C |
 MAS_3 :                        8BC C |  MC_SIZE :                    0BFC0 C |
 MEET_DD :                      64B C |  MEET_ED :                      66D C |
 MEET_OP1 :                     689 C |  MEET_OP2 :                     694 C |
 MEET_OP3 :                     69F C |  MEET_OP4 :                     6AA C |
 MKOPCSTR :                    1088 C |  MKREL_STR :                   1037 C |
 MK_2NDOPR :                    952 C |  MK_2NDOPR1 :                   95C C |
 MK_ADR_STR :                   889 C |  MK_BITR :                     0CD9 C |
 MK_BITR_STR :                 0CF1 C |  MK_KIXPNK :                   0DCD C |
 MK_KIXYPNK :                  0FD4 C | *MK_KIYPNK :                   0DD1 C |
 MK_KN4K :                     102E C |  MK_KRK :                      10C2 C |
 MK_KRKCS :                    10CA C |  MK_KRK_1 :                    10BF C |
 MK_N2CRLF :                   1013 C |  MK_N4CRLF :                   1019 C |
 MK_RCS :                      10DB C |  MK_RESR :                     0CE2 C |
 MK_RLCR :                     0C9A C |  MK_RLR :                      0CAC C |
 MK_RRCR :                     0CA3 C |  MK_RRR :                      0CB5 C |
 MK_SLAR :                     0CBE C |  MK_SRAR :                     0CC7 C |
 MK_SRLR :                     0CD0 C |  MK_STR :                      0FFE C |
*MOMCPU :                        80 - | *MOMCPUNAME :                 "Z80" - |
 MSTACK_SIZE :                   80 - |  MUL_10 :                       260 C |
 MUL_8 :                       1B33 C |  NEGSTR :                      1256 C |
*NESTMAX :                      100 - |  NEXT_BC1 :                     47F C |
 NEXT_BC10 :                    559 C |  NEXT_BC11 :                    566 C |
 NEXT_BC111 :                   57B C |  NEXT_BC2 :                     4A2 C |
 NEXT_BC21 :                    4B0 C |  NEXT_BC22 :                    4CB C |
*NEXT_BC221 :                   4C9 C |  NEXT_BC222 :                   4C3 C |
 NEXT_BC3 :                     4E3 C |  NEXT_BC4 :                     4F8 C |
 NEXT_BC5 :                     50F C |  NEXT_BC6 :                     506 C |
 NEXT_BC7 :                     523 C |  NEXT_BC8 :                     532 C |
 NEXT_BC9 :                     545 C |  NOPSTR :                      1201 C |
 NO_OPERATE :                  18E0 C |  NO_RAM_AREA :                  5F9 C |
 NO_RST38_MSG :                19E7 C |  NUMPLUS :                     0FEE C |
 OPNMSG :                      1CF0 C |  OP_ERR :                      0CEB C |
 ORSTR :                       11E3 C |  OTDRSTR :                     12AA C |
 OTH_1OP_E :                   1114 C |  OTH_1OP_S :                   1107 C |
 OTH_1OP_TBL :                 1316 C |  OTIRSTR :                     1296 C |
 OUTDSTR :                     1282 C |  OUTISTR :                     1271 C |
 OUTSTR :                      122D C | *PADDING :                        1 - |
 POPSTR :                      11F1 C |  POP_PUSHRP :                  130E C |
 POP_RP_E :                    1134 C |  POP_RP_S :                    1130 C |
 PROMPT :                      1D2D C |  PSIOAC :                         1 - |
 PSIOAD :                         0 - |  PSIOBC :                         3 - |
*PSIOBD :                         2 - |  PUSHSTR :                     11F5 C |
 PUSH_RP_E :                   1138 C |  PUSH_RP_S :                   1134 C |
 RAMSIZ :                      4000 - |  RAM_B :                       8000 - |
 RAM_E :                      0BFFF - |  RBFCNT :                     0BF00 C |
 RBFRDP :                     0BF01 C |  RBFSIZ :                        40 - |
 RBFWTP :                     0BF02 C |  RD0 :                         173C C |
 RD1 :                         1774 C |  RD10 :                        1762 C |
 RD101 :                       1758 C |  RD20 :                        1781 C |
 RDHEX :                       188F C |  RDSA :                        1DC9 C |
 RDSAX :                       1DEE C |  RDSBC :                       1DCD C |
 RDSBCX :                      1DF4 C |  RDSDE :                       1DD3 C |
 RDSDEX :                      1DFA C |  RDSF :                        1DDF C |
 RDSFX :                       1E06 C |  RDSFX_H :                       1E - |
 RDSFX_L :                        6 - |  RDSF_H :                        1D - |
 RDSF_L :                       0DF - |  RDSHL :                       1DD9 C |
 RDSHLX :                      1E00 C |  RDSI :                        1E15 C |
 RDSIX :                       1DE4 C |  RDSIY :                       1DE9 C |
 RDSPC :                       1E10 C |  RDSR :                        1E19 C |
 RDSSP :                       1E0B C |  RDTAB :                       1D74 C |
 RDUMP :                       1739 C |  RECBUF :                     0BF03 C |
 RECTYP :                     0BF6D C |  REG :                         16B3 C |
 REGAF :                      0BF6F C |  REGAFX :                     0BF77 C |
 REGBC :                      0BF71 C |  REGBCX :                     0BF79 C |
 REGDE :                      0BF73 C |  REGDEX :                     0BF7B C |
 REGHL :                      0BF75 C |  REGHLX :                     0BF7D C |
 REGI :                       0BF87 C |  REGIX :                      0BF7F C |
 REGIY :                      0BF81 C |  REGPC :                      0BF85 C |
 REGR :                       0BF88 C |  REGSP :                      0BF83 C |
 REG_B :                      0BF6F C |  REG_E :                      0BF89 C |
 REG_XY :                     0BFBC C | *RELAXED :                        0 - |
 REL_ADR_C :                    597 C |  REPEAT_TRACE :                1A36 C |
 RESSTR :                      1252 C |  RETCC_TBLE :                   603 C |
 RETCC_TBLS :                   5FB C |  RETISTR :                     12AF C |
 RETNSTR :                     12B4 C |  RETSTR :                      11AB C |
 RG0 :                         16C0 C |  RG1 :                         16C4 C |
 RG2 :                         16D4 C |  RG3 :                         16E3 C |
 RG4 :                         1708 C |  RG5 :                         1714 C |
 RG6 :                         1730 C |  RG7 :                         1733 C |
 RGE :                         1736 C |  RGR :                         1733 C |
 RH0 :                         1894 C |  RH1 :                         18A7 C |
 RHE :                         18C5 C |  RHE1 :                        18CF C |
 RLASTR :                      120F C |  RLCASTR :                     1205 C |
 RLCSTR :                      1234 C |  RLDSTR :                      1261 C |
 RLSTR :                       123C C |  RNA :                         1F37 C |
 RNAF :                        11A4 C |  RNAFX :                       11A7 C |
 RNAX :                        1F50 C |  RNB :                         1F3C C |
 RNBC :                        1F39 C |  RNBCX :                       1F53 C |
 RNBX :                        1F57 C |  RNC :                         1F3E C |
 RNCX :                        1F5A C |  RND :                         1F43 C |
 RNDE :                        1F40 C |  RNDEX :                       1F5D C |
 RNDX :                        1F61 C |  RNE :                         1F45 C |
 RNEX :                        1F64 C |  RNF :                         1F4E C |
 RNFX :                        1F71 C |  RNH :                         1F4A C |
 RNHL :                        1F47 C |  RNHLX :                       1F67 C |
 RNHX :                        1F6B C |  RNI :                         1F80 C |
 RNIX :                        1F74 C |  RNIY :                        1F77 C |
 RNL :                         1F4C C |  RNLX :                        1F6E C |
 RNPC :                        1F7D C |  RNR :                         1F82 C |
 RNSP :                        1F7A C |  RNTAB :                       1E1D C |
 RNTABA :                      1E67 C |  RNTABB :                      1E75 C |
 RNTABBC :                     1E89 C |  RNTABC :                      1E97 C |
 RNTABD :                      1EA5 C |  RNTABDE :                     1EB9 C |
 RNTABE :                      1EC7 C |  RNTABF :                      1ED5 C |
 RNTABH :                      1EE3 C |  RNTABHL :                     1EF7 C |
 RNTABI :                      1F13 C |  RNTABL :                      1F05 C |
 RNTABP :                      1F27 C |  RNTABS :                      1F2F C |
 ROM_B :                          0 - |  RRASTR :                      1213 C |
 RRCASTR :                     120A C |  RRCSTR :                      1238 C |
 RRDSTR :                      125D C |  RRSTR :                       123F C |
 RST30H_IN :                   18D1 C |  RST38H_IN :                   1952 C |
 RST38MSG :                    1A6B C |  RSTR_BPT :                    1A4B C |
 RSTR_TPT :                    1A3F C |  RSTSTR :                      11BF C |
 RST_TBLE :                     620 C |  RST_TBLS :                     618 C |
 RXWAIT :                      1F87 C |  SADDR :                      0BF6A C |
 SAVEH :                       15DB C |  SBCSTR :                      11D7 C |
 SCFSTR :                      121F C |  SETBPADR :                     2DD C |
 SETM :                        148B C |  SETSTR :                      12B9 C |
 SET_BITNO :                   0D03 C |  SET_BP :                      147F C |
 SET_BP1 :                      2BB C |  SET_TM :                       3A2 C |
 SH0 :                         15E5 C |  SH1 :                         15E9 C |
 SH2 :                         1611 C |  SH3 :                         1619 C |
 SH4 :                         1630 C |  SHE :                         160E C |
 SHEMSG :                      1D3D C |  SHL0 :                        1644 C |
 SHL00 :                       1639 C |  SHLI0 :                       166D C |
 SHLS :                        1681 C |  SHLS0 :                       16A0 C |
 SINIT :                         8B C |  SIOACD :                        7D C |
 SIOACL :                         9 - |  SIOBCD :                        86 C |
 SIOBCL :                         5 - | *SIZE :                       0BF6E C |
 SKIPSP :                      187F C |  SKP_RMSG :                    1A09 C |
 SKP_TBP :                     1442 C |  SLASTR :                      1242 C |
 SM0 :                         14A5 C |  SM1 :                         14A6 C |
 SM2 :                         14CC C |  SM3 :                         14D7 C |
 SM4 :                         14E2 C |  SRASTR :                      1246 C |
 SRECER :                      1D67 C |  SRLSTR :                      124A C |
 STACK :                      0BE80 - |  STACKM :                     0BF00 - |
*START :                          0 C |  STPBRK_MSG :                  1A75 C |
 STP_CHK :                      42B C |  STROUT :                      17C5 C |
 ST_COPY :                     10E3 C |  ST_MUL8 :                     1B3C C |
 SUBSTR :                      11D3 C |  SV_NNKR :                     0FE8 C |
 TADR_CHK :                     41A C |  TC_CNT :                     0BF95 C |
 TERR_MSG :                     58D C |  THREE_OPTBL :                  6CB C |
 THREE_OPTBLE :                 6CF C |  THREE_OPTBL_E :                6D3 C |
*TIME :                   "23:3:55" - |  TMPB_ADR :                   0BFAC C |
 TMPB_F :                     0BFAA C |  TMPB_OP :                    0BFAB C |
 TMPT :                       0BF97 C |  TM_MODE :                    0BF94 C |
 TM_MSG_0 :                     3B3 C |  TM_MSG_I :                     3C2 C |
 TM_MSG_S :                     3C8 C |  TPT1_ADR :                   0BF9C C |
 TPT1_F :                     0BF9A C |  TPT1_OP :                    0BF9B C |
 TPT2_ADR :                   0BFA0 C |  TPT2_F :                     0BF9E C |
 TPT2_OP :                    0BF9F C |  TP_CHK1 :                     19C2 C |
 TP_CHK2 :                     19D1 C |  TP_CMD :                       3D0 C |
 TP_MD_ON :                     3F4 C |  TP_MODE :                    0BF93 C |
 TP_MSG_0 :                     405 C |  TP_MSG_OFF :                   414 C |
 TP_MSG_ON :                    40F C |  TP_N1 :                        3DC C |
 TP_N2 :                        3E5 C |  TRACE_CMD :                    354 C |
 TRACE_MSG :                   1A7E C | *TRUE :                           1 - |
 TWO_OPTBL :                    6B9 C |  TWO_OPTBL_E :                  6CB C |
 TXWAIT :                      1FB1 C |  T_NO_KY :                     1A21 C |
 T_OP1 :                        443 C |  T_OP11 :                       43D C |
 T_OP_CHK :                     45E C |  UPPER :                       1886 C |
 UP_BI :                        25E C | *VERSION :                     142F - |
 WORK_B :                     0BF00 - |  WORK_SIZE :                    100 - |
 WSTART :                       13B C |  WS_CHK1 :                     191D C |
 WS_CHK2 :                     1929 C |  WS_CHK3 :                     1935 C |
 WS_CHK4 :                     1941 C |  WS_CHK5 :                     194D C |
 XORSTR :                      11DF C |  XY_SRTP :                    0BFBE C |

    788 symbols
     31 unused symbols

 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB02.asm - Page 3 - 10/16/2022 23:3:55


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

   5905 lines source file
      2 passes
      0 errors
      0 warnings
