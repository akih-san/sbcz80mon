 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB04.asm - Page 1 - 1/5/2023 16:39:1


       1/       0 :                     	page	0
       2/       0 :                     	cpu	z80
       3/       0 :                     ;;; 
       4/       0 :                     ;;; Universal Monitor for Zilog Z80
       5/       0 :                     ;;;   Copyright (C) 2019,2020,2021 Haruo Asano
       6/       0 :                     ;;;
       7/       0 :                     
       8/       0 :                     ;;; 2022.10.10 It was added functions by A.honda
       9/       0 :                     ;;; Rev.B02
      10/       0 :                     
      11/       0 :                     ;;; 2022.11.30 It was added functions by A.honda
      12/       0 :                     ;;; Rev.B03
      13/       0 :                     
      14/       0 :                     ;;; 2022.12.28 Support XON/XOFF Flow control by A.honda
      15/       0 :                     ;;; Rev.B04
      16/       0 :                     
      17/       0 :                     
      18/       0 :                     ;;; Constants
      19/       0 : =0DH                 CR	EQU	0DH
      20/       0 : =0AH                 LF	EQU	0AH
      21/       0 : =8H                  BS	EQU	08H
      22/       0 : =7FH                 DEL	EQU	7FH
      23/       0 : =1BH                 ESC	equ	1BH
      24/       0 : =28H                 BUFLEN	equ	40
      25/       0 : =7H                  NUMLEN	equ	7
      26/       0 : =8H                  F_bitSize	equ	8
      27/       0 : =4H                  NO_UPPER	equ	00000100b
      28/       0 : =2H                  NO_LF		equ	00000010b
      29/       0 : =1H                  NO_CR		equ	00000001b
      30/       0 :                     
      31/       0 : =0H                  BACKDOOR = 0
      32/       0 :                     
      33/       0 :                     ;;;
      34/       0 :                     ;;; Memory switch
      35/       0 :                     ;;;
      36/       0 :                     
      37/       0 :                     ;	MEMORY ASIGN
      38/       0 : =0H                  ROM_B	equ	0000H	; ROM base address
      39/       0 : =8000H               RAM_B	equ	8000H	; RAM base address
      40/       0 : =4000H               RAMSIZ	EQU	4000H
      41/       0 : =0BFFFH              RAM_E	equ	RAM_B + RAMSIZ - 1 ; RAM END address
      42/       0 :                     
      43/       0 : =40H                 Rx_BFSIZ	EQU	40H	; SIO recieve buffer size
      44/       0 : =40H                 Tx_BFSIZ	equ	40H	; SIO send buffer size
      45/       0 :                     
      46/       0 : =130H                WORK_SIZE	equ	130H		;monitor work area size
      47/       0 : =40H                 MSTACK_SIZE	equ	64		;Monitor stack size : 32 words 
      48/       0 :                     
      49/       0 : =0BED0H              WORK_B	equ	RAM_E -	WORK_SIZE + 1	; work area BF00-BFFF
      50/       0 : =0BED0H              STACKM	equ	WORK_B			; monitor stack
      51/       0 : =0BE90H              STACK	equ	WORK_B - MSTACK_SIZE	; user stack
      52/       0 :                     
      53/       0 :                     ;BASIC_TOP	equ	3000H
      54/       0 : =2F00H               BASIC_TOP	equ	2F00H
      55/       0 : =2F00H               BASIC_CST	equ	2F00H	; basic cold start
      56/       0 : =2F03H               BASIC_WST	equ	2F03H	; basic warm start
      57/       0 :                     
      58/       0 : =4C00H               POTB_TOP	equ	4C00H
      59/       0 : =4C00H               POTB_CST	equ	4C00H	; basic cold start
      60/       0 : =4C03H               POTB_WST	equ	4C03H	; basic warm start
      61/       0 :                     
      62/       0 : =5400H               GAME80_TOP	equ	5400H
      63/       0 : =5400H               GAME80_CST	equ	5400H	; basic cold start
      64/       0 : =5403H               GAME80_WST	equ	5403H	; basic warm start
      65/       0 :                     
      66/       0 : =11H                 XON		equ	11h	; code DCh
      67/       0 : =13H                 XOFF		equ	13h	; code DC3
      68/       0 : =28H                 TXPEND		equ	28h	; SIO clear pending Tx int code
      69/       0 : =4H                  TXEMPTY		equ	04h
      70/       0 :                     
      71/       0 : =40H                 ENTRY	EQU	0040H		; Entry point
      72/       0 :                     ;
      73/       0 :                     ;	SIO REGISTER ADDRESS
      74/       0 : =0H                  PSIOAD	EQU	00H
      75/       0 : =1H                  PSIOAC	EQU	01H
      76/       0 : =2H                  PSIOBD	EQU	02H
      77/       0 : =3H                  PSIOBC	EQU	03H
      78/       0 :                     ;
      79/       0 :                     ;;; 
      80/       0 :                     ;;; ROM area
      81/       0 :                     ;;;
      82/       0 :                     start:
      83/       0 :                     
      84/       0 :                     	ORG	ROM_B	; (RST 00H)
      85/       0 :                     
      86/       0 :                     E_CSTART:
      87/       0 : C3 DA 00            	JP	SINIT
      88/       3 : C3 90 01            	JP	WSTART0
      89/       6 :                     
      90/       6 : 00 00               	db	0008H - $ dup(00H)
      91/       8 :                     ;	ORG	0008H	; (RST 08H)
      92/       8 : =>FALSE              	IF	BACKDOOR
      93/       8 :                     	JP	RST08H
      94/       8 : =>TRUE               	ELSE
      95/       8 : C3 8F 2E            	JP	CONOUT
      96/       B : [92]                 	ENDIF
      97/       B :                     
      98/       B : 00 00 00 00 00      	db	0010H - $ dup(00H)
      99/      10 :                     ;	ORG	0010H	; (RST 10H)
     100/      10 : =>FALSE              	IF	BACKDOOR
     101/      10 :                     	JP	RST10H
     102/      10 : =>TRUE               	ELSE
     103/      10 : C3 40 2E            	JP	CONIN
     104/      13 : [100]                	ENDIF
     105/      13 :                     
     106/      13 : 00 00 00 00 00      	db	0018H - $ dup(00H)	; nop
     107/      18 :                     ;	ORG	0018H	; (RST 18H)
     108/      18 : =>FALSE              	IF	BACKDOOR
     109/      18 :                     	JP	RST18H
     110/      18 : =>TRUE               	ELSE
     111/      18 : C3 8A 2E            	JP	CONST
     112/      1B : [108]                	ENDIF
     113/      1B :                     
     114/      1B : 00 00 00 00 00      	db	0020H - $ dup(00H)	; nop
     115/      20 :                     ;	ORG	0020H	; (RST 20H)
     116/      20 : =>FALSE              	IF	BACKDOOR
     117/      20 :                     	JP	RST20H
     118/      20 : =>TRUE               	ELSE
     119/      20 : C9                  	RET
     120/      21 : [116]                	ENDIF
     121/      21 :                     
     122/      21 : 00 00 00 00 00 00   	db	0028H - $ dup(00H)	; nop
               27 : 00                
     123/      28 :                     ;	ORG	0028H	; (RST 28H)
     124/      28 : =>FALSE              	IF	BACKDOOR
     125/      28 :                     	RET
     126/      28 : =>TRUE               	ELSE
     127/      28 : C9                  	RET
     128/      29 : [124]                	ENDIF
     129/      29 :                     
     130/      29 : 00 00 00 00 00 00   	db	0030H - $ dup(00H)	; nop
               2F : 00                
     131/      30 :                     ;	ORG	0030H
     132/      30 : =>FALSE              	IF	BACKDOOR
     133/      30 :                     	JP	RST30H
     134/      30 : =>TRUE               	ELSE
     135/      30 : C3 5F 27            	JP	RST30H_IN
     136/      33 : [132]                	ENDIF
     137/      33 :                     
     138/      33 : 00 00 00 00 00      	db	0038H - $ dup(00H)	; nop
     139/      38 :                     ;	ORG	0038H
     140/      38 : =>FALSE              	IF	BACKDOOR
     141/      38 :                     	JP	RST38H;
     142/      38 : =>TRUE               	ELSE
     143/      38 : C3 EC 27            	JP	RST38H_IN
     144/      3B : [140]                	ENDIF
     145/      3B :                     
     146/      3B :                     	;;
     147/      3B :                     	;; Entry point
     148/      3B :                     	;;
     149/      3B :                     
     150/      3B : 00 00 00 00 00      	db	ENTRY - $ dup(00H)
     151/      40 :                     	;	ORG	ENTRY
     152/      40 :                     
     153/      40 :                     ;
     154/      40 :                     ;	INTERRUPT TABLE (40H)
     155/      40 :                     ;	ORG (($-1) AND 0FFF0H)+10H
     156/      40 : 00 00               ITABLE:	DW	0
     157/      42 : 00 00               	DW	0
     158/      44 : 00 00               	DW	0
     159/      46 : 00 00               	DW	0
     160/      48 : 53 00               	DW	INTTXD
     161/      4A : 50 00               	DW	IGNORE
     162/      4C : 7A 00               	DW	INTRXD
     163/      4E : 50 00               	DW	IGNORE
     164/      50 :                     ;
     165/      50 :                     ;	RETURN FROM INTERRUPT
     166/      50 : FB                  IGNORE:	EI
     167/      51 : ED 4D               	RETI
     168/      53 :                     
     169/      53 :                     
     170/      53 :                     ;-------------------------------------
     171/      53 :                     ;	INTERRUPT SERVICE ROUTINE
     172/      53 :                     ;-------------------------------------
     173/      53 :                     
     174/      53 :                     ; TX
     175/      53 :                     ;	BUFFER -> SIOA
     176/      53 :                     ;
     177/      53 :                     INTTXD:	
     178/      53 : F5                  	PUSH	AF
     179/      54 : C5                  	PUSH	BC
     180/      55 : D5                  	PUSH	DE
     181/      56 : E5                  	PUSH	HL
     182/      57 :                     
     183/      57 : 3A CD BF            	ld	a, (rx_xreq)
     184/      5A : B7                  	or	a
     185/      5B : 28 07               	jr	z, inttx_nxt
     186/      5D :                     
     187/      5D :                     	;send XON/XOFF request
     188/      5D : D3 00               	OUT	(PSIOAD), a
     189/      5F : 32 CB BF            	ld	(rx_xflg), a
     190/      62 : 18 07               	jr	clr_pend
     191/      64 :                     	
     192/      64 :                     
     193/      64 :                     inttx_nxt:
     194/      64 : CD CD 2E            	call	get_TxDat
     195/      67 : 38 0B               	JR	c, clr_TxIntPending
     196/      69 :                     
     197/      69 :                     ;	SEND DATA
     198/      69 : D3 00               	OUT	(PSIOAD), a
     199/      6B :                     
     200/      6B :                     clr_pend:
     201/      6B : AF                  	xor	a
     202/      6C : 32 CD BF            	ld	(rx_xreq), a
     203/      6F :                     set_pend:
     204/      6F : 32 CA BF            	ld	(tx_pend), a
     205/      72 : 18 51               	jr	INTEXT
     206/      74 :                     
     207/      74 :                     ; clear Tx interrupt pending
     208/      74 :                     clr_TxIntPending:
     209/      74 : 3E 28               	ld	a, TXPEND	; reset Tx int pending
     210/      76 : D3 01               	out	(PSIOAC), a
     211/      78 : 18 F5               	jr	set_pend
     212/      7A :                     
     213/      7A :                     ; RX
     214/      7A :                     ;	SIOA -> BUFFER
     215/      7A :                     ;
     216/      7A : F5                  INTRXD:	PUSH	AF
     217/      7B : C5                  	PUSH	BC
     218/      7C : D5                  	PUSH	DE
     219/      7D : E5                  	PUSH	HL
     220/      7E :                     ;
     221/      7E :                     ;	RECEIVE DATA
     222/      7E : DB 00               	IN	A,(PSIOAD)
     223/      80 :                     
     224/      80 :                     	;check XOFF code
     225/      80 : FE 13               	cp	XOFF
     226/      82 : 28 04               	jr	z, ctl_txflg
     227/      84 :                     
     228/      84 :                     	;check XON code
     229/      84 : FE 11               	cp	XON
     230/      86 : 20 05               	jr	nz, ctl_rcv
     231/      88 :                     
     232/      88 :                     ctl_txflg:
     233/      88 : 32 CC BF            	ld	(tx_xflg), a	; save TX XON/OFF condition
     234/      8B : 18 38               	jr	INTEXT
     235/      8D :                     
     236/      8D :                     ; control receive data buffer
     237/      8D :                     ctl_rcv:
     238/      8D : 57                  	LD	D,A
     239/      8E :                     
     240/      8E : 3A 44 BF            	LD	A,(Rx_BCNT)
     241/      91 : FE 40               	CP	Rx_BFSIZ	; CHECK BUFFER FULL
     242/      93 : 28 30               	jr	z, INTEXT	; ring buffer full
     243/      95 :                     
     244/      95 : 3C                  	INC	A
     245/      96 : 32 44 BF            	LD	(Rx_BCNT),A
     246/      99 : FE 36               	CP	Rx_BFSIZ - 10
     247/      9B : 20 17               	jr	nz, ctl_rcv1
     248/      9D :                     	
     249/      9D :                     	; XOFF control
     250/      9D : 3E 13               	ld	a, XOFF
     251/      9F : 32 CD BF            	ld	(rx_xreq), a
     252/      A2 : 3A CA BF            	ld	a, (tx_pend)
     253/      A5 : B7                  	or	a
     254/      A6 : 28 0C               	jr	z, ctl_rcv1
     255/      A8 :                     
     256/      A8 : 3E 13               	ld	a, XOFF
     257/      AA : 32 CB BF            	ld	(rx_xflg), a
     258/      AD : CD EB 2E            	call	Tx_direct
     259/      B0 : AF                  	xor	a
     260/      B1 : 32 CD BF            	ld	(rx_xreq), a
     261/      B4 :                     
     262/      B4 :                     ;
     263/      B4 :                     ;	WRITE DATA TO BUFFER
     264/      B4 :                     ctl_rcv1:
     265/      B4 : 3A 46 BF            	LD	A,(Rx_BWP)
     266/      B7 : 4F                  	LD	C,A
     267/      B8 : 06 00               	LD	B,00H
     268/      BA : 21 47 BF            	LD	HL,Rx_BUF
     269/      BD : 09                  	ADD	HL,BC
     270/      BE : 72                  	LD	(HL),D
     271/      BF : 3C                  	INC	A
     272/      C0 : E6 3F               	AND	Rx_BFSIZ-1
     273/      C2 : 32 46 BF            	LD	(Rx_BWP),A
     274/      C5 :                     ;
     275/      C5 :                     ;	RESTORE REGISTERS
     276/      C5 : E1                  INTEXT:	POP	HL
     277/      C6 : D1                  	POP	DE
     278/      C7 : C1                  	POP	BC
     279/      C8 : F1                  	POP	AF
     280/      C9 :                     ;
     281/      C9 :                     ;	RETURN FROM INTERRUPT
     282/      C9 : FB                  	EI
     283/      CA : ED 4D               	RETI
     284/      CC :                     
     285/      CC :                     ;*******************************
     286/      CC :                     ;	Setup I/O
     287/      CC :                     ;*******************************
     288/      CC :                     
     289/      CC :                     ;	SIOB COMMAND CHAIN
     290/      CC : 18                  SIOBCD:	DB	18H
     291/      CD : 01 04               	DB	01H,04H
     292/      CF : 02                  	DB	02H
     293/      D0 : 40                  	DB	ITABLE & 00FFH
     294/      D1 : =5H                  SIOBCL	EQU	$-SIOBCD
     295/      D1 :                     
     296/      D1 :                     ;	SIOA COMMAND CHAIN
     297/      D1 : 18                  SIOACD:	DB	18H
     298/      D2 : 04 44               	db	04h, 44h
     299/      D4 : 03 C1               	DB	03H,0C1H
     300/      D6 : 05 E8               	DB	05H,0E8H
     301/      D8 : 01 12               	DB	01H,12H		; enable Tx int
     302/      DA : =9H                  SIOACL	EQU	$-SIOACD
     303/      DA :                     ;
     304/      DA :                     
     305/      DA :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     306/      DA :                     ;
     307/      DA :                     ; Initialize SBCZ80 board 
     308/      DA :                     ;
     309/      DA :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
     310/      DA :                     
     311/      DA :                     SINIT:	
     312/      DA : F3                  	DI
     313/      DB : 31 D0 BE            	LD	SP,STACKM	; monitor stask defines STACKM
     314/      DE : 21 00 80            	LD	HL,RAM_B
     315/      E1 : 01 00 40            	LD	BC,RAMSIZ
     316/      E4 :                     init_ram:
     317/      E4 : AF                  	xor	a
     318/      E5 : 77                  	LD	(HL), a
     319/      E6 : 23                  	inc	hl
     320/      E7 : 0B                  	dec	bc
     321/      E8 : 78                  	ld	a, b
     322/      E9 : B1                  	or	c
     323/      EA : 20 F8               	jr	nz, init_ram
     324/      EC :                     ;
     325/      EC :                     ;	SETUP INTERRUPT
     326/      EC : ED 5E               	IM	2
     327/      EE : 21 40 00            	LD	HL,ITABLE
     328/      F1 : 7C                  	LD	A,H
     329/      F2 : ED 47               	LD	I,A
     330/      F4 :                     ;
     331/      F4 :                     ;	SIO INITIALIZE
     332/      F4 :                     	; SIO B
     333/      F4 : 21 CC 00            	LD	HL,SIOBCD
     334/      F7 : 0E 03               	LD	C,PSIOBC
     335/      F9 : 06 05               	LD	B,SIOBCL
     336/      FB : ED B3               	OTIR
     337/      FD :                     	; SIO A
     338/      FD : 21 D1 00            	LD	HL,SIOACD
     339/     100 : 0E 01               	LD	C,PSIOAC
     340/     102 : 06 09               	LD	B,SIOACL
     341/     104 : ED B3               	OTIR
     342/     106 :                     ;
     343/     106 :                     ;	START Monitor
     344/     106 :                     ;
     345/     106 : C3 09 01            	jp	CSTART
     346/     109 :                     
     347/     109 : =>FALSE              	IF	BACKDOOR
     348/     109 :                     ;;;
     349/     109 :                     ;;; RST 08H Handler
     350/     109 :                     ;;;
     351/     109 :                     RST08H:
     352/     109 :                     
     353/     109 :                     	ld	(save_hl), hl	; save hl
     354/     109 :                     	ld	hl, (stealRST08)
     355/     109 :                     	jr	jmp_rst
     356/     109 :                     
     357/     109 :                     ;;;
     358/     109 :                     ;;; RST 10H Handler
     359/     109 :                     ;;;
     360/     109 :                     RST10H:
     361/     109 :                     
     362/     109 :                     	ld	(save_hl), hl	; save hl
     363/     109 :                     	ld	hl, (stealRST10)
     364/     109 :                     	jr	jmp_rst
     365/     109 :                     
     366/     109 :                     ;;;
     367/     109 :                     ;;; RST 18H Handler
     368/     109 :                     ;;;
     369/     109 :                     RST18H:
     370/     109 :                     
     371/     109 :                     	ld	(save_hl), hl	; save hl
     372/     109 :                     	ld	hl, (stealRST18)
     373/     109 :                     	jr	jmp_rst
     374/     109 :                     
     375/     109 :                     ;;;
     376/     109 :                     ;;; RST 20H Handler
     377/     109 :                     ;;;
     378/     109 :                     RST20H:
     379/     109 :                     
     380/     109 :                     	ld	(save_hl), hl	; save hl
     381/     109 :                     	ld	hl, (stealRST20)
     382/     109 :                     	jr	jmp_rst
     383/     109 :                     
     384/     109 :                     ;;;
     385/     109 :                     ;;; RST 28H Handler
     386/     109 :                     ;;;
     387/     109 :                     RST28H:
     388/     109 :                     
     389/     109 :                     	ld	(save_hl), hl	; save hl
     390/     109 :                     	ld	hl, (stealRST28)
     391/     109 :                     	jr	jmp_rst
     392/     109 :                     
     393/     109 :                     ;;;
     394/     109 :                     ;;; RST 30H Handler
     395/     109 :                     ;;;
     396/     109 :                     RST30H:
     397/     109 :                     
     398/     109 :                     	ld	(save_hl), hl	; save hl
     399/     109 :                     	ld	hl, (stealRST30)
     400/     109 :                     	jr	jmp_rst
     401/     109 :                     
     402/     109 :                     ;;;
     403/     109 :                     ;;; RST 38H Handler
     404/     109 :                     ;;;
     405/     109 :                     RST38H:
     406/     109 :                     
     407/     109 :                     	ld	(save_hl), hl	; save hl
     408/     109 :                     	ld	hl, (stealRST38)
     409/     109 :                     jmp_rst:
     410/     109 :                     	push	hl		; set jump address
     411/     109 :                     	ld	hl, (save_hl)	; restore hl
     412/     109 :                     RST20H_IN:
     413/     109 :                     RST28H_IN:
     414/     109 :                     	ret			; jump (stealRST38)
     415/     109 : [347]                	ENDIF
     416/     109 :                     
     417/     109 :                     ;;;
     418/     109 :                     ;;; Universal Monitor Z80 Cold start
     419/     109 :                     ;;;
     420/     109 :                     
     421/     109 :                     CSTART:
     422/     109 : 31 D0 BE            	LD	SP,STACKM	; monitor stask defines STACKM
     423/     10C :                     
     424/     10C : 3E 11               	ld	a, XON
     425/     10E : 32 CB BF            	ld	(rx_xflg), a
     426/     111 : 32 CC BF            	ld	(tx_xflg), a
     427/     114 : CD EB 2E            	call	Tx_direct
     428/     117 :                     
     429/     117 : FB                  	EI
     430/     118 :                     
     431/     118 : 21 00 80            	LD	HL,RAM_B
     432/     11B : 22 D0 BE            	LD	(DSADDR),HL
     433/     11E : 22 D7 BE            	LD	(SADDR),HL
     434/     121 : 22 D5 BE            	LD	(GADDR),HL
     435/     124 : 22 1B BF            	ld	(asm_adr),HL
     436/     127 : 22 1D BF            	ld	(tasm_adr),HL
     437/     12A : 3E 49               	LD	A,'I'
     438/     12C : 32 D9 BE            	LD	(HEXMOD),A
     439/     12F :                     	
     440/     12F : =>FALSE              	IF	BACKDOOR
     441/     12F :                     	; init back door RST XXH entory point
     442/     12F :                     	ld	hl, CONOUT		; RST 08H : CONOUT
     443/     12F :                     	ld	(stealRST08), hl
     444/     12F :                     	ld	hl, CONIN
     445/     12F :                     	ld	(stealRST10), hl	; RST 10H : CONIN
     446/     12F :                     	ld	hl, CONST
     447/     12F :                     	ld	(stealRST18), hl	; RST 18H : CONST
     448/     12F :                     	ld	hl, RST20H_IN
     449/     12F :                     	ld	(stealRST20), hl
     450/     12F :                     	ld	hl, RST28H_IN
     451/     12F :                     	ld	(stealRST28), hl
     452/     12F :                     	ld	hl, RST30H_IN
     453/     12F :                     	ld	(stealRST30), hl
     454/     12F :                     	ld	hl, RST38H_IN
     455/     12F :                     	ld	(stealRST38), hl
     456/     12F : [440]                	ENDIF
     457/     12F :                     
     458/     12F :                     	;; Initialize register value
     459/     12F : AF                  	XOR	A
     460/     130 : 21 DC BE            	LD	HL,REG_B
     461/     133 : 06 2E               	LD	B,dbg_wend-REG_B
     462/     135 :                     IR0:
     463/     135 : 77                  	LD	(HL),A
     464/     136 : 23                  	INC	HL
     465/     137 : 10 FC               	DJNZ	IR0
     466/     139 :                     
     467/     139 :                     ;	LD	B, dbg_wend - dbg_wtop
     468/     139 :                     ;	ld	hl,dbg_wtop	
     469/     139 :                     ;	XOR	A
     470/     139 :                     ;
     471/     139 :                     ;dbg_wini:
     472/     139 :                     ;	ld	(hl), a
     473/     139 :                     ;	inc	hl
     474/     139 :                     ;	DJNZ	dbg_wini
     475/     139 :                     
     476/     139 : 21 90 BE            	LD	HL,STACK		; user stack define STACK
     477/     13C : 22 F0 BE            	LD	(REGSP),HL
     478/     13F : 21 00 80            	ld	hl, RAM_B
     479/     142 : 22 F2 BE            	ld	(REGPC), HL		; set program counter
     480/     145 :                     
     481/     145 : 06 08               	ld	b, F_bitSize
     482/     147 : 3E 2E               	ld	a, '.'
     483/     149 : 21 30 BF            	ld	hl, F_bit
     484/     14C :                     ir00:
     485/     14C : 77                  	ld	(hl), a
     486/     14D : 23                  	inc	hl
     487/     14E : 10 FC               	djnz	ir00		; init F_bit string
     488/     150 : AF                  	xor	a
     489/     151 : 77                  	ld	(hl), a		; delimiter
     490/     152 :                     
     491/     152 :                     ; init dbg work area
     492/     152 :                     
     493/     152 : 3E 49               	ld	a, 'I'
     494/     154 : 32 15 BF            	ld	(TM_mode), a	; default call_in mode
     495/     157 : 3E 4E               	ld	a, 'N'
     496/     159 : 32 14 BF            	ld	(TP_mode), a	; default display reg mode
     497/     15C : 2E 00               	ld	l, 0
     498/     15E : 65                  	ld	h, l
     499/     15F : 22 16 BF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     500/     162 : AF                  	xor	a
     501/     163 : 32 1A BF            	ld	(fever_t), a	; clear flag trace forever
     502/     166 :                     	; init bp, tp, gstop address & opcode
     503/     166 : 21 00 80            	ld	hl, RAM_B
     504/     169 : 22 F8 BE            	ld	(tpt1_adr), hl
     505/     16C : 22 FC BE            	ld	(tpt2_adr), hl
     506/     16F : 22 00 BF            	ld	(bpt1_adr), hl
     507/     172 : 22 04 BF            	ld	(bpt2_adr), hl
     508/     175 : 22 08 BF            	ld	(tmpb_adr), hl
     509/     178 : 7E                  	ld	a, (hl)
     510/     179 : 32 F7 BE            	ld	(tpt1_op), a
     511/     17C : 32 FB BE            	ld	(tpt2_op), a
     512/     17F : 32 FF BE            	ld	(bpt1_op), a
     513/     182 : 32 03 BF            	ld	(bpt2_op), a
     514/     185 : 32 07 BF            	ld	(tmpb_op), a
     515/     188 :                     
     516/     188 :                     ;; Opening message
     517/     188 :                     
     518/     188 : 21 AD 2B            	LD	HL,OPNMSG
     519/     18B : CD 23 26            	CALL	STROUT
     520/     18E : 18 2D               	jr	WSTART
     521/     190 :                     
     522/     190 :                     WSTART0:
     523/     190 :                     ;	RECEIVE BUFFER INITIALIZE
     524/     190 :                     ;	init XON/XOFF control
     525/     190 :                     
     526/     190 : AF                  	XOR	A
     527/     191 : F3                  	DI
     528/     192 : 32 44 BF            	LD	(Rx_BCNT),A
     529/     195 : 32 45 BF            	LD	(Rx_BRP),A
     530/     198 : 32 46 BF            	LD	(Rx_BWP),A
     531/     19B : 32 87 BF            	LD	(Tx_BCNT),A
     532/     19E : 32 88 BF            	LD	(Tx_BRP),A
     533/     1A1 : 32 89 BF            	LD	(Tx_BWP),A
     534/     1A4 : 32 CD BF            	ld	(rx_xreq), a
     535/     1A7 :                     
     536/     1A7 :                     	; Reinit SIO
     537/     1A7 :                     
     538/     1A7 : 3E 30               	ld	a, 30h		; Error Reset
     539/     1A9 : D3 01               	out	(PSIOAC), a
     540/     1AB : 3E 28               	ld	a, TXPEND	; Reset TxINT Pending
     541/     1AD : D3 01               	out	(PSIOAC), a
     542/     1AF : 32 CA BF            	ld	(tx_pend), a
     543/     1B2 :                     
     544/     1B2 : 3E 11               	ld	a, XON
     545/     1B4 : 32 CB BF            	ld	(rx_xflg), a
     546/     1B7 : 32 CC BF            	ld	(tx_xflg), a
     547/     1BA : CD EB 2E            	call	Tx_direct
     548/     1BD :                     ;	EI
     549/     1BD :                     
     550/     1BD :                     WSTART:
     551/     1BD : 31 D0 BE            	LD	SP,STACKM	; monitor stask defines STACKM
     552/     1C0 : AF                  	xor	a
     553/     1C1 : 32 39 BF            	ld	(ky_flg), a	; clear skip LF flag
     554/     1C4 :                     
     555/     1C4 : 21 E6 2B            	LD	HL,PROMPT
     556/     1C7 : CD 23 26            	CALL	STROUT
     557/     1CA : CD 83 26            	CALL	GETLIN
     558/     1CD : CD 0D 27            	CALL	SKIPSP
     559/     1D0 : B7                  	OR	A
     560/     1D1 : 28 EA               	JR	Z, WSTART
     561/     1D3 :                     
     562/     1D3 : FE 41               	CP	'A'
     563/     1D5 : CA 26 1A            	JP	Z, line_asm
     564/     1D8 : FE 44               	CP	'D'
     565/     1DA : CA AB 07            	JP	Z, DUMP
     566/     1DD : FE 47               	CP	'G'
     567/     1DF : CA 93 14            	JP	Z, GO
     568/     1E2 : FE 53               	CP	'S'
     569/     1E4 : CA 5A 15            	JP	Z, SETM
     570/     1E7 :                     
     571/     1E7 : FE 4C               	CP	'L'
     572/     1E9 : CA D0 15            	JP	Z, LOADH
     573/     1EC : FE 50               	CP	'P'
     574/     1EE : CA AA 16            	JP	Z, SAVEH
     575/     1F1 :                     
     576/     1F1 : FE 52               	CP	'R'
     577/     1F3 : CA 82 17            	JP	Z, REG
     578/     1F6 :                     
     579/     1F6 : FE 23               	cp	'#'
     580/     1F8 : CA 19 02            	jp	Z, Launcher
     581/     1FB :                     
     582/     1FB : FE 42               	cp	'B'
     583/     1FD : CA 6D 03            	jp	z, brk_cmd	; break point command
     584/     200 :                     	
     585/     200 : FE 54               	cp	'T'
     586/     202 : CA 22 04            	jp	z, trace_cmd	; trace point command
     587/     205 :                     
     588/     205 : FE 3F               	cp	'?'
     589/     207 : 28 08               	jr	z, command_hlp	; command help message
     590/     209 :                     
     591/     209 :                     ERR:
     592/     209 : 21 03 2C            	LD	HL,ERRMSG
     593/     20C : CD 23 26            	CALL	STROUT
     594/     20F : 18 AC               	JR	WSTART
     595/     211 :                     
     596/     211 :                     ;;
     597/     211 :                     ;; command help
     598/     211 :                     ;;
     599/     211 :                     command_hlp:
     600/     211 :                     
     601/     211 : 21 DF 29            	LD	HL, cmd_hlp
     602/     214 : CD 23 26            	CALL	STROUT
     603/     217 : 18 A4               	JR	WSTART
     604/     219 :                     
     605/     219 :                     ;;
     606/     219 :                     ;; Launch appended program
     607/     219 :                     ;;
     608/     219 :                     Launcher:
     609/     219 : 23                  	INC	HL
     610/     21A : CD 0D 27            	CALL	SKIPSP		; A <- next char
     611/     21D : B7                  	OR	A
     612/     21E : 28 E9               	JR	Z,ERR
     613/     220 :                     
     614/     220 :                     	; check L or number
     615/     220 :                     	
     616/     220 : FE 4C               	cp	'L'
     617/     222 : 28 25               	JR	Z,LST_PRG	; list append program
     618/     224 :                     
     619/     224 :                     	; check number
     620/     224 :                     
     621/     224 : CD 08 03            	call	GET_NUM		; return BC : number
     622/     227 : 38 E0               	JR	C, ERR
     623/     229 :                     
     624/     229 :                     	; check number
     625/     229 : 79                  	LD	A, C
     626/     22A : FE 08               	CP	(lanch1 - ApendTBL)/2 +1	; a < 17 ?
     627/     22C : D2 09 02            	JP	NC, ERR
     628/     22F : B7                  	OR	A				; check '0'
     629/     230 : CA 09 02            	JP	Z, ERR
     630/     233 :                     
     631/     233 :                     	; A <- append program No.
     632/     233 :                     
     633/     233 : 3D                  	DEC	A	; 0 <= A <= 0FH
     634/     234 : 17                  	RLA		; A = A * 2
     635/     235 : 16 00               	LD	D, 0
     636/     237 : 5F                  	LD	E, A
     637/     238 : 21 5E 02            	LD	HL, ApendTBL
     638/     23B : 19                  	ADD	HL, DE	; get lanch address point
     639/     23C : 5E                  	LD	E, (HL)
     640/     23D : 23                  	INC	HL
     641/     23E : 56                  	LD	D, (HL)	; DE : JUMP POINT
     642/     23F :                     
     643/     23F :                     	; Jump to append program
     644/     23F :                     	
     645/     23F : EB                  	EX	DE, HL
     646/     240 : 5E                  	LD	E, (HL)
     647/     241 : 23                  	INC	HL
     648/     242 : 56                  	LD	D, (HL)	; DE : jump address
     649/     243 : 7A                  	LD	A, D
     650/     244 : B3                  	OR	E	; address check
     651/     245 : 28 C2               	JR	Z,ERR	; jump address NULL
     652/     247 : EB                  	EX	DE, HL
     653/     248 : E9                  	JP	(HL)	; lanch append program
     654/     249 :                     	
     655/     249 :                     	; List out append program
     656/     249 :                     LST_PRG:
     657/     249 :                     	; get address to DE
     658/     249 : 21 5E 02            	LD	HL, ApendTBL
     659/     24C :                     
     660/     24C :                     LST_PRG1:
     661/     24C : 5E                  	LD	E, (HL)
     662/     24D : 23                  	INC	HL
     663/     24E : 7E                  	LD	a, (HL)
     664/     24F : 57                  	ld	d, a
     665/     250 : 23                  	INC	HL
     666/     251 :                     
     667/     251 : B3                  	or	e
     668/     252 : CA BD 01            	jp	z, WSTART
     669/     255 : 13                  	INC	DE
     670/     256 : 13                  	INC	DE	; get string address
     671/     257 :                     	
     672/     257 : EB                  	EX	DE, HL
     673/     258 : CD 23 26            	CALL	STROUT
     674/     25B : EB                  	EX	DE, HL
     675/     25C : 18 EE               	JR	LST_PRG1
     676/     25E :                     	
     677/     25E :                     ; Append program launch table
     678/     25E :                     ;
     679/     25E :                     ApendTBL:
     680/     25E : 6C 02               	dw	lanch1
     681/     260 : 80 02               	dw	lanch2
     682/     262 : 96 02               	dw	lanch3
     683/     264 : B5 02               	dw	lanch4
     684/     266 : D6 02               	dw	lanch5
     685/     268 : EA 02               	dw	lanch6
     686/     26A :                     ;	dw	lanch7
     687/     26A :                     ;	dw	lanch8
     688/     26A :                     ;	dw	lanch9
     689/     26A :                     ;	dw	lanch10
     690/     26A :                     ;	dw	lanch11
     691/     26A :                     ;	dw	lanch12
     692/     26A :                     ;	dw	lanch13
     693/     26A :                     ;	dw	lanch14
     694/     26A :                     ;	dw	lanch15
     695/     26A :                     ;	dw	lanch16
     696/     26A : 00 00               	dw	0
     697/     26C :                     	
     698/     26C :                     lanch1:
     699/     26C : 00 2F               	dw	BASIC_CST
     700/     26E : 31 2E 20 47 42 41   	DB	"1. GBASIC Start",CR,LF,00H
              274 : 53 49 43 20 53 74 
              27A : 61 72 74 0D 0A 00 
     701/     280 :                     lanch2:
     702/     280 : 03 2F               	dw	BASIC_WST
     703/     282 : 32 2E 20 47 42 41   	DB	"2. GBASIC Restart",CR,LF,00H
              288 : 53 49 43 20 52 65 
              28E : 73 74 61 72 74 0D 
              294 : 0A 00             
     704/     296 :                     
     705/     296 :                     lanch3:
     706/     296 : 00 4C               	dw	POTB_CST
     707/     298 : 33 2E 20 50 61 6C   	DB	"3. PaloAltoTinyBASIC Start",CR,LF,00H
              29E : 6F 41 6C 74 6F 54 
              2A4 : 69 6E 79 42 41 53 
              2AA : 49 43 20 53 74 61 
              2B0 : 72 74 0D 0A 00    
     708/     2B5 :                     		
     709/     2B5 :                     lanch4:
     710/     2B5 : 03 4C               	dw	POTB_WST
     711/     2B7 : 34 2E 20 50 61 6C   	DB	"4. PaloAltoTinyBASIC Restart",CR,LF,00H
              2BD : 6F 41 6C 74 6F 54 
              2C3 : 69 6E 79 42 41 53 
              2C9 : 49 43 20 52 65 73 
              2CF : 74 61 72 74 0D 0A 
              2D5 : 00                
     712/     2D6 :                     
     713/     2D6 :                     lanch5:
     714/     2D6 : 00 54               	dw	GAME80_CST
     715/     2D8 : 35 2E 20 47 41 4D   	DB	"5. GAME80 Start",CR,LF,00H
              2DE : 45 38 30 20 53 74 
              2E4 : 61 72 74 0D 0A 00 
     716/     2EA :                     		
     717/     2EA :                     lanch6:
     718/     2EA : 00 54               	dw	GAME80_CST
     719/     2EC : 36 2E 20 47 41 4D   	DB	"6. GAME80 Restart",CR,LF,00H
              2F2 : 45 38 30 20 52 65 
              2F8 : 73 74 61 72 74 0D 
              2FE : 0A 00             
     720/     300 :                     		
     721/     300 :                     ;lanch7:
     722/     300 :                     ;lanch8:
     723/     300 :                     ;lanch9:
     724/     300 :                     ;lanch10:
     725/     300 :                     ;lanch11:
     726/     300 :                     ;lanch12:
     727/     300 :                     ;lanch13:
     728/     300 :                     ;lanch14:
     729/     300 :                     ;lanch15:
     730/     300 :                     ;lanch16:
     731/     300 :                     ;	dw	0
     732/     300 :                     
     733/     300 :                     GET_dNUM:
     734/     300 : D5                  	push	de
     735/     301 : E5                  	push	hl
     736/     302 : CD 08 03            	call	GET_NUM
     737/     305 : E1                  	pop	hl
     738/     306 : D1                  	pop	de
     739/     307 : C9                  	ret
     740/     308 :                     
     741/     308 :                     	; get number
     742/     308 :                     	; input HL : string buffer
     743/     308 :                     	;
     744/     308 :                     	; Return
     745/     308 :                     	; CF =1 : Error
     746/     308 :                     	; BC: Calculation result
     747/     308 :                     
     748/     308 :                     GET_NUM:
     749/     308 : AF                  	XOR	A		; Initialize C
     750/     309 : 47                  	LD	B, A
     751/     30A : 4F                  	LD	C, A		; clear BC
     752/     30B :                     	
     753/     30B :                     GET_NUM0:
     754/     30B : CD 0D 27            	CALL	SKIPSP		; A <- next char
     755/     30E : B7                  	OR	A
     756/     30F : C8                  	RET	Z		; ZF=1, ok! buffer end
     757/     310 :                     
     758/     310 : CD 2A 03            	CALL	GET_BI
     759/     313 : D8                  	RET	C
     760/     314 :                     
     761/     314 : F5                  	push	af
     762/     315 : 08                  	EX	AF, AF'		;'AF <> AF: save A
     763/     316 : F1                  	pop	af
     764/     317 : CD 39 03            	CALL	MUL_10		; BC = BC * 10
     765/     31A : D8                  	RET	C		; overflow error
     766/     31B : 08                  	EX	AF, AF'		;'AF <> AF: restor A
     767/     31C :                     
     768/     31C : E5                  	push	hl
     769/     31D : 16 00               	ld	d, 0
     770/     31F : 5F                  	ld	e, a
     771/     320 :                     
     772/     320 : 60                  	ld	h, b
     773/     321 : 69                  	ld	l, c
     774/     322 : 19                  	add	hl, de
     775/     323 : 44                  	ld	b, h
     776/     324 : 4D                  	ld	c, l		; result: BC = BC * 10 + A
     777/     325 : E1                  	pop	hl
     778/     326 : D8                  	RET	C		; overflow error
     779/     327 :                     				; result: BC = BC * 10 + A
     780/     327 : 23                  	INC	HL
     781/     328 : 18 E1               	JR	GET_NUM0
     782/     32A :                     ;
     783/     32A :                     ; Make binary to A
     784/     32A :                     ; ERROR if CF=1
     785/     32A :                     ;
     786/     32A :                     GET_BI:
     787/     32A : B7                  	OR	A
     788/     32B : 28 0A               	JR	Z, UP_BI
     789/     32D : FE 30               	CP	'0'
     790/     32F : D8                  	RET	C
     791/     330 :                     	
     792/     330 : FE 3A               	CP	'9'+1	; ASCII':'
     793/     332 : 30 03               	JR	NC, UP_BI
     794/     334 : D6 30               	SUB	'0'	; Make binary to A
     795/     336 : C9                  	RET
     796/     337 :                     
     797/     337 :                     UP_BI:
     798/     337 : 37                  	SCF		; Set CF
     799/     338 : C9                  	RET
     800/     339 :                     
     801/     339 :                     ;
     802/     339 :                     ; multiply by 10
     803/     339 :                     ; BC = BC * 10
     804/     339 :                     MUL_10:
     805/     339 : E5                  	push	hl
     806/     33A :                     
     807/     33A : C5                  	push	bc
     808/     33B : CB 21               	SLA	C
     809/     33D : CB 10               	RL	B		; 2BC
     810/     33F : CB 21               	SLA	C
     811/     341 : CB 10               	RL	B		; 4BC
     812/     343 : E1                  	pop	hl		; hl = bc
     813/     344 : 09                  	add	hl, bc
     814/     345 : E5                  	push	hl
     815/     346 : C1                  	pop	bc		; 5BC
     816/     347 : CB 21               	SLA	C
     817/     349 : CB 10               	RL	B		; 10BC
     818/     34B :                     
     819/     34B : E1                  	pop	hl
     820/     34C : C9                  	RET			; result : BC = BC * 10
     821/     34D :                     ;
     822/     34D :                     ; list break point
     823/     34D :                     ;
     824/     34D :                     b_list:
     825/     34D : 3A FE BE            	ld	a, (bpt1_f)
     826/     350 : B7                  	or	a
     827/     351 : 28 08               	jr	z, b_list1
     828/     353 :                     
     829/     353 : 2A 00 BF            	ld	hl, (bpt1_adr)
     830/     356 : 3E 31               	ld	a, '1'
     831/     358 : CD 08 04            	call	b_msg_out
     832/     35B :                     
     833/     35B :                     b_list1:
     834/     35B : 3A 02 BF            	ld	a, (bpt2_f)
     835/     35E : B7                  	or	a
     836/     35F : CA BD 01            	jp	z, WSTART
     837/     362 :                     
     838/     362 : 2A 04 BF            	ld	hl, (bpt2_adr)
     839/     365 : 3E 32               	ld	a, '2'
     840/     367 : CD 08 04            	call	b_msg_out
     841/     36A : C3 BD 01            	JP	WSTART
     842/     36D :                     
     843/     36D :                     
     844/     36D :                     ;;; 
     845/     36D :                     ;;; break point command
     846/     36D :                     ;;; 
     847/     36D :                     brk_cmd:
     848/     36D : 23                  	INC	HL
     849/     36E : CD 0D 27            	CALL	SKIPSP		; A <- next char
     850/     371 : B7                  	OR	A
     851/     372 : 28 D9               	JR	Z,b_list	; only type "B"
     852/     374 :                     
     853/     374 : 01 FE BE            	ld	bc, bpt1_f
     854/     377 : FE 31               	cp	'1'
     855/     379 : 28 0E               	jr	z, set_bp1
     856/     37B :                     
     857/     37B : 01 02 BF            	ld	bc, bpt2_f
     858/     37E : FE 32               	cp	'2'
     859/     380 : 28 07               	jr	z, set_bp1
     860/     382 :                     
     861/     382 : FE 43               	cp	'C'	;clear?
     862/     384 : 28 3E               	jr	z, bp_clr
     863/     386 : C3 09 02            	jp	ERR
     864/     389 :                     
     865/     389 :                     set_bp1:
     866/     389 : 08                  	EX	AF, AF'		;'
     867/     38A :                     
     868/     38A : 23                  	INC	HL
     869/     38B : CD 0D 27            	CALL	SKIPSP		; A <- next char
     870/     38E : B7                  	OR	A
     871/     38F : 28 5A               	JR	Z, bp_LOT 	;; No address input -> list out
     872/     391 : FE 2C               	cp	','
     873/     393 : C2 09 02            	jp	nz, ERR
     874/     396 :                     
     875/     396 : 23                  	INC	HL
     876/     397 : CD 0D 27            	CALL	SKIPSP
     877/     39A : C5                  	push	bc
     878/     39B : CD 1D 27            	CALL	RDHEX		; 1st arg.
     879/     39E : E1                  	pop	hl		; hl <- bc
     880/     39F : DA 09 02            	jp	c, ERR
     881/     3A2 :                     
     882/     3A2 : CD AB 03            	call	setbpadr
     883/     3A5 : DA 09 02            	jp	c, ERR
     884/     3A8 : C3 BD 01            	JP	WSTART
     885/     3AB :                     
     886/     3AB :                     
     887/     3AB :                     ; hl : point of bp flag( bpt1_f or bpt2_f)
     888/     3AB :                     ; de : break point address
     889/     3AB :                     
     890/     3AB :                     ; check ram area, and set berak point
     891/     3AB :                     ; 
     892/     3AB :                     setbpadr:
     893/     3AB : 7A                  	ld	a, d
     894/     3AC : FE 80               	cp	RAM_B >> 8		; a - 080H
     895/     3AE : DA C2 03            	jp	c, chkERR		; ROM area
     896/     3B1 : FE C0               	cp	(RAM_E + 1)  >> 8	; a - 0C0H
     897/     3B3 : D2 C2 03            	jp	nc, chkERR		; No RAM area
     898/     3B6 : 3E 01               	ld	a,1
     899/     3B8 : 77                  	ld	(hl), a	; set flag
     900/     3B9 : 23                  	inc	hl
     901/     3BA : 1A                  	ld	a, (de)		; get opcode
     902/     3BB : 77                  	ld	(hl), a		; save opcode
     903/     3BC : 23                  	inc	hl
     904/     3BD : 73                  	ld	(hl), e ; set break point low address
     905/     3BE : 23                  	inc	hl
     906/     3BF : 72                  	ld	(hl), d ; set break point high address
     907/     3C0 : B7                  	or	a	; reset carry
     908/     3C1 : C9                  	ret
     909/     3C2 :                     
     910/     3C2 :                     chkERR:
     911/     3C2 : 37                  	scf	;set carry
     912/     3C3 : C9                  	ret
     913/     3C4 :                     
     914/     3C4 :                     ; clear break point
     915/     3C4 :                     
     916/     3C4 :                     bp_clr:
     917/     3C4 : 23                  	INC	HL
     918/     3C5 : CD 0D 27            	CALL	SKIPSP		; A <- next char
     919/     3C8 : B7                  	OR	A
     920/     3C9 : 28 14               	JR	Z,b_aclr	; all clear
     921/     3CB :                     
     922/     3CB : 01 FE BE            	ld	bc, bpt1_f
     923/     3CE : FE 31               	cp	'1'
     924/     3D0 : 28 08               	jr	z, bp_clr1
     925/     3D2 :                     
     926/     3D2 : 01 02 BF            	ld	bc, bpt2_f
     927/     3D5 : FE 32               	cp	'2'
     928/     3D7 : C2 09 02            	jp	nz, ERR
     929/     3DA :                     
     930/     3DA :                     bp_clr1:
     931/     3DA : AF                  	xor	a
     932/     3DB : 02                  	ld	(bc), a
     933/     3DC : C3 BD 01            	JP	WSTART
     934/     3DF :                     
     935/     3DF :                     b_aclr:
     936/     3DF : AF                  	xor	a
     937/     3E0 : 01 FE BE            	ld	bc, bpt1_f
     938/     3E3 : 02                  	ld	(bc), a
     939/     3E4 : 01 02 BF            	ld	bc, bpt2_f
     940/     3E7 : 02                  	ld	(bc), a
     941/     3E8 : C3 BD 01            	JP	WSTART
     942/     3EB :                     
     943/     3EB :                     ; when no address input. list out BP
     944/     3EB :                     ;
     945/     3EB :                     ; bc : break pointer buffer offset
     946/     3EB :                     bp_LOT:
     947/     3EB : 0A                  	ld	a, (bc)		; set break point?
     948/     3EC : B7                  	or	a
     949/     3ED : CA BD 01            	jp	z, WSTART	; no break point setting
     950/     3F0 :                     
     951/     3F0 : 08                  	EX	AF, AF'		;'
     952/     3F1 : 2A 00 BF            	ld	hl, (bpt1_adr)
     953/     3F4 : FE 31               	cp	'1'
     954/     3F6 : 28 03               	jr	z, l_b2
     955/     3F8 : 2A 04 BF            	ld	hl, (bpt2_adr)
     956/     3FB :                     l_b2:
     957/     3FB : CD 08 04            	call	b_msg_out
     958/     3FE : C3 BD 01            	JP	WSTART
     959/     401 :                     
     960/     401 : 42 50 28 00         bp_msg1:	db	"BP(",00H
     961/     405 : 29 3A 00            bp_msg2:	db	"):",00H
     962/     408 :                     
     963/     408 :                     b_msg_out:
     964/     408 : E5                  	push	hl
     965/     409 : F5                  	push	af
     966/     40A : 21 01 04            	ld	hl, bp_msg1
     967/     40D : CD 23 26            	call	STROUT
     968/     410 : F1                  	pop	af
     969/     411 : CD 8F 2E            	call	CONOUT
     970/     414 : 21 05 04            	ld	hl, bp_msg2
     971/     417 : CD 23 26            	call	STROUT
     972/     41A : E1                  	pop	hl
     973/     41B : CD 2C 26            	call	HEXOUT4
     974/     41E : CD 6C 26            	call	CRLF	
     975/     421 : C9                  	ret
     976/     422 :                     
     977/     422 :                     ;;; 
     978/     422 :                     ;;; trace command
     979/     422 :                     ;;; 
     980/     422 :                     trace_cmd:
     981/     422 :                     
     982/     422 :                     ; T[address][,step数]
     983/     422 :                     ; TP[ON | OFF]
     984/     422 :                     ; TM[I | S]
     985/     422 :                     
     986/     422 :                     ; init steps
     987/     422 : E5                  	push	hl
     988/     423 : 2E 00               	ld	l, 0
     989/     425 : 26 00               	ld	h, 0
     990/     427 : 22 16 BF            	ld	(TC_cnt), hl	; clear trace step counter to 0
     991/     42A : 2A F2 BE            	ld	hl,(REGPC)
     992/     42D : 22 18 BF            	ld	(tmpT), hl	; init temp address
     993/     430 : AF                  	xor	a
     994/     431 : 32 1A BF            	ld	(fever_t), a	; clear flag trace forever
     995/     434 :                     
     996/     434 : E1                  	pop	hl
     997/     435 : 23                  	inc	hl
     998/     436 : CD 0D 27            	CALL	SKIPSP
     999/     439 : CD 1D 27            	CALL	RDHEX		; 1st arg.
    1000/     43C : D2 E8 04            	jp	nc, tadr_chk
    1001/     43F : CD 0D 27            	CALL	SKIPSP
    1002/     442 : 7E                  	ld	a, (hl)
    1003/     443 : B7                  	or	a
    1004/     444 : CA 11 05            	Jp	z, t_op1	; only 1 step trace, check opcode
    1005/     447 : FE 2C               	cp	','
    1006/     449 : CA F9 04            	jp	z, stp_chk	; steps check
    1007/     44C :                     
    1008/     44C : FE 50               	cp	'P'
    1009/     44E : 28 4E               	jr	z, tp_cmd
    1010/     450 : FE 4D               	cp	'M'
    1011/     452 : C2 09 02            	jp	nz, ERR
    1012/     455 :                     	
    1013/     455 :                     	; tm_cmd
    1014/     455 :                     	
    1015/     455 : 23                  	inc	hl
    1016/     456 : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1017/     459 :                     dip_TM:
    1018/     459 : 21 90 04            	ld	hl, tm_msg_i
    1019/     45C : FE 49               	cp	'I'
    1020/     45E : 28 10               	jr	z, set_TM
    1021/     460 : 21 96 04            	ld	hl, tm_msg_s
    1022/     463 : FE 53               	cp	'S'
    1023/     465 : 28 09               	jr	z, set_TM
    1024/     467 : B7                  	or	a
    1025/     468 : C2 09 02            	jp	nz, ERR
    1026/     46B :                     
    1027/     46B :                     ;display T mode
    1028/     46B : 3A 15 BF            	ld	a, (TM_mode)
    1029/     46E : 18 E9               	jr	dip_TM
    1030/     470 :                     
    1031/     470 :                     ;set TM mode and display
    1032/     470 :                     set_TM:
    1033/     470 : 32 15 BF            	ld	(TM_mode),a
    1034/     473 : E5                  	push	hl
    1035/     474 : 21 81 04            	ld	hl, tm_msg_0
    1036/     477 : CD 23 26            	call	STROUT
    1037/     47A : E1                  	pop	hl
    1038/     47B : CD 23 26            	call	STROUT
    1039/     47E : C3 BD 01            	jp	WSTART
    1040/     481 :                     
    1041/     481 :                     tm_msg_0:
    1042/     481 : 54 4D 20 6D 6F 64   	db	"TM mode:<CALL ", 00h
              487 : 65 3A 3C 43 41 4C 
              48D : 4C 20 00          
    1043/     490 :                     tm_msg_i:
    1044/     490 : 49 4E 3E 0D 0A 00   	db	"IN>", CR, LF, 00h
    1045/     496 :                     tm_msg_s:
    1046/     496 : 53 4B 49 50 3E 0D   	db	"SKIP>", CR, LF, 00h
              49C : 0A 00             
    1047/     49E :                     	
    1048/     49E :                     	
    1049/     49E :                     	; tp_cmd
    1050/     49E :                     tp_cmd:	
    1051/     49E : 23                  	inc	hl
    1052/     49F : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1053/     4A2 : B7                  	or	a
    1054/     4A3 : 20 05               	jr	nz, tp_n1
    1055/     4A5 : 3A 14 BF            	ld	a, (TP_mode)
    1056/     4A8 : 18 09               	jr	tp_n2
    1057/     4AA :                     	
    1058/     4AA :                     tp_n1:
    1059/     4AA : FE 4F               	cp	'O'
    1060/     4AC : C2 09 02            	jp	nz, ERR
    1061/     4AF : 23                  	inc	hl
    1062/     4B0 : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1063/     4B3 :                     
    1064/     4B3 :                     tp_n2:
    1065/     4B3 : 21 DD 04            	ld	hl, tp_msg_on
    1066/     4B6 : FE 4E               	cp	'N'
    1067/     4B8 : 28 08               	jr	z, tp_md_on
    1068/     4BA :                     
    1069/     4BA : 21 E2 04            	ld	hl, tp_msg_off
    1070/     4BD : FE 46               	cp	'F'
    1071/     4BF : C2 09 02            	jp	nz, ERR
    1072/     4C2 :                     
    1073/     4C2 :                     tp_md_on:
    1074/     4C2 :                     	; set trace mode and display mode
    1075/     4C2 : 32 14 BF            	ld	(TP_mode), a
    1076/     4C5 : E5                  	push	hl
    1077/     4C6 : 21 D3 04            	ld	hl, tp_msg_0
    1078/     4C9 : CD 23 26            	call	STROUT
    1079/     4CC : E1                  	pop	hl
    1080/     4CD : CD 23 26            	call	STROUT
    1081/     4D0 : C3 BD 01            	jp	WSTART
    1082/     4D3 :                     	
    1083/     4D3 :                     tp_msg_0:
    1084/     4D3 : 54 50 20 6D 6F 64   	db	"TP mode: ", 00h
              4D9 : 65 3A 20 00       
    1085/     4DD :                     tp_msg_on:
    1086/     4DD : 4F 4E 0D 0A 00      	db	"ON", CR, LF, 00h
    1087/     4E2 :                     tp_msg_off:
    1088/     4E2 : 4F 46 46 0D 0A 00   	db	"OFF", CR, LF, 00h
    1089/     4E8 :                     
    1090/     4E8 :                     tadr_chk:
    1091/     4E8 : ED 53 18 BF         	ld	(tmpT), de	; set start address
    1092/     4EC : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1093/     4EF : B7                  	or	a
    1094/     4F0 : 28 1F               	jr	z, t_op1	; 1step trace
    1095/     4F2 : FE 2C               	cp	','
    1096/     4F4 : 28 03               	jr	z, stp_chk
    1097/     4F6 : C3 09 02            	jp	ERR
    1098/     4F9 :                     
    1099/     4F9 :                     stp_chk:
    1100/     4F9 : 23                  	inc	hl
    1101/     4FA : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1102/     4FD : B7                  	or	a
    1103/     4FE : CA 09 02            	jp	z, ERR
    1104/     501 : FE 2D               	cp	'-'
    1105/     503 : 28 11               	jr	z, chk_fevre
    1106/     505 :                     
    1107/     505 :                     ; check steps
    1108/     505 :                     
    1109/     505 : CD 08 03            	call	GET_NUM		; get steps to BC
    1110/     508 : DA 09 02            	JP	C, ERR		; number error
    1111/     50B :                     
    1112/     50B :                     t_op11:
    1113/     50B : ED 43 16 BF         	ld	(TC_cnt), bc	; set trace step counter
    1114/     50F : 18 1B               	jr	t_op_chk
    1115/     511 :                     
    1116/     511 :                     t_op1:
    1117/     511 : 01 01 00            	ld	bc, 1
    1118/     514 : 18 F5               	jr	t_op11
    1119/     516 :                     
    1120/     516 :                     chk_fevre:
    1121/     516 : 23                  	inc	hl
    1122/     517 : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1123/     51A : FE 31               	cp	'1'
    1124/     51C : C2 09 02            	jp	nz, ERR
    1125/     51F : 23                  	inc	hl
    1126/     520 : CD 0D 27            	CALL	SKIPSP		; A <- next char
    1127/     523 : B7                  	or	a
    1128/     524 : C2 09 02            	jp	nz, ERR		; not "-1" then error
    1129/     527 : 3E 01               	ld	a, 1
    1130/     529 : 32 1A BF            	ld	(fever_t), a	; set flag trace forever
    1131/     52C :                     
    1132/     52C :                     t_op_chk:
    1133/     52C : 2A 18 BF            	ld	hl, (tmpT)	; get PC address
    1134/     52F : 7E                  	ld	a, (hl)		; get opcode
    1135/     530 :                     	
    1136/     530 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1137/     530 :                     ;;;
    1138/     530 :                     ;;; branch opecode check
    1139/     530 :                     ;;;
    1140/     530 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1141/     530 :                     
    1142/     530 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1143/     530 :                     ; 2 insertion Trace code(TC) 
    1144/     530 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1145/     530 :                     INSTC2:
    1146/     530 :                     	; check 1 byte machine code: branch (RET CC)
    1147/     530 :                     
    1148/     530 : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    1149/     533 : 21 C9 06            	ld	hl, RETCC_TBLS
    1150/     536 : ED B1               	cpir
    1151/     538 : 20 13               	jr	nz, next_bc1	; not RET CC
    1152/     53A :                     
    1153/     53A :                     	; RET CC
    1154/     53A :                     	; trace operation:
    1155/     53A :                     	;   1. ea = *REGSP; *ea = TC;
    1156/     53A :                     	;   2. ea = *REGPC; *(ea+1) = TC;
    1157/     53A :                     
    1158/     53A :                     	; 1
    1159/     53A : 0E 01               	ld	c, 1		; first TC point
    1160/     53C : CD 92 06            	call	insBRK_sp
    1161/     53F : DA 51 06            	jp	c, err_trace_seq
    1162/     542 :                     	
    1163/     542 :                     	; 2
    1164/     542 : 0E 02               	ld	c, 2		; second TC point
    1165/     544 : CD 72 06            	call	insBRK_1op
    1166/     547 : DA 51 06            	jp	c, err_trace_seq
    1167/     54A :                     
    1168/     54A : C3 4E 06            	jp	END_INS_TC
    1169/     54D :                     
    1170/     54D :                     	; check 2 byte machine code: branch (JR CC, Relative Value)
    1171/     54D :                     next_bc1:
    1172/     54D :                     
    1173/     54D : 01 05 00            	ld	bc, JRCC_TBLE - JRCC_TBLS
    1174/     550 : 21 D1 06            	ld	hl, JRCC_TBLS
    1175/     553 : ED B1               	cpir
    1176/     555 : 20 19               	jr	nz, next_bc2	; not JR CC
    1177/     557 :                     
    1178/     557 :                     	; JR CC, nn
    1179/     557 :                     	; trace operation:
    1180/     557 :                     	;   1. ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1181/     557 :                     	;   2. ea = *REGPC; *(ea+2) = TC;
    1182/     557 :                     
    1183/     557 :                     	; 1
    1184/     557 : 0E 01               	ld	c, 1		; first TC point
    1185/     559 : 2A 18 BF            	ld	hl, (tmpT)
    1186/     55C : CD 65 06            	call	Rel_adr_c
    1187/     55F : CD 9F 06            	call	inadr_chk_and_wrt
    1188/     562 : DA 51 06            	jp	c, err_trace_seq
    1189/     565 :                     
    1190/     565 :                     	; 2
    1191/     565 : 0E 02               	ld	c, 2		; second TC point
    1192/     567 : CD 77 06            	call	insBRK_2op
    1193/     56A : DA 51 06            	jp	c, err_trace_seq
    1194/     56D :                     
    1195/     56D : C3 4E 06            	jp	END_INS_TC
    1196/     570 :                     
    1197/     570 :                     	; check 3 byte machine code: branch JP CC, nnnn 16bit literal)
    1198/     570 :                     
    1199/     570 :                     next_bc2:
    1200/     570 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    1201/     573 : 21 D6 06            	ld	hl, JPCC_TBLS
    1202/     576 : ED B1               	cpir
    1203/     578 : 20 04               	jr	nz, next_bc21		; not JP CCC
    1204/     57A :                     
    1205/     57A :                     	; JP CC, nnnn
    1206/     57A :                     	; trace operation:
    1207/     57A :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1208/     57A :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1209/     57A :                     
    1210/     57A : 0E 01               	ld	c, 1		; first TC point
    1211/     57C : 18 13               	jr	next_bc222
    1212/     57E :                     
    1213/     57E :                     	; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    1214/     57E :                     
    1215/     57E :                     next_bc21:
    1216/     57E : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    1217/     581 : 21 DE 06            	ld	hl, CLCC_TBLS
    1218/     584 : ED B1               	cpir
    1219/     586 : 20 1A               	jr	nz, INSTC1		; not CALL CCC
    1220/     588 :                     
    1221/     588 :                     	; CALL CC, nnnn
    1222/     588 :                     	; trace operation:
    1223/     588 :                     	; TM_mode = 'I'
    1224/     588 :                     	;   1. ea = *REGPC; *((short *)(ea+1)) = TC;
    1225/     588 :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1226/     588 :                     	;
    1227/     588 :                     	; TM_mode = 'S'
    1228/     588 :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1229/     588 :                     
    1230/     588 : 0E 01               	ld	c, 1		; first TC point
    1231/     58A : 3A 15 BF            	ld	a, (TM_mode)
    1232/     58D : FE 53               	cp	'S'
    1233/     58F : 28 08               	jr	z, next_bc22	; skip insertion 1.
    1234/     591 :                     
    1235/     591 :                     next_bc222:
    1236/     591 :                     	; 1. ea = *REGPC; *((char *)(ea+1)) = TC;
    1237/     591 : CD 86 06            	call	insBRK_brp
    1238/     594 : DA 51 06            	jp	c, err_trace_seq
    1239/     597 :                     	
    1240/     597 :                     next_bc221:
    1241/     597 :                     	; 2. ea = *REGPC; *(ea+3) = TC;
    1242/     597 : 0E 02               	ld	c, 2		; second TC point
    1243/     599 :                     next_bc22:
    1244/     599 : CD 7C 06            	call	insBRK_3op
    1245/     59C : DA 51 06            	jp	c, err_trace_seq
    1246/     59F :                     
    1247/     59F : C3 4E 06            	jp	END_INS_TC
    1248/     5A2 :                     
    1249/     5A2 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1250/     5A2 :                     ; 1 insertion Trace code(TC) 
    1251/     5A2 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1252/     5A2 :                     INSTC1:
    1253/     5A2 :                     	; check 1 byte machine code: branch (return)
    1254/     5A2 : FE C9               	cp	0C9H		; RET ?
    1255/     5A4 : 20 0B               	jr	nz, next_bc3	; not RET
    1256/     5A6 :                     
    1257/     5A6 :                     	; RET
    1258/     5A6 :                     	; trace operation:
    1259/     5A6 :                     	;   ea = *REGSP; *ea = TC;
    1260/     5A6 : 0E 01               	ld	c, 1		; first TC point
    1261/     5A8 : CD 92 06            	call	insBRK_sp
    1262/     5AB : DA 51 06            	jp	c, err_trace_seq
    1263/     5AE : C3 4E 06            	jp	END_INS_TC
    1264/     5B1 :                     
    1265/     5B1 :                     	; check RST p
    1266/     5B1 :                     next_bc3:
    1267/     5B1 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    1268/     5B4 : 21 E6 06            	ld	hl, RST_TBLS
    1269/     5B7 : ED B1               	cpir
    1270/     5B9 : 20 0B               	jr	nz, next_bc4		; not RST p
    1271/     5BB :                     
    1272/     5BB :                     	; RST p
    1273/     5BB :                     	; can't trace: skip trace
    1274/     5BB :                     	; trace operation:
    1275/     5BB :                     	;   ea = *REGPC; *(ea+1) = TC;
    1276/     5BB :                     ;	ld	hl, RST_DMSG
    1277/     5BB :                     ;	call	STROUT		; message out "DETECT RST OPCODE"
    1278/     5BB : 0E 01               	ld	c, 1		; first TC point
    1279/     5BD : CD 72 06            	call	insBRK_1op
    1280/     5C0 : DA 51 06            	jp	c, err_trace_seq
    1281/     5C3 :                     	
    1282/     5C3 : C3 4E 06            	jp	END_INS_TC
    1283/     5C6 :                     
    1284/     5C6 :                     ;RST_DMSG:
    1285/     5C6 :                     ;	db	"(RST nn) WILL BE SKIPPED. AND TRACE NEXT OPCODE", CR, LF,00
    1286/     5C6 :                     
    1287/     5C6 :                     	; check code 0EDH
    1288/     5C6 :                     next_bc4:
    1289/     5C6 : FE ED               	cp	0EDH		; CODE 0EDH ?
    1290/     5C8 : 20 13               	jr	nz, next_bc5	; not 0EDH
    1291/     5CA :                     
    1292/     5CA : 23                  	inc	hl
    1293/     5CB : 7E                  	ld	a, (hl)
    1294/     5CC : FE 45               	cp	45H		; RETN?
    1295/     5CE : 28 04               	jr	z, next_bc6	; yes, RETN
    1296/     5D0 : FE 4D               	cp	4DH		; RETI?
    1297/     5D2 : 20 09               	jr	nz, next_bc5	; not RETN
    1298/     5D4 :                     
    1299/     5D4 :                     	; trace operation:
    1300/     5D4 :                     	;   ea = *REGSP; *ea = TC;
    1301/     5D4 :                     next_bc6:
    1302/     5D4 : 0E 01               	ld	c, 1		; first TC point
    1303/     5D6 : CD 92 06            	call	insBRK_sp
    1304/     5D9 : 38 76               	jr	c, err_trace_seq
    1305/     5DB : 18 71               	jr	END_INS_TC
    1306/     5DD :                     
    1307/     5DD :                     	; check JP (HL)
    1308/     5DD :                     next_bc5:
    1309/     5DD : 2A 18 BF            	ld	hl, (tmpT)
    1310/     5E0 : 7E                  	ld	a, (hl)
    1311/     5E1 :                     
    1312/     5E1 : FE E9               	cp	0E9H		; JP (HL) ?
    1313/     5E3 : 20 0C               	jr	nz, next_bc7	; not JP (HL)
    1314/     5E5 :                     
    1315/     5E5 :                     	; JP (HL)
    1316/     5E5 :                     	; trace operation:
    1317/     5E5 :                     	;   ea = *REGHL; *ea = TC;
    1318/     5E5 : 2A E2 BE            	ld	hl, (REGHL)
    1319/     5E8 :                     djphl:
    1320/     5E8 : 0E 01               	ld	c, 1		; first TC point
    1321/     5EA : CD 9F 06            	call	inadr_chk_and_wrt
    1322/     5ED : 38 62               	jr	c, err_trace_seq
    1323/     5EF : 18 5D               	jr	END_INS_TC
    1324/     5F1 :                     
    1325/     5F1 :                     	; check JP (IX)
    1326/     5F1 :                     next_bc7:
    1327/     5F1 : FE DD               	cp	0DDH		; 1st OPOCDE 0DDH ?
    1328/     5F3 : 20 0B               	jr	nz, next_bc8	; no 0DDH
    1329/     5F5 : 23                  	inc	hl
    1330/     5F6 : 7E                  	ld	a, (hl)
    1331/     5F7 : FE E9               	cp	0E9H		; JP (IX) ?
    1332/     5F9 : 20 05               	jr	nz, next_bc8	; not JP (IX)
    1333/     5FB :                     
    1334/     5FB :                     	; JP (IX)
    1335/     5FB :                     	; trace operation:
    1336/     5FB :                     	;   ea = *REGIX; *ea = TC;
    1337/     5FB : 2A EC BE            	ld	hl, (REGIX)
    1338/     5FE : 18 E8               	jr	djphl
    1339/     600 :                     
    1340/     600 :                     	; check JP (IY)
    1341/     600 :                     next_bc8:
    1342/     600 : 2A 18 BF            	ld	hl, (tmpT)
    1343/     603 : 7E                  	ld	a, (hl)
    1344/     604 :                     
    1345/     604 : FE FD               	cp	0FDH		; 1st OPOCDE 0FDH ?
    1346/     606 : 20 0B               	jr	nz, next_bc9	; no 0FDH
    1347/     608 : 23                  	inc	hl
    1348/     609 : 7E                  	ld	a, (hl)
    1349/     60A : FE E9               	cp	0E9H		; JP (IX) ?
    1350/     60C : 20 05               	jr	nz, next_bc9	; not JP (IX)
    1351/     60E :                     
    1352/     60E :                     	; JP (IY)
    1353/     60E :                     	; trace operation:
    1354/     60E :                     	;   ea = *REGIY; *ea = TC;
    1355/     60E : 2A EE BE            	ld	hl, (REGIY)
    1356/     611 : 18 D5               	jr	djphl
    1357/     613 :                     
    1358/     613 :                     	; check JR relative
    1359/     613 :                     next_bc9:
    1360/     613 : 2A 18 BF            	ld	hl, (tmpT)
    1361/     616 : 7E                  	ld	a, (hl)
    1362/     617 : FE 18               	cp	18H		; JR relative ?
    1363/     619 : 20 0C               	jr	nz, next_bc10	; not JR relative
    1364/     61B :                     
    1365/     61B :                     	; JR Relative
    1366/     61B :                     	; trace operation:
    1367/     61B :                     	;   ea = *REGPC; *(ea + 2 + *(ea+1)) = TC;
    1368/     61B : 0E 01               	ld	c, 1		; first TC point
    1369/     61D : CD 65 06            	call	Rel_adr_c
    1370/     620 : CD 9F 06            	call	inadr_chk_and_wrt
    1371/     623 : 38 2C               	jr	c, err_trace_seq
    1372/     625 : 18 27               	jr	END_INS_TC
    1373/     627 :                     
    1374/     627 :                     	; check JP literal
    1375/     627 :                     next_bc10:
    1376/     627 : FE C3               	cp	0C3H		; JP literal ?
    1377/     629 : 20 09               	jr	nz, next_bc11	; not JP literal
    1378/     62B :                     
    1379/     62B :                     	; JP literal
    1380/     62B :                     	; trace operation:
    1381/     62B :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1382/     62B : 0E 01               	ld	c, 1		; first TC point
    1383/     62D : CD 86 06            	call	insBRK_brp
    1384/     630 : 38 1F               	jr	c, err_trace_seq
    1385/     632 : 18 1A               	jr	END_INS_TC
    1386/     634 :                     
    1387/     634 :                     	; check call literal
    1388/     634 :                     next_bc11:
    1389/     634 : FE CD               	cp	0CDH		; CALL literal ?
    1390/     636 : C2 EE 06            	jp	nz, INS2	; no, check not branch opcode 
    1391/     639 :                     
    1392/     639 :                     	; CALL literal
    1393/     639 :                     	; trace operation:
    1394/     639 :                     	; TM_mode = 'I'
    1395/     639 :                     	;   ea = *REGPC; *((short *)(ea+1)) = TC;
    1396/     639 :                     	; TM_mode = 'S'
    1397/     639 :                     	;   2. ea = *REGPC; *(ea+3) = TC;
    1398/     639 :                     
    1399/     639 : 0E 01               	ld	c, 1		; first TC point
    1400/     63B : 3A 15 BF            	ld	a, (TM_mode)
    1401/     63E : FE 53               	cp	'S'
    1402/     640 : 28 07               	jr	z, next_bc111	; yes, TM_mode='S'
    1403/     642 :                     
    1404/     642 :                     	; TM_mode = 'I'
    1405/     642 :                     	; ea = *REGPC; *((char *)(ea+1)) = TC;
    1406/     642 : CD 86 06            	call	insBRK_brp
    1407/     645 : 38 0A               	jr	c, err_trace_seq
    1408/     647 : 18 05               	jr	END_INS_TC
    1409/     649 :                     
    1410/     649 :                     	; TM_mode = 'S'
    1411/     649 :                     	; ea = *REGPC; *(ea+3) = TC;
    1412/     649 :                     next_bc111:
    1413/     649 : CD 7C 06            	call	insBRK_3op
    1414/     64C : 38 03               	jr	c, err_trace_seq
    1415/     64E :                     
    1416/     64E :                     END_INS_TC:
    1417/     64E : C3 D6 14            	jp	G0	; go, trace operation
    1418/     651 :                     
    1419/     651 :                     err_trace_seq:
    1420/     651 : 21 5B 06            	ld	hl, terr_msg
    1421/     654 : CD 23 26            	call	STROUT
    1422/     657 : C3 BD 01            	JP	WSTART
    1423/     65A : FF                  	rst	38h
    1424/     65B :                     ;	
    1425/     65B : 41 64 72 20 45 52   terr_msg:	db	"Adr ERR", CR, LF, 00H
              661 : 52 0D 0A 00       
    1426/     665 :                     
    1427/     665 :                     ;--------------------------------------
    1428/     665 :                     ; 2 byte machine code branch
    1429/     665 :                     ; - 2nd byte is Relative address
    1430/     665 :                     ; - input hl : opecode address
    1431/     665 :                     ; - output hl : target address
    1432/     665 :                     ;--------------------------------------
    1433/     665 :                     Rel_adr_c:
    1434/     665 : 23                  	inc	hl
    1435/     666 : 5E                  	ld	e, (hl)		; e = 2nd operand
    1436/     667 : 23                  	inc	hl		; hl = PC + 2
    1437/     668 : 16 FF               	ld	d, 0ffh
    1438/     66A : CB 7B               	bit	7, e		; test msb bit
    1439/     66C : 20 02               	jr	nz, exp_msb	; 
    1440/     66E : 16 00               	ld	d, 0
    1441/     670 :                     exp_msb:
    1442/     670 : 19                  	add	hl, de
    1443/     671 : C9                  	ret
    1444/     672 :                     
    1445/     672 :                     ;--------------------------------------
    1446/     672 :                     ; 1 byte op code, insert TC
    1447/     672 :                     ; ea = *REGPC; *(ea+1) = TC
    1448/     672 :                     ;--------------------------------------
    1449/     672 :                     insBRK_1op:
    1450/     672 :                     ;	ld	hl, (REGPC)
    1451/     672 : 2A 18 BF            	ld	hl, (tmpT)
    1452/     675 : 18 0A               	jr	ib1
    1453/     677 :                     	
    1454/     677 :                     ;--------------------------------------
    1455/     677 :                     ; 2 byte op code, insert TC
    1456/     677 :                     ; ea = *REGPC; *(ea+2) = TC
    1457/     677 :                     ;--------------------------------------
    1458/     677 :                     insBRK_2op:
    1459/     677 :                     ;	ld	hl, (REGPC)
    1460/     677 : 2A 18 BF            	ld	hl, (tmpT)
    1461/     67A : 18 04               	jr	ib2
    1462/     67C :                     	
    1463/     67C :                     ;--------------------------------------
    1464/     67C :                     ; 3 byte op code, insert TC
    1465/     67C :                     ; ea = *REGPC; *(ea+3) = TC;
    1466/     67C :                     ;--------------------------------------
    1467/     67C :                     insBRK_3op:
    1468/     67C :                     ;	ld	hl, (REGPC)
    1469/     67C : 2A 18 BF            	ld	hl, (tmpT)
    1470/     67F :                     ib3:
    1471/     67F : 23                  	inc	hl
    1472/     680 :                     ib2:
    1473/     680 : 23                  	inc	hl
    1474/     681 :                     ib1:
    1475/     681 : 23                  	inc	hl
    1476/     682 : CD 9F 06            	call	inadr_chk_and_wrt
    1477/     685 : C9                  	ret
    1478/     686 :                     
    1479/     686 :                     ;--------------------------------------
    1480/     686 :                     ; 3 byte op code, insert TC in branch point
    1481/     686 :                     ; ea = *REGPC; *((char *)(ea+1)) = TC;
    1482/     686 :                     ;--------------------------------------
    1483/     686 :                     insBRK_brp:
    1484/     686 :                     ;	ld	hl, (REGPC)
    1485/     686 : 2A 18 BF            	ld	hl, (tmpT)
    1486/     689 : 23                  	inc	hl
    1487/     68A : 5E                  	ld	e, (hl)
    1488/     68B : 23                  	inc	hl
    1489/     68C : 56                  	ld	d, (hl)
    1490/     68D : EB                  	ex	de,  hl
    1491/     68E : CD 9F 06            	call	inadr_chk_and_wrt
    1492/     691 : C9                  	ret
    1493/     692 :                     
    1494/     692 :                     ;--------------------------------------
    1495/     692 :                     ; insert TC at SP
    1496/     692 :                     ; ea = *REGSP; *ea = TC;
    1497/     692 :                     ;--------------------------------------
    1498/     692 :                     insBRK_sp:
    1499/     692 : ED 5B F0 BE         	ld	de, (REGSP)
    1500/     696 : 1A                  	ld	a, (de)
    1501/     697 : 6F                  	ld	l, a
    1502/     698 : 13                  	inc	de
    1503/     699 : 1A                  	ld	a, (de)
    1504/     69A : 67                  	ld	h, a		; hl = *sp
    1505/     69B : CD 9F 06            	call	inadr_chk_and_wrt
    1506/     69E : C9                  	ret
    1507/     69F :                     
    1508/     69F :                     ;--------------------------------------
    1509/     69F :                     ; check (HL) is RAM AREA
    1510/     69F :                     ; insert Trace code at (HL)
    1511/     69F :                     ;--------------------------------------
    1512/     69F :                     inadr_chk_and_wrt:
    1513/     69F : 7C                  	ld	a, h
    1514/     6A0 :                     
    1515/     6A0 : FE 80               	cp	RAM_B >> 8		; 80H
    1516/     6A2 : 38 23               	jr	c, NO_RAM_AREA
    1517/     6A4 : FE BF               	cp	RAM_E >> 8		; 8FH
    1518/     6A6 : 30 1F               	jr	nc, NO_RAM_AREA
    1519/     6A8 :                     
    1520/     6A8 : 79                  	ld	a, c
    1521/     6A9 : FE 01               	cp	1		;first save?
    1522/     6AB : 20 0D               	jr	nz, icka1
    1523/     6AD : 11 F6 BE            	ld	de, tpt1_f
    1524/     6B0 : 12                  	ld	(de), a		; set trace ON
    1525/     6B1 : 22 F8 BE            	ld	(tpt1_adr), hl
    1526/     6B4 : 7E                  	ld	a, (hl)		; get opcode
    1527/     6B5 : 32 F7 BE            	ld	(tpt1_op), a	; save opcode
    1528/     6B8 : 18 0B               	jr	icka_end
    1529/     6BA :                     icka1:
    1530/     6BA : 11 FA BE            	ld	de, tpt2_f
    1531/     6BD : 12                  	ld	(de), a		; set trace ON
    1532/     6BE : 22 FC BE            	ld	(tpt2_adr), hl
    1533/     6C1 : 7E                  	ld	a, (hl)		; get opcode
    1534/     6C2 : 32 FB BE            	ld	(tpt2_op), a	; save opcode
    1535/     6C5 :                     icka_end:
    1536/     6C5 : AF                  	xor	a
    1537/     6C6 : C9                  	ret
    1538/     6C7 :                     
    1539/     6C7 :                     NO_RAM_AREA:
    1540/     6C7 : 37                  	SCF
    1541/     6C8 : C9                  	ret
    1542/     6C9 :                     	
    1543/     6C9 :                     
    1544/     6C9 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1545/     6C9 :                     ; 2 insertion TC TABLE
    1546/     6C9 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1547/     6C9 :                     ;
    1548/     6C9 :                     ; 1 byte machine code: branch (RET CC)
    1549/     6C9 :                     RETCC_TBLS:
    1550/     6C9 : C0                  	DB	0C0H	; RET	NZ
    1551/     6CA : C8                  	DB	0C8H	; RET	Z
    1552/     6CB : D0                  	DB	0D0H	; RET	NC
    1553/     6CC : D8                  	DB	0D8H	; RET	C
    1554/     6CD : E0                  	DB	0E0H	; RET	PO
    1555/     6CE : E8                  	DB	0E8H	; RET	PE
    1556/     6CF : F0                  	DB	0F0H	; RET	P
    1557/     6D0 : F8                  	DB	0F8H	; RET	M
    1558/     6D1 :                     RETCC_TBLE:
    1559/     6D1 :                     
    1560/     6D1 :                     ; 2 byte machine code: branch (JR CC, Relative)
    1561/     6D1 :                     JRCC_TBLS:
    1562/     6D1 : 10                  	DB	10H	; DJNZ	$
    1563/     6D2 :                     JRCC_TBLS1:
    1564/     6D2 : 20                  	DB	20H	; JR	NZ,$
    1565/     6D3 : 28                  	DB	28H	; JR	Z,$
    1566/     6D4 : 30                  	DB	30H	; JR	NC,$
    1567/     6D5 : 38                  	DB	38H	; JR	C,$
    1568/     6D6 :                     JRCC_TBLE:
    1569/     6D6 :                     
    1570/     6D6 :                     ; 3 byte machine code: branch (JP CC, 16bit literal)
    1571/     6D6 :                     JPCC_TBLS:
    1572/     6D6 : C2                  	DB	0C2H	; JP	NZ,1234H
    1573/     6D7 : CA                  	DB	0CAH	; JP	Z,1234H
    1574/     6D8 : D2                  	DB	0D2H	; JP	NC,1234H
    1575/     6D9 : DA                  	DB	0DAH	; JP	C,1234H
    1576/     6DA : E2                  	DB	0E2H	; JP	PO,1234H
    1577/     6DB : EA                  	DB	0EAH	; JP	PE,1234H
    1578/     6DC : F2                  	DB	0F2H	; JP	P,1234H
    1579/     6DD : FA                  	DB	0FAH	; JP	M,1234H
    1580/     6DE :                     JPCC_TBLE:
    1581/     6DE :                     
    1582/     6DE :                     ; (call 16bit literal)
    1583/     6DE :                     CLCC_TBLS:
    1584/     6DE : C4                  	DB	0C4H	; CALL	NZ,1234H
    1585/     6DF : CC                  	DB	0CCH	; CALL	Z,1234H
    1586/     6E0 : D4                  	DB	0D4H	; CALL	NC,1234H
    1587/     6E1 : DC                  	DB	0DCH	; CALL	C,1234H
    1588/     6E2 : E4                  	DB	0E4H	; CALL	PO,1234H
    1589/     6E3 : EC                  	DB	0ECH	; CALL	PE,1234H
    1590/     6E4 : F4                  	DB	0F4H	; CALL	P,1234H
    1591/     6E5 : FC                  	DB	0FCH	; CALL	M,1234H
    1592/     6E6 :                     CLCC_TBLE:
    1593/     6E6 :                     
    1594/     6E6 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1595/     6E6 :                     ; 1 insertion TC TABLE
    1596/     6E6 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;
    1597/     6E6 :                     
    1598/     6E6 :                     ; restart
    1599/     6E6 :                     RST_TBLS:
    1600/     6E6 : C7                  	DB	0C7H	; RST	00H
    1601/     6E7 : CF                  	DB	0CFH	; RST	08H
    1602/     6E8 : D7                  	DB	0D7H	; RST	10H
    1603/     6E9 : DF                  	DB	0DFH	; RST	18H
    1604/     6EA : E7                  	DB	0E7H	; RST	20H
    1605/     6EB : EF                  	DB	0EFH	; RST	28H
    1606/     6EC : F7                  	DB	0F7H	; RST	30H
    1607/     6ED : FF                  	DB	0FFH	; RST	38H
    1608/     6EE :                     RST_TBLE:
    1609/     6EE :                     
    1610/     6EE :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1611/     6EE :                     ;;;
    1612/     6EE :                     ;;; machine code check(except branch)
    1613/     6EE :                     ;;;
    1614/     6EE :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1615/     6EE :                     INS2:
    1616/     6EE :                     
    1617/     6EE :                     	; 2byte machine code search
    1618/     6EE : 01 12 00            	ld	bc, TWO_OPTBL_E - TWO_OPTBL
    1619/     6F1 : 21 87 07            	ld	hl, TWO_OPTBL
    1620/     6F4 : ED B1               	cpir
    1621/     6F6 : CA 62 07            	jp	z, meet_op2
    1622/     6F9 :                     
    1623/     6F9 :                     	; 3byte machine code search
    1624/     6F9 : 01 08 00            	ld	bc, THREE_OPTBL_E - THREE_OPTBL
    1625/     6FC : 21 99 07            	ld	hl, THREE_OPTBL
    1626/     6FF : ED B1               	cpir
    1627/     701 : CA 6D 07            	jp	z, meet_op3
    1628/     704 :                     
    1629/     704 :                     	; check 0CBH
    1630/     704 :                     	
    1631/     704 :                     	; readjust hl
    1632/     704 : 2A 18 BF            	ld	hl, (tmpT)
    1633/     707 :                     
    1634/     707 : FE CB               	cp	0CBH		; opecode 0CBH?
    1635/     709 : 28 57               	jr	z, meet_op2
    1636/     70B :                     	
    1637/     70B :                     	; check 0DDH
    1638/     70B : FE DD               	cp	0ddh		; opecode 0DDH?
    1639/     70D : 28 0A               	jr	z, meet_dd
    1640/     70F :                     	
    1641/     70F :                     	; check 0EDH
    1642/     70F : FE ED               	cp	0edh		; opecode 0EDH?
    1643/     711 : 28 28               	jr	z, meet_ed
    1644/     713 :                     
    1645/     713 :                     	; check 0FDH
    1646/     713 : FE FD               	cp	0fdh		; opecode 0FDH?
    1647/     715 : 28 02               	jr	z, meet_dd
    1648/     717 :                     
    1649/     717 :                     	; 1byte machine code
    1650/     717 : 18 3E               	jr	meet_op1
    1651/     719 :                     
    1652/     719 :                     	; opecode 0DDh
    1653/     719 :                     meet_dd:
    1654/     719 : 23                  	inc	hl
    1655/     71A : 7E                  	ld	a, (hl)	
    1656/     71B : FE CB               	cp	0cbh		; 2nd 0CBH?
    1657/     71D : 28 59               	jr	z, meet_op4
    1658/     71F : FE 21               	cp	21h		; 2nd 21H?
    1659/     721 : 28 55               	jr	z, meet_op4
    1660/     723 : FE 22               	cp	22h		; 2nd 22H?
    1661/     725 : 28 51               	jr	z, meet_op4
    1662/     727 : FE 2A               	cp	2ah		; 2nd 2AH?
    1663/     729 : 28 4D               	jr	z, meet_op4
    1664/     72B : FE 36               	cp	36h		; 2nd 36H?
    1665/     72D : 28 49               	jr	z, meet_op4
    1666/     72F :                     
    1667/     72F :                     	; 2nd code search
    1668/     72F : 01 0A 00            	ld	bc, DD_2NDTBL_E - DD_2NDTBL
    1669/     732 : 21 A1 07            	ld	hl, DD_2NDTBL
    1670/     735 : ED B1               	cpir
    1671/     737 : 28 29               	jr	z, meet_op2
    1672/     739 : 18 32               	jr	meet_op3
    1673/     73B :                     
    1674/     73B :                     meet_ed:
    1675/     73B : 23                  	inc	hl
    1676/     73C : 7E                  	ld	a, (hl)	
    1677/     73D : FE 43               	cp	43h		; 2nd 43H?
    1678/     73F : 28 37               	jr	z, meet_op4
    1679/     741 : FE 4B               	cp	4bh		; 2nd 4BH?
    1680/     743 : 28 33               	jr	z, meet_op4
    1681/     745 : FE 53               	cp	53h		; 2nd 53H?
    1682/     747 : 28 2F               	jr	z, meet_op4
    1683/     749 : FE 5B               	cp	5bh		; 2nd 5BH?
    1684/     74B : 28 2B               	jr	z, meet_op4
    1685/     74D : FE 73               	cp	73h		; 2nd 73H?
    1686/     74F : 28 27               	jr	z, meet_op4
    1687/     751 : FE 7B               	cp	7bh		; 2nd 7BH?
    1688/     753 : 28 23               	jr	z, meet_op4
    1689/     755 : 18 0B               	jr	meet_op2
    1690/     757 :                     
    1691/     757 :                     ; 1 machine code
    1692/     757 :                     meet_op1:
    1693/     757 : 0E 01               	ld	c, 1
    1694/     759 : CD 72 06            	call	insBRK_1op
    1695/     75C : DA 51 06            	jp	c, err_trace_seq
    1696/     75F : C3 4E 06            	jp	END_INS_TC
    1697/     762 :                     
    1698/     762 :                     ; 2 machine code
    1699/     762 :                     meet_op2:
    1700/     762 : 0E 01               	ld	c, 1
    1701/     764 : CD 77 06            	call	insBRK_2op
    1702/     767 : DA 51 06            	jp	c, err_trace_seq
    1703/     76A : C3 4E 06            	jp	END_INS_TC
    1704/     76D :                     ; 3 machine code
    1705/     76D :                     meet_op3:
    1706/     76D : 0E 01               	ld	c, 1
    1707/     76F : CD 7C 06            	call	insBRK_3op
    1708/     772 : DA 51 06            	jp	c, err_trace_seq
    1709/     775 : C3 4E 06            	jp	END_INS_TC
    1710/     778 :                     
    1711/     778 :                     ; 4 machine codee
    1712/     778 :                     meet_op4:
    1713/     778 : 0E 01               	ld	c, 1
    1714/     77A :                     ;	ld	hl, (REGPC)
    1715/     77A : 2A 18 BF            	ld	hl, (tmpT)
    1716/     77D : 23                  	inc	hl
    1717/     77E : CD 7F 06            	call	ib3
    1718/     781 : DA 51 06            	jp	c, err_trace_seq
    1719/     784 : C3 4E 06            	jp	END_INS_TC
    1720/     787 :                     
    1721/     787 :                     TWO_OPTBL:	; second byte is 8bitliteral[nn]
    1722/     787 :                     ld_r_nn_s:
    1723/     787 : 06                  	DB	06h	; LD	B,nn
    1724/     788 : 0E                  	DB	0Eh	; LD	C,nn
    1725/     789 : 16                  	DB	16h	; LD	D,nn
    1726/     78A : 1E                  	DB	1Eh	; LD	E,nn
    1727/     78B : 26                  	DB	26h	; LD	H,nn
    1728/     78C : 2E                  	DB	2Eh	; LD	L,nn
    1729/     78D : 36                  	DB	36h	; LD	(HL),nn
    1730/     78E : 3E                  	DB	3Eh	; LD	A,nn
    1731/     78F :                     ld_r_nn_e:
    1732/     78F :                     
    1733/     78F :                     log_op_s:
    1734/     78F : C6                  	DB	0C6h	; ADD	A,nn
    1735/     790 : CE                  	DB	0CEh	; ADC	A,nn
    1736/     791 : DE                  	DB	0DEh	; SBC	A,nn
    1737/     792 : D6                  	DB	0D6h	; SUB	nn
    1738/     793 : E6                  	DB	0E6h	; AND	nn
    1739/     794 : EE                  	DB	0EEh	; XOR	nn
    1740/     795 : F6                  	DB	0F6h	; OR	nn
    1741/     796 : FE                  	DB	0FEh	; CP	nn
    1742/     797 : DB                  	DB	0DBh	; IN	A,(nn)
    1743/     798 : D3                  	DB	0D3h	; OUT	(nn),A
    1744/     799 :                     log_op_e:
    1745/     799 :                     TWO_OPTBL_E:
    1746/     799 :                     
    1747/     799 :                     THREE_OPTBL:	; 2nd, 3rd byte is 16bitliteral[nnnn]
    1748/     799 : 01                  	DB	01h	; LD	BC,nnnn
    1749/     79A : 11                  	DB	11h	; LD	DE,nnnn
    1750/     79B : 21                  	DB	21h	; LD	HL,nnnn
    1751/     79C : 31                  	DB	31h	; LD	SP,nnnn
    1752/     79D :                     THREE_OPTBLe
    1753/     79D : 22                  	DB	22h	; LD	(nnnn),HL
    1754/     79E : 32                  	DB	32h	; LD	(nnnn),A
    1755/     79F :                     
    1756/     79F : 2A                  	DB	2Ah	; LD	HL,(nnnn)
    1757/     7A0 : 3A                  	DB	3Ah	; LD	A,(nnnn)
    1758/     7A1 :                     THREE_OPTBL_E:
    1759/     7A1 :                     
    1760/     7A1 :                     DD_2NDTBL:
    1761/     7A1 : 09                  	DB	09h	; ADD	IX,BC
    1762/     7A2 : 19                  	DB	19h	; ADD	IX,DE
    1763/     7A3 : 29                  	DB	29h	; ADD	IX,IX
    1764/     7A4 : 39                  	DB	39h	; ADD	IX,SP
    1765/     7A5 :                     DD_2NDTBL1:
    1766/     7A5 : 23                  	DB	23h	; INC	IX
    1767/     7A6 : 2B                  	DB	2Bh	; DEC	IX
    1768/     7A7 : E5                  	DB	0E5h	; PUSH	IX
    1769/     7A8 : E1                  	DB	0E1h	; POP	IX
    1770/     7A9 :                     DD_2NDTBL2:
    1771/     7A9 : E3                  	DB	0E3h	; EX	(SP),IX
    1772/     7AA : F9                  	DB	0F9h	; LD	SP,IX
    1773/     7AB :                     DD_2NDTBL_E:
    1774/     7AB :                     
    1775/     7AB :                     ;;; 
    1776/     7AB :                     ;;; Dump memory
    1777/     7AB :                     ;;; 
    1778/     7AB :                     
    1779/     7AB :                     DUMP:
    1780/     7AB : 23                  	INC	HL
    1781/     7AC : 7E                  	LD	A,(HL)
    1782/     7AD : FE 49               	cp	'I'
    1783/     7AF : CA B4 08            	JP	Z,disassemble
    1784/     7B2 : CD 0D 27            	CALL	SKIPSP
    1785/     7B5 : CD 1D 27            	CALL	RDHEX		; 1st arg.
    1786/     7B8 : 38 06               	jr	c, DP0
    1787/     7BA :                     	;; 1st arg. found
    1788/     7BA : ED 53 D0 BE         	LD	(DSADDR),DE
    1789/     7BE : 18 10               	jr	dp00
    1790/     7C0 :                     
    1791/     7C0 :                     DP0:	;; No arg. chk
    1792/     7C0 :                     
    1793/     7C0 : E5                  	push	hl
    1794/     7C1 : 2A D0 BE            	LD	HL,(DSADDR)
    1795/     7C4 : 01 80 00            	LD	BC,128
    1796/     7C7 : 09                  	ADD	HL,BC
    1797/     7C8 : 22 D2 BE            	LD	(DEADDR),HL
    1798/     7CB : E1                  	pop	hl
    1799/     7CC : 7E                  	LD	A,(HL)
    1800/     7CD : B7                  	OR	A
    1801/     7CE : 28 2B               	JR	z, DPM_C	; no arg.
    1802/     7D0 :                     
    1803/     7D0 :                     dp00:
    1804/     7D0 : CD 0D 27            	CALL	SKIPSP
    1805/     7D3 : 7E                  	LD	A,(HL)
    1806/     7D4 : FE 2C               	CP	','
    1807/     7D6 : 28 0D               	JR	Z,DP1
    1808/     7D8 : B7                  	OR	A
    1809/     7D9 : C2 09 02            	JP	NZ,ERR
    1810/     7DC :                     
    1811/     7DC :                     	;; No 2nd arg.
    1812/     7DC :                     
    1813/     7DC : 21 80 00            	LD	HL,128
    1814/     7DF : 19                  	ADD	HL,DE
    1815/     7E0 : 22 D2 BE            	LD	(DEADDR),HL
    1816/     7E3 : 18 16               	JR	DPM_C
    1817/     7E5 :                     
    1818/     7E5 :                     DP1:
    1819/     7E5 : 23                  	INC	HL
    1820/     7E6 : CD 0D 27            	CALL	SKIPSP
    1821/     7E9 : CD 1D 27            	CALL	RDHEX
    1822/     7EC : DA 09 02            	jp	c, ERR
    1823/     7EF : CD 0D 27            	CALL	SKIPSP
    1824/     7F2 : B7                  	OR	A
    1825/     7F3 : C2 09 02            	jp	nz, ERR
    1826/     7F6 : 13                  	INC	DE
    1827/     7F7 : ED 53 D2 BE         	LD	(DEADDR),DE
    1828/     7FB :                     DPM_C:
    1829/     7FB : CD 01 08            	CALL	DPM
    1830/     7FE : C3 BD 01            	JP	WSTART
    1831/     801 :                     
    1832/     801 :                     	;; DUMP main
    1833/     801 :                     DPM:
    1834/     801 : 2A D0 BE            	LD	HL,(DSADDR)
    1835/     804 : 3E F0               	LD	A,0F0H
    1836/     806 : A5                  	AND	L
    1837/     807 : 6F                  	LD	L,A
    1838/     808 : AF                  	XOR	A
    1839/     809 : 32 D4 BE            	LD	(DSTATE),A
    1840/     80C :                     DPM0:
    1841/     80C : E5                  	PUSH	HL
    1842/     80D : CD 2E 08            	CALL	DPL
    1843/     810 : E1                  	POP	HL
    1844/     811 : 01 10 00            	LD	BC,16
    1845/     814 : 09                  	ADD	HL,BC
    1846/     815 : CD 8A 2E            	CALL	CONST
    1847/     818 : 20 0E               	JR	NZ,DPM1
    1848/     81A : 3A D4 BE            	LD	A,(DSTATE)
    1849/     81D : FE 02               	CP	2
    1850/     81F : 38 EB               	JR	C,DPM0
    1851/     821 : 2A D2 BE            	LD	HL,(DEADDR)
    1852/     824 : 22 D0 BE            	LD	(DSADDR),HL
    1853/     827 : C9                  	RET
    1854/     828 :                     DPM1:
    1855/     828 : 22 D0 BE            	LD	(DSADDR),HL
    1856/     82B : C3 40 2E            	JP	CONIN
    1857/     82E :                     
    1858/     82E :                     DPL:
    1859/     82E :                     	;; DUMP line
    1860/     82E : CD 2C 26            	CALL	HEXOUT4
    1861/     831 : E5                  	PUSH	HL
    1862/     832 : 21 0B 2C            	LD	HL,DSEP0
    1863/     835 : CD 23 26            	CALL	STROUT
    1864/     838 : E1                  	POP	HL
    1865/     839 : DD 21 CE BF         	LD	IX,INBUF
    1866/     83D : 06 10               	LD	B,16
    1867/     83F :                     DPL0:
    1868/     83F : CD 68 08            	CALL	DPB
    1869/     842 : 10 FB               	DJNZ	DPL0
    1870/     844 :                     
    1871/     844 : 21 0E 2C            	LD	HL,DSEP1
    1872/     847 : CD 23 26            	CALL	STROUT
    1873/     84A :                     
    1874/     84A : 21 CE BF            	LD	HL,INBUF
    1875/     84D : 06 10               	LD	B,16
    1876/     84F :                     DPL1:
    1877/     84F : 7E                  	LD	A,(HL)
    1878/     850 : 23                  	INC	HL
    1879/     851 : FE 20               	CP	' '
    1880/     853 : 38 09               	JR	C,DPL2
    1881/     855 : FE 7F               	CP	7FH
    1882/     857 : 30 05               	JR	NC,DPL2
    1883/     859 : CD 8F 2E            	CALL	CONOUT
    1884/     85C : 18 05               	JR	DPL3
    1885/     85E :                     DPL2:
    1886/     85E : 3E 2E               	LD	A,'.'
    1887/     860 : CD 8F 2E            	CALL	CONOUT
    1888/     863 :                     DPL3:
    1889/     863 : 10 EA               	DJNZ	DPL1
    1890/     865 : C3 6C 26            	JP	CRLF
    1891/     868 :                     
    1892/     868 :                     DPB:	; Dump byte
    1893/     868 : 3E 20               	LD	A,' '
    1894/     86A : CD 8F 2E            	CALL	CONOUT
    1895/     86D : 3A D4 BE            	LD	A,(DSTATE)
    1896/     870 : B7                  	OR	A
    1897/     871 : 20 20               	JR	NZ,DPB2
    1898/     873 :                     	; Dump state 0
    1899/     873 : 3A D0 BE            	LD	A,(DSADDR)	; Low byte
    1900/     876 : BD                  	CP	L
    1901/     877 : 20 06               	JR	NZ,DPB0
    1902/     879 : 3A D1 BE            	LD	A,(DSADDR+1)	; High byte
    1903/     87C : BC                  	CP	H
    1904/     87D : 28 0F               	JR	Z,DPB1
    1905/     87F :                     DPB0:	; Still 0 or 2
    1906/     87F : 3E 20               	LD	A,' '
    1907/     881 : CD 8F 2E            	CALL	CONOUT
    1908/     884 : CD 8F 2E            	CALL	CONOUT
    1909/     887 : DD 77 00            	LD	(IX),A
    1910/     88A : 23                  	INC	HL
    1911/     88B : DD 23               	INC	IX
    1912/     88D : C9                  	RET
    1913/     88E :                     DPB1:	; Found start address
    1914/     88E : 3E 01               	LD	A,1
    1915/     890 : 32 D4 BE            	LD	(DSTATE),A
    1916/     893 :                     DPB2:
    1917/     893 : 3A D4 BE            	LD	A,(DSTATE)
    1918/     896 : FE 01               	CP	1
    1919/     898 : 20 E5               	JR	NZ,DPB0
    1920/     89A :                     	; Dump state 1
    1921/     89A : 7E                  	LD	A,(HL)
    1922/     89B : DD 77 00            	LD	(IX),A
    1923/     89E : CD 31 26            	CALL	HEXOUT2
    1924/     8A1 : 23                  	INC	HL
    1925/     8A2 : DD 23               	INC	IX
    1926/     8A4 : 3A D2 BE            	LD	A,(DEADDR)	; Low byte
    1927/     8A7 : BD                  	CP	L
    1928/     8A8 : C0                  	RET	NZ
    1929/     8A9 : 3A D3 BE            	LD	A,(DEADDR+1)	; High byte
    1930/     8AC : BC                  	CP	H
    1931/     8AD : C0                  	RET	NZ
    1932/     8AE :                     	; Found end address
    1933/     8AE : 3E 02               	LD	A,2
    1934/     8B0 : 32 D4 BE            	LD	(DSTATE),A
    1935/     8B3 : C9                  	RET
    1936/     8B4 :                     
    1937/     8B4 :                     ;;;
    1938/     8B4 :                     ;;; Disassemble
    1939/     8B4 :                     ;;; 
    1940/     8B4 :                     
    1941/     8B4 :                     
    1942/     8B4 :                     ; DI[<address>][,s<steps>|<end address>]
    1943/     8B4 :                     
    1944/     8B4 :                     disassemble:
    1945/     8B4 : 23                  	INC	HL
    1946/     8B5 : CD 0D 27            	CALL	SKIPSP
    1947/     8B8 : CD 1D 27            	CALL	RDHEX		; 1st arg.
    1948/     8BB : 30 14               	jr	nc, get_DI1
    1949/     8BD :                     
    1950/     8BD :                     di_nxt:
    1951/     8BD :                     	;; No arg. chk
    1952/     8BD : CD 0D 27            	CALL	SKIPSP
    1953/     8C0 : 7E                  	LD	A,(HL)
    1954/     8C1 : B7                  	OR	A
    1955/     8C2 : 20 13               	jr	NZ, chk_DI1	; ',' check
    1956/     8C4 :                     
    1957/     8C4 :                     ; No arg
    1958/     8C4 : 26 00               	ld	h, 0
    1959/     8C6 : 2E 0A               	ld	l, 10
    1960/     8C8 : 7D                  	ld	a, l
    1961/     8C9 : 32 3C BF            	ld	(dasm_stpf), a	; set step flag
    1962/     8CC : 22 3A BF            	ld	(dasm_ed), hl	; set 10 steps
    1963/     8CF : 18 33               	jr	DISASM_go
    1964/     8D1 :                     
    1965/     8D1 :                     ; 1st arg
    1966/     8D1 :                     get_DI1:
    1967/     8D1 : ED 53 3D BF         	ld	(dasm_adr), de	; save start address
    1968/     8D5 :                     ;	INC	HL
    1969/     8D5 : 18 E6               	jr	di_nxt
    1970/     8D7 :                     
    1971/     8D7 :                     chk_DI1:
    1972/     8D7 : FE 2C               	cp	','
    1973/     8D9 : C2 09 02            	jp	nz, ERR
    1974/     8DC :                     
    1975/     8DC :                     ; check 2nd arg
    1976/     8DC :                     
    1977/     8DC : 23                  	INC	HL
    1978/     8DD : CD 0D 27            	CALL	SKIPSP
    1979/     8E0 : FE 53               	cp	'S'
    1980/     8E2 : 20 12               	jr	nz, chk_stpDI
    1981/     8E4 :                     
    1982/     8E4 :                     ; step arg
    1983/     8E4 : 3E 01               	ld	a, 1
    1984/     8E6 : 32 3C BF            	ld	(dasm_stpf), a	; set step flag
    1985/     8E9 : 23                  	inc	hl
    1986/     8EA : CD 08 03            	call	GET_NUM		; get decimal number to binary
    1987/     8ED : DA 09 02            	jp	c, ERR
    1988/     8F0 : ED 43 3A BF         	ld	(dasm_ed), bc	; set steps
    1989/     8F4 : 18 0E               	jr	DISASM_go
    1990/     8F6 :                     
    1991/     8F6 :                     chk_stpDI:
    1992/     8F6 : CD 1D 27            	CALL	RDHEX		; 2nd arg.
    1993/     8F9 : DA 09 02            	jp	c, ERR
    1994/     8FC : ED 53 3A BF         	ld	(dasm_ed), de	; set end address
    1995/     900 : AF                  	xor	a
    1996/     901 : 32 3C BF            	ld	(dasm_stpf), a	; clear step flag
    1997/     904 :                     
    1998/     904 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    1999/     904 :                     ; operation Disassemble
    2000/     904 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2001/     904 :                     
    2002/     904 :                     DISASM_go:
    2003/     904 : CD 8A 2E            	call	CONST
    2004/     907 : 28 06               	jr	z, dis_go1
    2005/     909 : CD 40 2E            	call	CONIN		;discard key
    2006/     90C : C3 BD 01            	jp	WSTART		; exit disasm command
    2007/     90F :                     
    2008/     90F :                     dis_go1:
    2009/     90F :                     	; get opcode
    2010/     90F : CD 93 09            	call	dis_analysis
    2011/     912 : CD 58 09            	call	mk_adr_str	; conout address and machine code
    2012/     915 :                     				; *dasm_adr is next opcode address
    2013/     915 : 21 CE BF            	ld	hl, adr_mc_buf
    2014/     918 : CD 23 26            	call	STROUT		; conout disassemble strings
    2015/     91B :                     
    2016/     91B : 3A 3C BF            	ld	a, (dasm_stpf)
    2017/     91E : B7                  	or	a
    2018/     91F : 20 0E               	jr	nz, calc_dis_step
    2019/     921 :                     	
    2020/     921 :                     	; *dasm_adr > *dasm_ed ?, yes, finish
    2021/     921 : 2A 3A BF            	ld	hl, (dasm_ed)
    2022/     924 : ED 4B 3D BF         	ld	bc, (dasm_adr)
    2023/     928 : ED 42               	sbc	hl, bc
    2024/     92A : 30 D8               	jr	nc, DISASM_go
    2025/     92C : C3 BD 01            	jp	WSTART
    2026/     92F :                     
    2027/     92F :                     calc_dis_step:
    2028/     92F : 2A 3A BF            	ld	hl, (dasm_ed)
    2029/     932 : 2B                  	dec	hl
    2030/     933 : 22 3A BF            	ld	(dasm_ed), hl
    2031/     936 : 7C                  	ld	a, h
    2032/     937 : B5                  	or	l
    2033/     938 : 20 CA               	jr	nz, DISASM_go
    2034/     93A : C3 BD 01            	jp	WSTART
    2035/     93D :                     
    2036/     93D :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2037/     93D :                     ; Disassemble and maked strings to user buffer
    2038/     93D :                     ; input de : user buffer
    2039/     93D :                     ;       hl : disassemble address
    2040/     93D :                     ; output de : next MC address
    2041/     93D :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2042/     93D :                     get_disasm_st:
    2043/     93D : 22 3D BF            	ld	(dasm_adr), hl
    2044/     940 : D5                  	push	de
    2045/     941 : CD 93 09            	call	dis_analysis
    2046/     944 : CD 58 09            	call	mk_adr_str	; conout address and machine code
    2047/     947 : D1                  	pop	de
    2048/     948 : 21 CE BF            	ld	hl, adr_mc_buf
    2049/     94B : 01 2A 00            	ld	bc, dasm_be - dasm_bs
    2050/     94E : ED B0               	ldir
    2051/     950 : ED 5B 3D BF         	ld	de, (dasm_adr)
    2052/     954 : 3A 43 BF            	ld	a, (mc_Size)
    2053/     957 : C9                  	ret
    2054/     958 :                     
    2055/     958 :                     ;-------------------------------------------------
    2056/     958 :                     ; Make address and machine code at adr_mc_buf
    2057/     958 :                     ; "XXXX XX XX XX XX " (17bytes)
    2058/     958 :                     ;-------------------------------------------------
    2059/     958 :                     mk_adr_str:
    2060/     958 : 21 CE BF            	ld	hl, adr_mc_buf
    2061/     95B : ED 5B 3D BF         	ld	de, (dasm_adr)
    2062/     95F : CD 33 11            	call	hex4str		; address XXXX
    2063/     962 : CD C3 11            	call	ins_spcR
    2064/     965 : CD C3 11            	call	ins_spcR
    2065/     968 :                     
    2066/     968 : 06 04               	ld	b, 4
    2067/     96A : 3A 43 BF            	ld	a, (mc_Size)
    2068/     96D : 4F                  	ld	c, a
    2069/     96E :                     mas_1:
    2070/     96E : 1A                  	ld	a, (de)
    2071/     96F : 13                  	inc	de
    2072/     970 :                     
    2073/     970 : D5                  	push	de
    2074/     971 : 5F                  	ld	e, a
    2075/     972 : CD 3B 11            	call	hex2str		; MC XX
    2076/     975 : CD C3 11            	call	ins_spcR
    2077/     978 : D1                  	pop	de
    2078/     979 :                     
    2079/     979 : 05                  	dec	b
    2080/     97A : 28 0F               	jr	z, mas_3	; end
    2081/     97C : 0D                  	dec	c
    2082/     97D : 20 EF               	jr	nz, mas_1
    2083/     97F :                     
    2084/     97F :                     mas_2:	
    2085/     97F : CD C3 11            	call	ins_spcR
    2086/     982 : CD C3 11            	call	ins_spcR
    2087/     985 : CD C3 11            	call	ins_spcR
    2088/     988 : 05                  	dec	b
    2089/     989 : 20 F4               	jr	nz, mas_2
    2090/     98B :                     mas_3:
    2091/     98B : CD C3 11            	call	ins_spcR
    2092/     98E : ED 53 3D BF         	ld	(dasm_adr), de	; set next analysis address
    2093/     992 : C9                  	ret
    2094/     993 :                     
    2095/     993 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2096/     993 :                     ; dis assemble analysis
    2097/     993 :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2098/     993 :                     
    2099/     993 :                     dis_analysis:
    2100/     993 :                     
    2101/     993 :                     	; pre init string buffer
    2102/     993 :                     
    2103/     993 : 3E 01               	ld	a, 1
    2104/     995 : 32 43 BF            	ld	(mc_Size), a
    2105/     998 :                     
    2106/     998 : 11 92 12            	ld	de, LDstr	; insert LD string
    2107/     99B : CD 57 11            	call	mkopcstr
    2108/     99E :                     
    2109/     99E : 21 E9 BF            	ld	hl, dasm_OprStr
    2110/     9A1 : CD 83 11            	call	insPostStr	; CR, LF, 00h
    2111/     9A4 :                     
    2112/     9A4 : 2A 3D BF            	ld	hl, (dasm_adr)
    2113/     9A7 : 7E                  	ld	a, (hl)		; get opcode
    2114/     9A8 :                     
    2115/     9A8 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2116/     9A8 :                     	; analysys 1 byte MC
    2117/     9A8 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2118/     9A8 :                     
    2119/     9A8 :                     ;  check no operand
    2120/     9A8 :                     
    2121/     9A8 : 01 0D 00            	ld	bc, oth_1op_e - oth_1op_s
    2122/     9AB : 21 D6 11            	ld	hl, oth_1op_s
    2123/     9AE : ED B1               	cpir
    2124/     9B0 : 20 12               	jr	nz, chk_ld
    2125/     9B2 :                     
    2126/     9B2 :                     ;  no operand
    2127/     9B2 :                     
    2128/     9B2 : 21 E5 13            	ld	hl, oth_1op_tbl
    2129/     9B5 : CD D9 10            	call	get_strBufpoint
    2130/     9B8 : C3 57 11            	jp	mkopcstr
    2131/     9BB :                     
    2132/     9BB :                     get_r_num:
    2133/     9BB : E6 38               	and	38H
    2134/     9BD : 0F                  	rrca
    2135/     9BE : 0F                  	rrca
    2136/     9BF : 0F                  	rrca
    2137/     9C0 : 4F                  	ld	c, a
    2138/     9C1 : 06 00               	ld	b, 0		; bc ; register No.
    2139/     9C3 : C9                  	ret
    2140/     9C4 :                     ;
    2141/     9C4 :                     ; LD opecode
    2142/     9C4 :                     ;
    2143/     9C4 :                     
    2144/     9C4 :                     ; check LD "A,(BC)", "A,(DE)", "(BC),A", "(DE),A", "SP,HL"
    2145/     9C4 :                     
    2146/     9C4 :                     chk_ld:
    2147/     9C4 : FE 0A               	cp	0AH	; LD	A,(BC)
    2148/     9C6 : 28 19               	jr	z, ld_a_kbck
    2149/     9C8 : FE 1A               	cp	1AH	; LD	A,(DE)
    2150/     9CA : 28 23               	jr	z, ld_a_kdek
    2151/     9CC : FE 02               	cp	02H	; LD	(BC),A
    2152/     9CE : 28 24               	jr	z, ld_kbck_a
    2153/     9D0 : FE 12               	cp	12H	; LD	(DE),A
    2154/     9D2 : 28 29               	jr	z, ld_kdek_a
    2155/     9D4 : FE F9               	cp	0F9H	; LD	SP,HL
    2156/     9D6 : 20 2A               	jr	nz, chk_ld1
    2157/     9D8 :                     
    2158/     9D8 :                     ; LD SP, HL
    2159/     9D8 : 11 36 2E            	ld	de, RNSP
    2160/     9DB : CD AA 11            	call	mk_rcs		; "SP, "
    2161/     9DE : C3 7D 11            	jp	hl_crlf
    2162/     9E1 :                     	
    2163/     9E1 :                     ; LD A, (BC)
    2164/     9E1 :                     ld_a_kbck:
    2165/     9E1 : 11 F5 2D            	ld	de, RNBC
    2166/     9E4 :                     ld_a_kxxk:
    2167/     9E4 : D5                  	push	de
    2168/     9E5 : CD A7 11            	call	a_colon_sp	; "A, "
    2169/     9E8 : D1                  	pop	de
    2170/     9E9 : CD 91 11            	call	mk_krk		; "(BC)", "(DE)"
    2171/     9EC : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2172/     9EF :                     
    2173/     9EF :                     ; LD A, (DE)
    2174/     9EF :                     ld_a_kdek:
    2175/     9EF : 11 FC 2D            	ld	de, RNDE
    2176/     9F2 : 18 F0               	jr	ld_a_kxxk
    2177/     9F4 :                     
    2178/     9F4 :                     ; LD (BC), A
    2179/     9F4 :                     ld_kbck_a:
    2180/     9F4 : 11 F5 2D            	ld	de, RNBC
    2181/     9F7 :                     
    2182/     9F7 :                     ld_kxxk_a:
    2183/     9F7 : CD 99 11            	call	mk_krkcs	; "(BC), ", "(DE), "
    2184/     9FA : C3 72 11            	jp	a_crlf		; "A",CR,LF
    2185/     9FD :                     
    2186/     9FD :                     ; LD (DE), A
    2187/     9FD :                     ld_kdek_a:
    2188/     9FD : 11 FC 2D            	ld	de, RNDE
    2189/     A00 : 18 F5               	jr	ld_kxxk_a
    2190/     A02 :                     
    2191/     A02 :                     ; check other 1byte LD MC
    2192/     A02 :                     
    2193/     A02 :                     chk_ld1:
    2194/     A02 : FE 40               	cp	40h
    2195/     A04 : DA 9A 0A            	jp	c, chk_inc
    2196/     A07 : FE 80               	cp	80h
    2197/     A09 : 30 28               	jr	nc, chk_add
    2198/     A0B : FE 76               	cp	76h	; HALT?
    2199/     A0D : 20 06               	jr	nz, LD1op
    2200/     A0F :                     
    2201/     A0F : 11 95 12            	ld	de, HLTstr	; HALT string
    2202/     A12 : C3 57 11            	jp	mkopcstr	; de : next string buffer addr
    2203/     A15 :                     
    2204/     A15 :                     ; LD
    2205/     A15 :                     
    2206/     A15 :                     LD1op:
    2207/     A15 : CD BB 09            	call	get_r_num
    2208/     A18 : CD D6 10            	call	get_rstg_off
    2209/     A1B : 21 E9 BF            	ld	hl, dasm_OprStr
    2210/     A1E : CD AA 11            	call	mk_rcs		; "REG, "
    2211/     A21 :                     
    2212/     A21 :                     mk_2ndopr:
    2213/     A21 : ED 5B 3D BF         	ld	de, (dasm_adr)
    2214/     A25 : 1A                  	ld	a, (de)		; get opcode
    2215/     A26 : E6 07               	and	07h
    2216/     A28 : 4F                  	ld	c, a
    2217/     A29 : 06 00               	ld	b, 0
    2218/     A2B :                     
    2219/     A2B :                     mk_2ndopr1:
    2220/     A2B : E5                  	push	hl		; save copy buffer
    2221/     A2C : CD D6 10            	call	get_rstg_off
    2222/     A2F : E1                  	pop	hl		; copy buffer
    2223/     A30 : C3 80 11            	jp	cpstr_crlf	; "REG",CR,LF
    2224/     A33 :                     
    2225/     A33 :                     ; ADD 80H - 87H
    2226/     A33 :                     ; check ADD code
    2227/     A33 :                     
    2228/     A33 :                     chk_add:
    2229/     A33 : FE 88               	cp	88h
    2230/     A35 : 30 08               	jr	nc, chk_adc
    2231/     A37 :                     
    2232/     A37 :                     ; ADD
    2233/     A37 : CD 54 11            	call	add_opstr
    2234/     A3A : CD A7 11            	call	a_colon_sp
    2235/     A3D : 18 E2               	jr	mk_2ndopr
    2236/     A3F :                     
    2237/     A3F :                     ; ADC 88H - 8FH
    2238/     A3F :                     ; check ADC code
    2239/     A3F :                     
    2240/     A3F :                     chk_adc:
    2241/     A3F : FE 90               	cp	90h
    2242/     A41 : 30 0B               	jr	nc, chk_sub
    2243/     A43 :                     
    2244/     A43 :                     ; ADC
    2245/     A43 : 11 9E 12            	ld	de, ADCstr
    2246/     A46 : CD 57 11            	call	mkopcstr
    2247/     A49 : CD A7 11            	call	a_colon_sp
    2248/     A4C : 18 D3               	jr	mk_2ndopr
    2249/     A4E :                     
    2250/     A4E :                     ; SUB 90H - 97H
    2251/     A4E :                     ; check SUB code
    2252/     A4E :                     
    2253/     A4E :                     chk_sub:
    2254/     A4E : FE 98               	cp	98h
    2255/     A50 : 30 08               	jr	nc, chk_sbc
    2256/     A52 :                     
    2257/     A52 :                     ; SUB
    2258/     A52 : 11 A2 12            	ld	de, SUBstr
    2259/     A55 : CD 57 11            	call	mkopcstr
    2260/     A58 : 18 C7               	jr	mk_2ndopr
    2261/     A5A :                     
    2262/     A5A :                     ; SBC 98H - 9FH
    2263/     A5A :                     ; check SBC code
    2264/     A5A :                     
    2265/     A5A :                     chk_sbc:
    2266/     A5A : FE A0               	cp	0A0h
    2267/     A5C : 30 0B               	jr	nc, chk_and
    2268/     A5E :                     
    2269/     A5E :                     ; SBC
    2270/     A5E : 11 A6 12            	ld	de, SBCstr
    2271/     A61 : CD 57 11            	call	mkopcstr
    2272/     A64 : CD A7 11            	call	a_colon_sp
    2273/     A67 : 18 B8               	jr	mk_2ndopr
    2274/     A69 :                     
    2275/     A69 :                     ; AND 0A0H - 0A7H
    2276/     A69 :                     ; check AND code
    2277/     A69 :                     
    2278/     A69 :                     chk_and:
    2279/     A69 : FE A8               	cp	0A8h
    2280/     A6B : 30 08               	jr	nc, chk_xor
    2281/     A6D :                     
    2282/     A6D :                     ; AND
    2283/     A6D : 11 AA 12            	ld	de, ANDstr
    2284/     A70 : CD 57 11            	call	mkopcstr
    2285/     A73 : 18 AC               	jr	mk_2ndopr
    2286/     A75 :                     
    2287/     A75 :                     ; XOR 0A8H - 0AFH
    2288/     A75 :                     ; check XOR code
    2289/     A75 :                     
    2290/     A75 :                     chk_xor:
    2291/     A75 :                     
    2292/     A75 : FE B0               	cp	0B0h
    2293/     A77 : 30 08               	jr	nc, chk_or
    2294/     A79 :                     
    2295/     A79 :                     ; XOR
    2296/     A79 : 11 AE 12            	ld	de, XORstr
    2297/     A7C : CD 57 11            	call	mkopcstr
    2298/     A7F : 18 A0               	jr	mk_2ndopr
    2299/     A81 :                     
    2300/     A81 :                     ; OR 0B0H - 0B7H
    2301/     A81 :                     ; check OR code
    2302/     A81 :                     
    2303/     A81 :                     chk_or:
    2304/     A81 : FE B8               	cp	0B8h
    2305/     A83 : 30 08               	jr	nc, chk_cp
    2306/     A85 :                     
    2307/     A85 :                     ; OR
    2308/     A85 : 11 B2 12            	ld	de, ORstr
    2309/     A88 : CD 57 11            	call	mkopcstr
    2310/     A8B : 18 94               	jr	mk_2ndopr
    2311/     A8D :                     
    2312/     A8D :                     ; CP 0B8H - 0BFH
    2313/     A8D :                     ; check CP code
    2314/     A8D :                     
    2315/     A8D :                     chk_cp:
    2316/     A8D : FE C0               	cp	0C0h
    2317/     A8F : D2 16 0B            	jp	nc, chk_pop_rp
    2318/     A92 :                     
    2319/     A92 :                     ; CP
    2320/     A92 : 11 B5 12            	ld	de, CPstr
    2321/     A95 : CD 57 11            	call	mkopcstr
    2322/     A98 : 18 87               	jr	mk_2ndopr
    2323/     A9A :                     
    2324/     A9A :                     ;check INC
    2325/     A9A :                     
    2326/     A9A :                     chk_inc:
    2327/     A9A : 01 08 00            	ld	bc, INC_OPCDTBLE - INC_OPCDTBLS
    2328/     A9D : 21 E3 11            	ld	hl, INC_OPCDTBLS
    2329/     AA0 : ED B1               	cpir
    2330/     AA2 : 20 0E               	jr	nz, chk_dec
    2331/     AA4 :                     
    2332/     AA4 :                     ; INC
    2333/     AA4 : F5                  	push	af
    2334/     AA5 : 11 B8 12            	ld	de, INCstr
    2335/     AA8 : CD 57 11            	call	mkopcstr
    2336/     AAB : F1                  	pop	af
    2337/     AAC :                     
    2338/     AAC :                     inc_dec:
    2339/     AAC : CD BB 09            	call	get_r_num
    2340/     AAF : C3 2B 0A            	jp	mk_2ndopr1
    2341/     AB2 :                     
    2342/     AB2 :                     ;check dec
    2343/     AB2 :                     
    2344/     AB2 :                     chk_dec:
    2345/     AB2 : 01 08 00            	ld	bc, DEC_OPCDTBLE - DEC_OPCDTBLS
    2346/     AB5 : 21 EB 11            	ld	hl, DEC_OPCDTBLS
    2347/     AB8 : ED B1               	cpir
    2348/     ABA : 20 0A               	jr	nz, chk_inc_rp
    2349/     ABC :                     
    2350/     ABC :                     ; DEC
    2351/     ABC : F5                  	push	af
    2352/     ABD : 11 BC 12            	ld	de, DECstr
    2353/     AC0 : CD 57 11            	call	mkopcstr
    2354/     AC3 : F1                  	pop	af
    2355/     AC4 : 18 E6               	jr	inc_dec
    2356/     AC6 :                     
    2357/     AC6 :                     ; check inc rp
    2358/     AC6 :                     
    2359/     AC6 :                     chk_inc_rp:
    2360/     AC6 : 01 04 00            	ld	bc, inc_rp_e - inc_rp_s
    2361/     AC9 : 21 F3 11            	ld	hl, inc_rp_s
    2362/     ACC : ED B1               	cpir
    2363/     ACE : 20 0F               	jr	nz, chk_dec_rp
    2364/     AD0 :                     
    2365/     AD0 :                     ; INC rp
    2366/     AD0 : 11 B8 12            	ld	de, INCstr
    2367/     AD3 : CD 57 11            	call	mkopcstr
    2368/     AD6 :                     
    2369/     AD6 : 21 D5 13            	ld	hl, INC_DEC_ADDrp
    2370/     AD9 : CD CD 10            	call	mk_str
    2371/     ADC : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2372/     ADF :                     
    2373/     ADF :                     ; check dec rp
    2374/     ADF :                     
    2375/     ADF :                     chk_dec_rp:
    2376/     ADF : 01 04 00            	ld	bc, dec_rp_e - dec_rp_s
    2377/     AE2 : 21 F7 11            	ld	hl, dec_rp_s
    2378/     AE5 : ED B1               	cpir
    2379/     AE7 : 20 0F               	jr	nz, chk_add_rp
    2380/     AE9 :                     
    2381/     AE9 :                     ; dec rp
    2382/     AE9 : 11 BC 12            	ld	de, DECstr
    2383/     AEC : CD 57 11            	call	mkopcstr
    2384/     AEF :                     
    2385/     AEF : 21 D5 13            	ld	hl, INC_DEC_ADDrp
    2386/     AF2 : CD CD 10            	call	mk_str
    2387/     AF5 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2388/     AF8 :                     
    2389/     AF8 :                     ;check ADD HL, rp
    2390/     AF8 :                     
    2391/     AF8 :                     chk_add_rp:
    2392/     AF8 : 01 04 00            	ld	bc, add_rp_e - add_rp_s
    2393/     AFB : 21 FB 11            	ld	hl, add_rp_s
    2394/     AFE : ED B1               	cpir
    2395/     B00 : 20 46               	jr	nz, chk_ex
    2396/     B02 :                     
    2397/     B02 :                     ; add hl, rp
    2398/     B02 :                     
    2399/     B02 : CD 54 11            	call	add_opstr
    2400/     B05 :                     
    2401/     B05 : 11 03 2E            	ld	de, RNHL
    2402/     B08 : CD AA 11            	call	mk_rcs		; "HL, "
    2403/     B0B :                     
    2404/     B0B : E5                  	push	hl
    2405/     B0C : 21 D5 13            	ld	hl, INC_DEC_ADDrp
    2406/     B0F : CD D9 10            	call	get_strBufpoint
    2407/     B12 : E1                  	pop	hl
    2408/     B13 : C3 80 11            	jp	cpstr_crlf	; CR, LF, 00h
    2409/     B16 :                     
    2410/     B16 :                     ; check POP rp
    2411/     B16 :                     
    2412/     B16 :                     chk_pop_rp:
    2413/     B16 : 01 04 00            	ld	bc, pop_rp_e - pop_rp_s
    2414/     B19 : 21 FF 11            	ld	hl, pop_rp_s
    2415/     B1C : ED B1               	cpir
    2416/     B1E : 20 0F               	jr	nz, chk_push_rp
    2417/     B20 :                     
    2418/     B20 :                     ; POP RP
    2419/     B20 :                     
    2420/     B20 : 11 C0 12            	ld	de, POPstr
    2421/     B23 : CD 57 11            	call	mkopcstr
    2422/     B26 :                     
    2423/     B26 : 21 DD 13            	ld	hl, POP_PUSHrp
    2424/     B29 : CD CD 10            	call	mk_str
    2425/     B2C : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2426/     B2F :                     
    2427/     B2F :                     ; check PUSH rp
    2428/     B2F :                     
    2429/     B2F :                     chk_push_rp:
    2430/     B2F : 01 04 00            	ld	bc, push_rp_e - push_rp_s
    2431/     B32 : 21 03 12            	ld	hl, push_rp_s
    2432/     B35 : ED B1               	cpir
    2433/     B37 : 20 0F               	jr	nz, chk_ex
    2434/     B39 :                     
    2435/     B39 :                     ; PUSH RP
    2436/     B39 :                     
    2437/     B39 : 11 C4 12            	ld	de, PUSHstr
    2438/     B3C : CD 57 11            	call	mkopcstr
    2439/     B3F :                     
    2440/     B3F : 21 DD 13            	ld	hl, POP_PUSHrp
    2441/     B42 : CD CD 10            	call	mk_str
    2442/     B45 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2443/     B48 :                     
    2444/     B48 :                     ; check EX XX, XX
    2445/     B48 :                     
    2446/     B48 :                     chk_ex:
    2447/     B48 : FE 08               	cp	08H		; EX	AF,AF'
    2448/     B4A : 28 17               	jr	z, ex_af_af
    2449/     B4C : FE E3               	cp	0E3H		; EX	(SP),HL
    2450/     B4E : 28 21               	jr	z, dex_sp_hl
    2451/     B50 : FE EB               	cp	0EBH		; EX	DE,HL
    2452/     B52 : 20 25               	jr	nz, chk_1mc_bnh
    2453/     B54 :                     
    2454/     B54 :                     ; EX DE, HL
    2455/     B54 : 11 FC 2D            	ld	de, RNDE
    2456/     B57 : CD AA 11            	call	mk_rcs
    2457/     B5A :                     
    2458/     B5A :                     ins_hl_opr:
    2459/     B5A : CD 7D 11            	call	hl_crlf
    2460/     B5D :                     
    2461/     B5D :                     ins_ex_opc:
    2462/     B5D : 11 C9 12            	ld	de, EXstr
    2463/     B60 : C3 57 11            	jp	mkopcstr
    2464/     B63 :                     
    2465/     B63 :                     ; EX AF,AF'
    2466/     B63 :                     ex_af_af:
    2467/     B63 : 11 73 12            	ld	de, RNAF
    2468/     B66 : CD AA 11            	call	mk_rcs
    2469/     B69 : 11 76 12            	ld	de, RNAFX
    2470/     B6C : CD 80 11            	call	cpstr_crlf
    2471/     B6F : 18 EC               	jr ins_ex_opc
    2472/     B71 :                     
    2473/     B71 :                     ; EX (SP),HL
    2474/     B71 :                     dex_sp_hl:
    2475/     B71 : 11 36 2E            	ld	de, RNSP
    2476/     B74 : CD 99 11            	call	mk_krkcs
    2477/     B77 : 18 E1               	jr	ins_hl_opr
    2478/     B79 :                     
    2479/     B79 :                     ; check other one MC code
    2480/     B79 :                     
    2481/     B79 :                     chk_1mc_bnh:
    2482/     B79 :                     
    2483/     B79 :                     ; check JP (HL)
    2484/     B79 :                     
    2485/     B79 : FE E9               	cp	0E9H		; JP (HL) ?
    2486/     B7B : 20 0F               	jr	nz, chk_ret
    2487/     B7D :                     
    2488/     B7D :                     ; JP (HL)
    2489/     B7D : 11 7E 12            	ld	de, JPstr
    2490/     B80 : CD 57 11            	call	mkopcstr	; "JP "
    2491/     B83 :                     
    2492/     B83 : 11 03 2E            	ld	de, RNHL
    2493/     B86 : CD 8E 11            	call	mk_krk_1
    2494/     B89 : C3 83 11            	jp	insPostStr
    2495/     B8C :                     
    2496/     B8C :                     ; check RET CC
    2497/     B8C :                     chk_ret:
    2498/     B8C : 01 08 00            	ld	bc, RETCC_TBLE - RETCC_TBLS
    2499/     B8F : 21 C9 06            	ld	hl, RETCC_TBLS
    2500/     B92 : ED B1               	cpir
    2501/     B94 : 20 0F               	jr	nz, chk_rst
    2502/     B96 :                     
    2503/     B96 :                     ; RET CC
    2504/     B96 :                     ; BC : 7 >= BC >= 0
    2505/     B96 :                     
    2506/     B96 :                     	; make opcode string
    2507/     B96 : 11 7A 12            	ld	de, RETstr
    2508/     B99 : CD 57 11            	call	mkopcstr
    2509/     B9C :                     
    2510/     B9C :                     	; make operand string
    2511/     B9C :                     
    2512/     B9C : 21 BD 13            	ld	hl, CC_opr	; string base
    2513/     B9F : CD CD 10            	call	mk_str
    2514/     BA2 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2515/     BA5 :                     
    2516/     BA5 :                     ; check RST p
    2517/     BA5 :                     
    2518/     BA5 :                     chk_rst:
    2519/     BA5 : 01 08 00            	ld	bc, RST_TBLE - RST_TBLS
    2520/     BA8 : 21 E6 06            	ld	hl, RST_TBLS
    2521/     BAB : ED B1               	cpir
    2522/     BAD : 20 17               	jr	nz, chk_2MC		; 2bytes MC
    2523/     BAF :                     
    2524/     BAF :                     ; RST p
    2525/     BAF :                     
    2526/     BAF : 11 8E 12            	ld	de, RSTstr
    2527/     BB2 : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    2528/     BB5 :                     
    2529/     BB5 :                     ; 0 <= BC <= 7
    2530/     BB5 :                     ; 7: 00H  (0000 0 111 : 00 000 000)
    2531/     BB5 :                     ; 6: 08H  (0000 0 110 : 00 001 000)
    2532/     BB5 :                     ; 5: 10H  (0000 0 101 : 00 010 000)
    2533/     BB5 :                     ; 4: 18H  (0000 0 100 : 00 011 000)
    2534/     BB5 :                     ; 3: 20H  (0000 0 011 : 00 100 000)
    2535/     BB5 :                     ; 2: 28H  (0000 0 010 : 00 101 000)
    2536/     BB5 :                     ; 1: 30H  (0000 0 001 : 00 110 000)
    2537/     BB5 :                     ; 0: 38H  (0000 0 000 : 00 111 000)
    2538/     BB5 :                     ;
    2539/     BB5 : 79                  	ld	a, c
    2540/     BB6 : 2F                  	cpl		; not a
    2541/     BB7 : CB 27               	sla	a
    2542/     BB9 : CB 27               	sla	a
    2543/     BBB : CB 27               	sla	a
    2544/     BBD : E6 38               	and	38H	; a = RST No.
    2545/     BBF :                     
    2546/     BBF : 5F                  	ld	e, a
    2547/     BC0 : 21 E9 BF            	ld	hl, dasm_OprStr
    2548/     BC3 : C3 E2 10            	jp	mk_n2crlf	; "nnH", CR, LF
    2549/     BC6 :                     
    2550/     BC6 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2551/     BC6 :                     	; analysys 2 byte MC
    2552/     BC6 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2553/     BC6 :                     
    2554/     BC6 :                     chk_2MC:
    2555/     BC6 :                     
    2556/     BC6 : F5                  	push	af
    2557/     BC7 : 3E 02               	ld	a, 2
    2558/     BC9 : 32 43 BF            	ld	(mc_Size), a
    2559/     BCC : F1                  	pop	af
    2560/     BCD :                     
    2561/     BCD :                     ; check LD r, nn
    2562/     BCD :                     
    2563/     BCD : 01 08 00            	ld	bc, ld_r_nn_e - ld_r_nn_s
    2564/     BD0 : 21 87 07            	ld	hl, ld_r_nn_s
    2565/     BD3 : ED B1               	cpir
    2566/     BD5 : 20 16               	jr	nz, chk_logop2
    2567/     BD7 :                     
    2568/     BD7 :                     ; LD r, nn
    2569/     BD7 :                     
    2570/     BD7 : CD BB 09            	call	get_r_num
    2571/     BDA : CD D6 10            	call	get_rstg_off
    2572/     BDD : CD AA 11            	call	mk_rcs		; "REG, "
    2573/     BE0 :                     
    2574/     BE0 : ED 5B 3D BF         	ld	de, (dasm_adr)
    2575/     BE4 : 13                  	inc	de
    2576/     BE5 : 1A                  	ld	a, (de)		; get nn
    2577/     BE6 : 5F                  	ld	e, a
    2578/     BE7 : CD 25 11            	call	hex2str_asm	; "nnH"
    2579/     BEA : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2580/     BED :                     
    2581/     BED :                     ; check logical operation with 8 bit literal
    2582/     BED :                     
    2583/     BED :                     chk_logop2:
    2584/     BED :                     
    2585/     BED : 01 0A 00            	ld	bc, log_op_e - log_op_s
    2586/     BF0 : 21 8F 07            	ld	hl, log_op_s
    2587/     BF3 : ED B1               	cpir
    2588/     BF5 : C2 41 0C            	jp	nz, chk_djnz
    2589/     BF8 :                     
    2590/     BF8 :                     ; logical operation with 8 bit literal
    2591/     BF8 :                     
    2592/     BF8 :                     
    2593/     BF8 : C5                  	push	bc
    2594/     BF9 : 21 FF 13            	ld	hl, logop2str
    2595/     BFC : CD D9 10            	call	get_strBufpoint
    2596/     BFF : CD 57 11            	call	mkopcstr		; make op code string
    2597/     C02 : C1                  	pop	bc
    2598/     C03 : 79                  	ld	a, c
    2599/     C04 :                     
    2600/     C04 : FE 01               	cp	1
    2601/     C06 : 28 14               	jr	z, acs_kn2k	; insert "A, (nn)"
    2602/     C08 : B7                  	or	a
    2603/     C09 : 28 1A               	jr	z, ins_kn2k	; insert "(nn), A"
    2604/     C0B : FE 07               	cp	7
    2605/     C0D : 38 03               	jr	c, ins_n2crlf	; insert  "nnH"
    2606/     C0F :                     
    2607/     C0F :                     ; insert "A, "
    2608/     C0F :                     
    2609/     C0F : CD A7 11            	call	a_colon_sp
    2610/     C12 :                     
    2611/     C12 :                     ; "nn"
    2612/     C12 :                     ins_n2crlf:
    2613/     C12 : ED 5B 3D BF         	ld	de, (dasm_adr)
    2614/     C16 : 13                  	inc	de
    2615/     C17 : 1A                  	ld	a, (de)
    2616/     C18 : 5F                  	ld	e, a		; get nn
    2617/     C19 : C3 E2 10            	jp	mk_n2crlf	; "nnH", CR, LF
    2618/     C1C :                     
    2619/     C1C :                     acs_kn2k:
    2620/     C1C : CD A7 11            	call	a_colon_sp	; "A, "
    2621/     C1F : CD 31 0C            	call	kn2k		; "(nnH)"
    2622/     C22 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    2623/     C25 :                     
    2624/     C25 :                     ; "(nn), A"
    2625/     C25 :                     ins_kn2k:
    2626/     C25 : 21 E9 BF            	ld	hl, dasm_OprStr	;operand str buffer
    2627/     C28 : CD 31 0C            	call	kn2k		; "(nnH)"
    2628/     C2B : CD CF 11            	call	ins_kmR		; " ,"
    2629/     C2E : C3 72 11            	jp	a_crlf		; "A", CR, LF, 00h
    2630/     C31 :                     
    2631/     C31 :                     ; "(nnH)"
    2632/     C31 :                     kn2k:
    2633/     C31 : CD BA 11            	call	ins_kakkoL	; "("
    2634/     C34 : ED 5B 3D BF         	ld	de, (dasm_adr)
    2635/     C38 : 13                  	inc	de
    2636/     C39 : 1A                  	ld	a, (de)		; get nn
    2637/     C3A : 5F                  	ld	e, a		; e: nn
    2638/     C3B : CD 25 11            	call	hex2str_asm	; hex strings
    2639/     C3E : C3 BE 11            	jp	ins_kakkoR	; ")"
    2640/     C41 :                     
    2641/     C41 :                     
    2642/     C41 :                     ; check DJNZ nn
    2643/     C41 :                     chk_djnz:
    2644/     C41 : FE 10               	cp	10H
    2645/     C43 : 20 05               	jr	nz, chk_jrnn
    2646/     C45 :                     
    2647/     C45 :                     ; check DJNZ nn
    2648/     C45 : 11 84 12            	ld	de, DJNZstr
    2649/     C48 : 18 07               	jr	jr_n4crlf
    2650/     C4A :                     
    2651/     C4A :                     ; check jr nn
    2652/     C4A :                     chk_jrnn:
    2653/     C4A : FE 18               	cp	18H
    2654/     C4C : 20 0C               	jr	nz, chk_jrcc	; not JR relative
    2655/     C4E :                     
    2656/     C4E :                     ; JR Relative
    2657/     C4E : 11 81 12            	ld	de, JRstr
    2658/     C51 :                     jr_n4crlf:
    2659/     C51 : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    2660/     C54 : 21 E9 BF            	ld	hl, dasm_OprStr
    2661/     C57 : C3 06 11            	jp	mkRel_str	; "nnnnH",cr,lf : nnnn : branch address
    2662/     C5A :                     
    2663/     C5A :                     ; JR CC, nn
    2664/     C5A :                     
    2665/     C5A :                     chk_jrcc:
    2666/     C5A : 01 04 00            	ld	bc, JRCC_TBLE - JRCC_TBLS1
    2667/     C5D : 21 D2 06            	ld	hl, JRCC_TBLS1
    2668/     C60 : ED B1               	cpir
    2669/     C62 : 20 12               	jr	nz, chk_3MC	; no, check 3 bnytes MC
    2670/     C64 :                     
    2671/     C64 :                     ; JR CC, nn(Relative Value)
    2672/     C64 :                     
    2673/     C64 : 11 81 12            	ld	de, JRstr
    2674/     C67 : CD 57 11            	call	mkopcstr
    2675/     C6A : 21 CD 13            	ld	hl, JRCC_opr1	; string base
    2676/     C6D : CD CD 10            	call	mk_str		; "NZ", "Z", "NC", "C"
    2677/     C70 : CD CF 11            	call	ins_kmR		; ", "
    2678/     C73 : C3 06 11            	jp	mkRel_str	; "nnnnH", cr, lf
    2679/     C76 :                     
    2680/     C76 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2681/     C76 :                     	; analysys 3 byte MC
    2682/     C76 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2683/     C76 :                     
    2684/     C76 :                     chk_3MC:
    2685/     C76 : F5                  	push	af
    2686/     C77 : 3E 03               	ld	a, 3
    2687/     C79 : 32 43 BF            	ld	(mc_Size), a
    2688/     C7C : F1                  	pop	af
    2689/     C7D :                     
    2690/     C7D : 01 04 00            	ld	bc, THREE_OPTBLe - THREE_OPTBL
    2691/     C80 : 21 99 07            	ld	hl, THREE_OPTBL
    2692/     C83 : ED B1               	cpir
    2693/     C85 : C2 97 0C            	jp	nz, chk_ld16
    2694/     C88 :                     
    2695/     C88 :                     ; LD rp, nnnn
    2696/     C88 :                     
    2697/     C88 : 21 13 14            	ld	hl, logop3str
    2698/     C8B : CD D9 10            	call	get_strBufpoint
    2699/     C8E : CD AA 11            	call	mk_rcs		; "Reg, "
    2700/     C91 :                     
    2701/     C91 :                     get_n4crlf:
    2702/     C91 : CD BF 0C            	call	get_n4
    2703/     C94 : C3 E8 10            	jp	mk_n4crlf	; "nnnnH", CR, LF, 00h
    2704/     C97 :                     
    2705/     C97 :                     ; LD 16bit literal
    2706/     C97 :                     chk_ld16:
    2707/     C97 : FE 22               	cp	22h
    2708/     C99 : 28 12               	jr	z, ins_kkhl	; "(nnnnH), HL"
    2709/     C9B : FE 32               	cp	32h
    2710/     C9D : 28 14               	jr	z, ins_kka	; "(nnnnH), A"
    2711/     C9F : FE 2A               	cp	2ah
    2712/     CA1 : 28 26               	jr	z, ins_hlkk	; "HL, (nnnnH)"
    2713/     CA3 : FE 3A               	cp	3ah
    2714/     CA5 : C2 D8 0C            	jp	nz, chk_jpn4	; check jp n4
    2715/     CA8 :                     
    2716/     CA8 :                     ; "A, (nnnnH)"
    2717/     CA8 : CD A7 11            	call	a_colon_sp	; "A, "
    2718/     CAB : 18 22               	jr	kn4kcrlf
    2719/     CAD :                     
    2720/     CAD :                     ; "(nnnnH), HL"
    2721/     CAD :                     ins_kkhl:
    2722/     CAD : CD B9 0C            	call	kn4hk
    2723/     CB0 : C3 7D 11            	jp	hl_crlf		; "HL",cr,lf
    2724/     CB3 :                     
    2725/     CB3 :                     ; "(nnnnH), A"
    2726/     CB3 :                     ins_kka:
    2727/     CB3 : CD B9 0C            	call	kn4hk
    2728/     CB6 : C3 72 11            	jp	a_crlf		; "A",cr,lf
    2729/     CB9 :                     
    2730/     CB9 :                     kn4hk:
    2731/     CB9 : CD BF 0C            	call	get_n4
    2732/     CBC : C3 EE 10            	jp	ins_kn4kcs	; "(nnnnH), "
    2733/     CBF :                     
    2734/     CBF :                     get_n4:
    2735/     CBF : E5                  	push	hl
    2736/     CC0 : 2A 3D BF            	ld	hl, (dasm_adr)
    2737/     CC3 : 23                  	inc	hl
    2738/     CC4 : 5E                  	ld	e, (hl)
    2739/     CC5 : 23                  	inc	hl
    2740/     CC6 : 56                  	ld	d, (hl)
    2741/     CC7 : E1                  	pop	hl
    2742/     CC8 : C9                  	ret
    2743/     CC9 :                     
    2744/     CC9 :                     ; "HL, (nnnnH)"
    2745/     CC9 :                     ins_hlkk:
    2746/     CC9 : 11 03 2E            	ld	de, RNHL
    2747/     CCC : CD AA 11            	call	mk_rcs		; "HL ,"
    2748/     CCF :                     
    2749/     CCF :                     kn4kcrlf:
    2750/     CCF : CD BF 0C            	call	get_n4
    2751/     CD2 : CD FD 10            	call	mk_kn4k		; "(nnnnH)"
    2752/     CD5 : C3 83 11            	jp	insPostStr	; cr, lf
    2753/     CD8 :                     
    2754/     CD8 :                     ; check JP literal
    2755/     CD8 :                     
    2756/     CD8 :                     chk_jpn4:
    2757/     CD8 : FE C3               	cp	0C3H		; JP literal ?
    2758/     CDA : 20 08               	jr	nz, chk_calln4	; not JP literal
    2759/     CDC :                     
    2760/     CDC :                     ; "JP nnnnH"
    2761/     CDC :                     
    2762/     CDC : 11 7E 12            	ld	de, JPstr
    2763/     CDF : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    2764/     CE2 : 18 AD               	jr	get_n4crlf
    2765/     CE4 :                     
    2766/     CE4 :                     ; check call literal
    2767/     CE4 :                     
    2768/     CE4 :                     chk_calln4:
    2769/     CE4 : FE CD               	cp	0CDH		; CALL literal ?
    2770/     CE6 : 20 08               	jr	nz, chk_jpcc
    2771/     CE8 :                     
    2772/     CE8 :                     ; "CALL nnnnH",cr,lf
    2773/     CE8 :                     
    2774/     CE8 : 11 89 12            	ld	de, CALLstr
    2775/     CEB : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    2776/     CEE : 18 A1               	jr	get_n4crlf
    2777/     CF0 :                     
    2778/     CF0 :                     
    2779/     CF0 :                     ; check 3 byte machine code: branch JP CC, nnnn
    2780/     CF0 :                     
    2781/     CF0 :                     chk_jpcc:
    2782/     CF0 : 01 08 00            	ld	bc, JPCC_TBLE - JPCC_TBLS
    2783/     CF3 : 21 D6 06            	ld	hl, JPCC_TBLS
    2784/     CF6 : ED B1               	cpir
    2785/     CF8 : 20 11               	jr	nz, chk_calcc
    2786/     CFA :                     
    2787/     CFA :                     ; JP CC, nnnn
    2788/     CFA :                     ; BC : 7 >= BC >= 0
    2789/     CFA :                     
    2790/     CFA : 11 7E 12            	ld	de, JPstr
    2791/     CFD :                     
    2792/     CFD :                     CC_NNNN:
    2793/     CFD : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    2794/     D00 :                     
    2795/     D00 : 21 BD 13            	ld	hl, CC_opr	; string base
    2796/     D03 : CD CD 10            	call	mk_str		; de: point (string end) + 1
    2797/     D06 : CD CF 11            	call	ins_kmR		; " ,"
    2798/     D09 : 18 86               	jr	get_n4crlf	; "nnnnh", cr,lf
    2799/     D0B :                     
    2800/     D0B :                     
    2801/     D0B :                     ; check 3 byte machine code: branch (CALL CC, nnnn 16bit literal)
    2802/     D0B :                     
    2803/     D0B :                     chk_calcc:
    2804/     D0B : 01 08 00            	ld	bc, CLCC_TBLE - CLCC_TBLS
    2805/     D0E : 21 DE 06            	ld	hl, CLCC_TBLS
    2806/     D11 : ED B1               	cpir
    2807/     D13 : 20 05               	jr	nz, chk_0CBH
    2808/     D15 :                     
    2809/     D15 :                     ; CALL CC, nnnn
    2810/     D15 :                     ; BC : 7 >= BC >= 0 CALLstr
    2811/     D15 :                     
    2812/     D15 : 11 89 12            	ld	de, CALLstr
    2813/     D18 : 18 E3               	jr	CC_NNNN
    2814/     D1A :                     
    2815/     D1A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2816/     D1A :                     	; OPECODE 0CBH check
    2817/     D1A :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2818/     D1A :                     
    2819/     D1A :                     chk_0CBH:
    2820/     D1A : 2A 3D BF            	ld	hl, (dasm_adr)
    2821/     D1D : 23                  	inc	hl		; 2nd opecode address
    2822/     D1E :                     
    2823/     D1E : F5                  	push	af
    2824/     D1F : 3E 02               	ld	a, 2
    2825/     D21 : 32 43 BF            	ld	(mc_Size), a	; set 2bytes MC
    2826/     D24 : F1                  	pop	af
    2827/     D25 :                     
    2828/     D25 : FE CB               	cp	0cbh
    2829/     D27 : C2 E0 0D            	jp	nz, chk_0DDH
    2830/     D2A :                     
    2831/     D2A : 7E                  	ld	a, (hl)		; a : 2nd opecode
    2832/     D2B : 21 E9 BF            	ld	hl, dasm_OprStr ; set operand string buffer
    2833/     D2E :                     
    2834/     D2E : FE 08               	cp	08h
    2835/     D30 : DA 69 0D            	jp	c, mk_rlcr
    2836/     D33 : FE 10               	cp	10h
    2837/     D35 : DA 72 0D            	jp	c, mk_rrcr
    2838/     D38 : FE 18               	cp	18h
    2839/     D3A : DA 7B 0D            	jp	c, mk_rlr
    2840/     D3D : FE 20               	cp	20h
    2841/     D3F : DA 84 0D            	jp	c, mk_rrr
    2842/     D42 : FE 28               	cp	28h
    2843/     D44 : DA 8D 0D            	jp	c, mk_slar
    2844/     D47 : FE 30               	cp	30h
    2845/     D49 : DA 96 0D            	jp	c, mk_srar
    2846/     D4C : FE 38               	cp	38h
    2847/     D4E : DA BA 0D            	jp	c, op_err
    2848/     D51 : FE 40               	cp	40h
    2849/     D53 : DA 9F 0D            	jp	c, mk_srlr
    2850/     D56 : FE 80               	cp	80h
    2851/     D58 : DA A8 0D            	jp	c, mk_bitr
    2852/     D5B : FE C0               	cp	0c0h
    2853/     D5D : DA B1 0D            	jp	c, mk_resr
    2854/     D60 :                     
    2855/     D60 :                     ; make SET n, r, SET n, (HL)
    2856/     D60 :                     
    2857/     D60 : CD C0 0D            	call	mk_bitr_str
    2858/     D63 : 11 88 13            	ld	de, SETstr
    2859/     D66 : C3 57 11            	jp	mkopcstr
    2860/     D69 :                     
    2861/     D69 :                     
    2862/     D69 :                     ; make RLC r, RLC (HL)
    2863/     D69 :                     mk_rlcr:
    2864/     D69 : CD C5 0D            	call	ins_rstg
    2865/     D6C : 11 03 13            	ld	de, RLCstr
    2866/     D6F : C3 57 11            	jp	mkopcstr
    2867/     D72 :                     
    2868/     D72 :                     ; make RRC r, RRC (HL)
    2869/     D72 :                     mk_rrcr:
    2870/     D72 : CD C5 0D            	call	ins_rstg
    2871/     D75 : 11 07 13            	ld	de, RRCstr
    2872/     D78 : C3 57 11            	jp	mkopcstr
    2873/     D7B :                     
    2874/     D7B :                     ; make RL r, RL (HL)
    2875/     D7B :                     mk_rlr:
    2876/     D7B : CD C5 0D            	call	ins_rstg
    2877/     D7E : 11 0B 13            	ld	de, RLstr
    2878/     D81 : C3 57 11            	jp	mkopcstr
    2879/     D84 :                     
    2880/     D84 :                     ; make RR r, RR (HL)
    2881/     D84 :                     mk_rrr:
    2882/     D84 : CD C5 0D            	call	ins_rstg
    2883/     D87 : 11 0E 13            	ld	de, RRstr
    2884/     D8A : C3 57 11            	jp	mkopcstr
    2885/     D8D :                     
    2886/     D8D :                     ; make SLA r, SLA (HL)
    2887/     D8D :                     mk_slar:
    2888/     D8D : CD C5 0D            	call	ins_rstg
    2889/     D90 : 11 11 13            	ld	de, SLAstr
    2890/     D93 : C3 57 11            	jp	mkopcstr
    2891/     D96 :                     
    2892/     D96 :                     ; make SRA r, SRA (HL)
    2893/     D96 :                     mk_srar:
    2894/     D96 : CD C5 0D            	call	ins_rstg
    2895/     D99 : 11 15 13            	ld	de, SRAstr
    2896/     D9C : C3 57 11            	jp	mkopcstr
    2897/     D9F :                     
    2898/     D9F :                     ; make SRL r, SRL (HL)
    2899/     D9F :                     mk_srlr:
    2900/     D9F : CD C5 0D            	call	ins_rstg
    2901/     DA2 : 11 19 13            	ld	de, SRLstr
    2902/     DA5 : C3 57 11            	jp	mkopcstr
    2903/     DA8 :                     
    2904/     DA8 :                     ; make BIT n, r, BIT n, (HL)
    2905/     DA8 :                     mk_bitr:
    2906/     DA8 : CD C0 0D            	call	mk_bitr_str
    2907/     DAB : 11 1D 13            	ld	de, BITstr
    2908/     DAE : C3 57 11            	jp	mkopcstr
    2909/     DB1 :                     
    2910/     DB1 :                     ; make RES n, r, RES n, (HL)
    2911/     DB1 :                     mk_resr:
    2912/     DB1 : CD C0 0D            	call	mk_bitr_str
    2913/     DB4 : 11 21 13            	ld	de, RESstr
    2914/     DB7 : C3 57 11            	jp	mkopcstr
    2915/     DBA :                     
    2916/     DBA :                     op_err:
    2917/     DBA : 11 8C 13            	ld	de, ER_OPMSG
    2918/     DBD : C3 57 11            	jp	mkopcstr
    2919/     DC0 :                     
    2920/     DC0 :                     ;-------------------------------------------
    2921/     DC0 :                     ; input a : 2nd opecode
    2922/     DC0 :                     ;	hl : make string buffer
    2923/     DC0 :                     ; make "bit No, r" string to *hl
    2924/     DC0 :                     ; (ex) *hl = "1, B"
    2925/     DC0 :                     ;-------------------------------------------
    2926/     DC0 :                     mk_bitr_str:
    2927/     DC0 : F5                  	push	af
    2928/     DC1 : CD D2 0D            	call	set_bitno
    2929/     DC4 : F1                  	pop	af
    2930/     DC5 :                     
    2931/     DC5 :                     ins_rstg:
    2932/     DC5 : E6 07               	and	07h
    2933/     DC7 : 4F                  	ld	c, a	; table offset
    2934/     DC8 : 06 00               	ld	b, 0		; bc : string offset
    2935/     DCA : E5                  	push	hl
    2936/     DCB : CD D6 10            	call	get_rstg_off	; get string address to de
    2937/     DCE : E1                  	pop	hl
    2938/     DCF : C3 80 11            	jp	cpstr_crlf	; "REG", CR, LF, 00h
    2939/     DD2 :                     ;
    2940/     DD2 :                     ; input hl : make string buffer
    2941/     DD2 :                     ;
    2942/     DD2 :                     set_bitno:
    2943/     DD2 : E6 38               	and	38h
    2944/     DD4 : 0F                  	rrca
    2945/     DD5 : 0F                  	rrca
    2946/     DD6 : 0F                  	rrca
    2947/     DD7 : 47                  	ld	b, a	; bit number
    2948/     DD8 :                     
    2949/     DD8 : 3E 30               	ld	a, 30h
    2950/     DDA : B0                  	or	b		; a : bit string "0" - "7"
    2951/     DDB : 77                  	ld	(hl), a
    2952/     DDC : 23                  	inc	hl
    2953/     DDD : C3 CF 11            	jp	ins_kmR
    2954/     DE0 :                     
    2955/     DE0 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2956/     DE0 :                     	; OPECODE 0DDH check
    2957/     DE0 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    2958/     DE0 :                     
    2959/     DE0 :                     chk_0DDH:
    2960/     DE0 : FE DD               	cp	0ddh
    2961/     DE2 : C2 86 0F            	jp	nz, chk_0EDH
    2962/     DE5 :                     
    2963/     DE5 : 11 30 2E            	ld	de, RNIX
    2964/     DE8 : ED 53 3F BF         	ld	(reg_xy), de	; save index reg string
    2965/     DEC : 11 2F 14            	ld	de, addixrp_tbl
    2966/     DEF : ED 53 41 BF         	ld	(xy_srtp), de
    2967/     DF3 :                     
    2968/     DF3 :                     chk_0DDH_1:
    2969/     DF3 :                     
    2970/     DF3 : 7E                  	ld	a, (hl)		; get 2nd opcode
    2971/     DF4 :                     
    2972/     DF4 : FE E3               	cp	0E3h	; EX (SP),IX
    2973/     DF6 : CA 3A 0E            	jp	z, ins_kspkix
    2974/     DF9 : FE E9               	cp	0E9h	; JP (IX)
    2975/     DFB : CA 28 0E            	jp	z, ins_jpix
    2976/     DFE : FE F9               	cp	0F9h	; LD SP, IX
    2977/     E00 : CA 49 0E            	jp	z, ins_spix
    2978/     E03 :                     
    2979/     E03 : 01 04 00            	ld	bc, DD_2NDTBL1 - DD_2NDTBL
    2980/     E06 : 21 A1 07            	ld	hl, DD_2NDTBL
    2981/     E09 : ED B1               	cpir
    2982/     E0B : CA 52 0E            	jp	z, ins_ixrp
    2983/     E0E :                     
    2984/     E0E : 01 04 00            	ld	bc, DD_2NDTBL2 - DD_2NDTBL1
    2985/     E11 : 21 A5 07            	ld	hl, DD_2NDTBL1
    2986/     E14 : ED B1               	cpir
    2987/     E16 : C2 67 0E            	jp	nz, chk_0DD3op
    2988/     E19 :                     
    2989/     E19 :                     ; INC	IX
    2990/     E19 :                     ; DEC	IX
    2991/     E19 :                     ; PUSH	IX
    2992/     E19 :                     ; POP	IX
    2993/     E19 : 21 27 14            	ld	hl, dd_2opt
    2994/     E1C : CD D9 10            	call	get_strBufpoint
    2995/     E1F : CD 57 11            	call	mkopcstr		; inseert OPCODE strings to dasm_OpcStr
    2996/     E22 :                     
    2997/     E22 : 21 E9 BF            	ld	hl, dasm_OprStr
    2998/     E25 : C3 77 11            	jp	ix_crlf			; "IX", CR, LF, 00h
    2999/     E28 :                     
    3000/     E28 :                     ; JP	(IX)
    3001/     E28 :                     ins_jpix:
    3002/     E28 : ED 5B 3F BF         	ld	de, (reg_xy)
    3003/     E2C :                     ins_jpix1:
    3004/     E2C : D5                  	push	de
    3005/     E2D : 11 7E 12            	ld	de, JPstr
    3006/     E30 : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    3007/     E33 :                     
    3008/     E33 : D1                  	pop	de
    3009/     E34 : CD 8E 11            	call	mk_krk_1
    3010/     E37 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    3011/     E3A :                     
    3012/     E3A :                     ; EX	(SP),IX
    3013/     E3A :                     ins_kspkix:
    3014/     E3A : 11 C9 12            	ld	de, EXstr
    3015/     E3D : CD 57 11            	call	mkopcstr	; de : next string buffer addr
    3016/     E40 : 11 36 2E            	ld	de, RNSP
    3017/     E43 : CD 99 11            	call	mk_krkcs	; "(SP), "
    3018/     E46 : C3 77 11            	jp	ix_crlf		; "IX",cr,lf
    3019/     E49 :                     
    3020/     E49 :                     ; LD	SP,IX
    3021/     E49 :                     ins_spix:
    3022/     E49 : 11 36 2E            	ld	de, RNSP
    3023/     E4C : CD AA 11            	call	mk_rcs		; "SP, "
    3024/     E4F : C3 77 11            	jp	ix_crlf		; "IX",cr,lf
    3025/     E52 :                     
    3026/     E52 :                     ; ADD	IX,BC
    3027/     E52 :                     ; ADD	IX,DE
    3028/     E52 :                     ; ADD	IX,IX
    3029/     E52 :                     ; ADD	IX,SP
    3030/     E52 :                     ins_ixrp:
    3031/     E52 : CD 54 11            	call	add_opstr	; de : next string buffer addr
    3032/     E55 :                     
    3033/     E55 : ED 5B 3F BF         	ld	de, (reg_xy)
    3034/     E59 : CD AA 11            	call	mk_rcs		; "IX, "
    3035/     E5C :                     
    3036/     E5C : E5                  	push	hl
    3037/     E5D : 2A 41 BF            	ld	hl, (xy_srtp)
    3038/     E60 : CD D9 10            	call	get_strBufpoint
    3039/     E63 : E1                  	pop	hl
    3040/     E64 : C3 80 11            	jp	cpstr_crlf	; "REG",cr,lf
    3041/     E67 :                     
    3042/     E67 :                     ;
    3043/     E67 :                     ; check 0DD 3bytes MC
    3044/     E67 :                     ;
    3045/     E67 :                     chk_0DD3op:
    3046/     E67 : F5                  	push	af
    3047/     E68 : 3E 03               	ld	a, 3
    3048/     E6A : 32 43 BF            	ld	(mc_Size), a	; 2byte machine code
    3049/     E6D : F1                  	pop	af
    3050/     E6E :                     
    3051/     E6E : 01 0E 00            	ld	bc, dd_ld_tble - dd_ld_tbl
    3052/     E71 : 21 07 12            	ld	hl, dd_ld_tbl
    3053/     E74 : ED B1               	cpir
    3054/     E76 : CA A6 0E            	jp	z, dd_ld
    3055/     E79 :                     
    3056/     E79 : FE 86               	cp	86h
    3057/     E7B : CA D1 0E            	jp	z, dd_mix
    3058/     E7E : FE 8E               	cp	8eh
    3059/     E80 : CA DC 0E            	jp	z, dd_mix1
    3060/     E83 : FE 9E               	cp	9eh
    3061/     E85 : CA E1 0E            	jp	z, dd_mix2
    3062/     E88 :                     
    3063/     E88 : 01 07 00            	ld	bc, dd_log_tble - dd_log_tbl
    3064/     E8B : 21 15 12            	ld	hl, dd_log_tbl
    3065/     E8E : ED B1               	cpir
    3066/     E90 : C2 E6 0E            	jp	nz, chk_0DD4op
    3067/     E93 :                     
    3068/     E93 :                     ;
    3069/     E93 :                     ; make "SUB (IX+nn)", "AND (IX+nn)", "XOR (IX+nn)"
    3070/     E93 :                     ;       "OR (IX+nn)",  "CP (IX+nn)"
    3071/     E93 :                     ;      "INC (IX+nn)", "DEC (IX+nn)"
    3072/     E93 :                     ;
    3073/     E93 : 21 3F 14            	ld	hl, ddlogtbl
    3074/     E96 : CD D9 10            	call	get_strBufpoint
    3075/     E99 : CD 57 11            	call	mkopcstr
    3076/     E9C :                     
    3077/     E9C :                     mk_kixpnk:
    3078/     E9C : ED 5B 3F BF         	ld	de, (reg_xy)
    3079/     EA0 :                     
    3080/     EA0 :                     mk_kiypnk:
    3081/     EA0 : 21 E9 BF            	ld	hl, dasm_OprStr
    3082/     EA3 : C3 9D 10            	jp	kixypnk_crlf		; "(IX+nnH)",cr,lf
    3083/     EA6 :                     
    3084/     EA6 :                     ;
    3085/     EA6 :                     ; make "LD (IX+nn), r" or "LD r, (IX+nn)"
    3086/     EA6 :                     ;
    3087/     EA6 :                     dd_ld:
    3088/     EA6 : 79                  	ld	a, c
    3089/     EA7 : FE 07               	cp	7
    3090/     EA9 : D2 BE 0E            	jp	nc, dd_ld1
    3091/     EAC :                     	
    3092/     EAC :                     ; LD (IX+nn), r
    3093/     EAC : ED 5B 3F BF         	ld	de, (reg_xy)
    3094/     EB0 : CD 94 10            	call	kixypnk_cs	; make "(IX+nn), "
    3095/     EB3 :                     
    3096/     EB3 : E5                  	push	hl
    3097/     EB4 : 21 4D 14            	ld	hl, dd_ldtbl
    3098/     EB7 : CD D9 10            	call	get_strBufpoint
    3099/     EBA : E1                  	pop	hl
    3100/     EBB : C3 80 11            	jp	cpstr_crlf	; "A", "L", "H", "E", D", "C", "B"
    3101/     EBE :                     				; CR, LF, 00h
    3102/     EBE :                     	
    3103/     EBE :                     ; LD r, (IX+nn)
    3104/     EBE :                     dd_ld1:
    3105/     EBE : D6 07               	sub	7
    3106/     EC0 : 4F                  	ld	c, a
    3107/     EC1 : 21 4D 14            	ld	hl, dd_ldtbl
    3108/     EC4 : CD D9 10            	call	get_strBufpoint
    3109/     EC7 :                     
    3110/     EC7 : CD AA 11            	call	mk_rcs		; "REG, "
    3111/     ECA :                     dd_mix4:
    3112/     ECA : ED 5B 3F BF         	ld	de, (reg_xy)
    3113/     ECE : C3 9D 10            	jp	kixypnk_crlf	; "(IX+nn)", CR, LF, 00h
    3114/     ED1 :                     
    3115/     ED1 :                     
    3116/     ED1 :                     ; "ADD A,(IX+nn)"
    3117/     ED1 :                     dd_mix:
    3118/     ED1 : 11 9A 12            	ld	de, ADDstr
    3119/     ED4 :                     dd_mix3:
    3120/     ED4 : CD 57 11            	call	mkopcstr	; "ADD"
    3121/     ED7 : CD A7 11            	call	a_colon_sp	; "A, "
    3122/     EDA : 18 EE               	jr	dd_mix4		; "(IX+nn)",cr,lf
    3123/     EDC :                     
    3124/     EDC :                     ;"ADC A,(IX+nn)"
    3125/     EDC :                     dd_mix1:
    3126/     EDC : 11 9E 12            	ld	de, ADCstr
    3127/     EDF : 18 F3               	jr	dd_mix3
    3128/     EE1 :                     
    3129/     EE1 :                     ;"SBC A,(IX+nn)"
    3130/     EE1 :                     dd_mix2:
    3131/     EE1 : 11 A6 12            	ld	de, SBCstr
    3132/     EE4 : 18 EE               	jr	dd_mix3
    3133/     EE6 :                     
    3134/     EE6 :                     ;
    3135/     EE6 :                     ; check 0DD 4bytes MC
    3136/     EE6 :                     ;
    3137/     EE6 :                     chk_0DD4op:
    3138/     EE6 : F5                  	push	af
    3139/     EE7 : 3E 04               	ld	a, 4
    3140/     EE9 : 32 43 BF            	ld	(mc_Size), a	; 2byte machine code
    3141/     EEC : F1                  	pop	af
    3142/     EED :                     
    3143/     EED : FE 21               	cp	21h
    3144/     EEF : CA 0C 0F            	jp	z, DD_21
    3145/     EF2 : FE 22               	cp	22h
    3146/     EF4 : CA 19 0F            	jp	z, DD_22
    3147/     EF7 : FE 2A               	cp	2ah
    3148/     EF9 : CA 22 0F            	jp	z, DD_2a
    3149/     EFC : FE 36               	cp	36h
    3150/     EFE : C2 32 0F            	jp	nz, chk_DD_CB
    3151/     F01 :                     ; DD 36
    3152/     F01 :                     ; "LD (IX+xx), yy"
    3153/     F01 :                     
    3154/     F01 : ED 5B 3F BF         	ld	de, (reg_xy)
    3155/     F05 : CD 94 10            	call	kixypnk_cs	; "(IX+xx), "
    3156/     F08 : 5A                  	ld	e, d		; e: yy
    3157/     F09 : C3 E2 10            	jp	mk_n2crlf	; "0yyH",cr,lf
    3158/     F0C :                     
    3159/     F0C :                     
    3160/     F0C :                     ; "LD IX, nnnn"
    3161/     F0C :                     DD_21:
    3162/     F0C : ED 5B 3F BF         	ld	de, (reg_xy)
    3163/     F10 : CD AA 11            	call	mk_rcs		; "IX, "
    3164/     F13 : CD C2 10            	call	get_nnnn
    3165/     F16 : C3 E8 10            	jp	mk_n4crlf	; "nnnnH",cr,lf
    3166/     F19 :                     
    3167/     F19 :                     ; "LD (nnnn), IX"
    3168/     F19 :                     DD_22:
    3169/     F19 : CD C2 10            	call	get_nnnn
    3170/     F1C : CD EE 10            	call	ins_kn4kcs	; "(nnnnH), "
    3171/     F1F : C3 77 11            	jp	ix_crlf		; "IX",cr,lf
    3172/     F22 :                     
    3173/     F22 :                     ; "LD IX, (nnnn)"
    3174/     F22 :                     DD_2a:
    3175/     F22 : ED 5B 3F BF         	ld	de, (reg_xy)
    3176/     F26 :                     DD_2a1:
    3177/     F26 : CD AA 11            	call	mk_rcs		; "IX, "
    3178/     F29 : CD C2 10            	call	get_nnnn
    3179/     F2C : CD FD 10            	call	mk_kn4k		; "(nnnnH)"
    3180/     F2F : C3 83 11            	jp	insPostStr	; cr,lf
    3181/     F32 :                     
    3182/     F32 :                     chk_DD_CB
    3183/     F32 : FE CB               	cp	0CBH
    3184/     F34 : C2 BA 0D            	jp	nz, op_err
    3185/     F37 :                     
    3186/     F37 : CD C2 10            	call	get_nnnn	; d: 3rd OP, e:nn
    3187/     F3A : 7A                  	ld	a, d
    3188/     F3B :                     
    3189/     F3B : 01 07 00            	ld	bc, dd_rt_tble - dd_rt_tbles
    3190/     F3E : 21 1C 12            	ld	hl, dd_rt_tbles
    3191/     F41 : ED B1               	cpir
    3192/     F43 : C2 52 0F            	jp	nz, DD_CB_nn_XX
    3193/     F46 :                     
    3194/     F46 : 21 85 14            	ld	hl, dd_rt_str
    3195/     F49 : CD D9 10            	call	get_strBufpoint
    3196/     F4C : CD 57 11            	call	mkopcstr	; RLC, RRC, RL, RR, SLA, SRA, SRL
    3197/     F4F : C3 9C 0E            	jp	mk_kixpnk	; "(IX+nnH)",cr,lf
    3198/     F52 :                     
    3199/     F52 :                     ; check BIT, RES, SET
    3200/     F52 :                     DD_CB_nn_XX:
    3201/     F52 :                     
    3202/     F52 :                     	; check undefine MC
    3203/     F52 : 01 18 00            	ld	bc, dd_bit_opTble - dd_bit_opTbl
    3204/     F55 : 21 23 12            	ld	hl, dd_bit_opTbl
    3205/     F58 : ED B1               	cpir
    3206/     F5A : C2 BA 0D            	jp	nz, op_err
    3207/     F5D :                     
    3208/     F5D : FE 80               	cp	80h
    3209/     F5F : DA 76 0F            	jp	c, dd_bit
    3210/     F62 : FE C0               	cp	0c0h
    3211/     F64 : DA 7E 0F            	jp	c, dd_res
    3212/     F67 :                     
    3213/     F67 :                     ; DD_SET
    3214/     F67 :                     ; "SET i, (IX+nn)"
    3215/     F67 :                     
    3216/     F67 : 11 88 13            	ld	de, SETstr
    3217/     F6A : CD 57 11            	call	mkopcstr
    3218/     F6D :                     
    3219/     F6D :                     DD_BSR:
    3220/     F6D :                     
    3221/     F6D : 21 E9 BF            	ld	hl, dasm_OprStr ; set operand string buffer
    3222/     F70 : CD D2 0D            	call	set_bitno	; "i, "
    3223/     F73 : C3 CA 0E            	jp	dd_mix4		; "(IX+nn)", cr,lf
    3224/     F76 :                     
    3225/     F76 :                     ; DD_BIT
    3226/     F76 :                     ; "BIT i, (IX+nn)"
    3227/     F76 :                     dd_bit:
    3228/     F76 : 11 1D 13            	ld	de, BITstr
    3229/     F79 : CD 57 11            	call	mkopcstr
    3230/     F7C : 18 EF               	jr	DD_BSR
    3231/     F7E :                     
    3232/     F7E :                     ; DD_RES
    3233/     F7E :                     ; "RES i, (IX+nn)"
    3234/     F7E :                     dd_res:
    3235/     F7E : 11 21 13            	ld	de, RESstr
    3236/     F81 : CD 57 11            	call	mkopcstr
    3237/     F84 : 18 E7               	jr	DD_BSR
    3238/     F86 :                     
    3239/     F86 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3240/     F86 :                     	; OPECODE 0EDH check
    3241/     F86 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3242/     F86 :                     
    3243/     F86 :                     chk_0EDH:
    3244/     F86 : FE ED               	cp	0edh
    3245/     F88 : C2 83 10            	jp	nz, chk_0FDH
    3246/     F8B :                     
    3247/     F8B : 7E                  	ld	a, (hl)		; get 2nd opcode
    3248/     F8C :                     
    3249/     F8C :                     	; check undefine MC
    3250/     F8C : 01 38 00            	ld	bc, ed_op_tble - ed_op_tbl
    3251/     F8F : 21 3B 12            	ld	hl, ed_op_tbl
    3252/     F92 : ED B1               	cpir
    3253/     F94 : C2 BA 0D            	jp	nz, op_err
    3254/     F97 :                     
    3255/     F97 : 79                  	ld	a, c
    3256/     F98 : FE 06               	cp	6
    3257/     F9A : DA 64 10            	jp	c, ed_4mc
    3258/     F9D : FE 1B               	cp	27
    3259/     F9F : DA 56 10            	jp	c, ed_no_opr
    3260/     FA2 : FE 1E               	cp	30
    3261/     FA4 : DA 43 10            	jp	c, ed_im
    3262/     FA7 : CA 23 10            	jp	z, ed_ld_ar
    3263/     FAA : FE 1F               	cp	31
    3264/     FAC : CA 2C 10            	jp	z, ed_ld_ai
    3265/     FAF : FE 20               	cp	32
    3266/     FB1 : CA 35 10            	jp	z, ed_ld_ra
    3267/     FB4 : FE 21               	cp	33
    3268/     FB6 : CA 3E 10            	jp	z, ed_ld_ia
    3269/     FB9 : FE 26               	cp	38
    3270/     FBB : DA 12 10            	jp	c, ed_adc
    3271/     FBE : FE 2A               	cp	42
    3272/     FC0 : DA FC 0F            	jp	c, ed_sbc
    3273/     FC3 : FE 31               	cp	49
    3274/     FC5 : DA E1 0F            	jp	c, ed_out
    3275/     FC8 :                     
    3276/     FC8 :                     ; c: 49 - 55 : IN r,(C) (r:B,C,D,E,H,L,A)
    3277/     FC8 :                     
    3278/     FC8 : 11 00 13            	ld	de, INstr
    3279/     FCB : CD 57 11            	call	mkopcstr
    3280/     FCE :                     
    3281/     FCE : 79                  	ld	a, c
    3282/     FCF : D6 31               	sub	49
    3283/     FD1 : 4F                  	ld	c, a
    3284/     FD2 : 21 4D 14            	ld	hl, dd_ldtbl
    3285/     FD5 : CD D9 10            	call	get_strBufpoint	; get strung buffer
    3286/     FD8 : CD AA 11            	call	mk_rcs		; "REG, "
    3287/     FDB : 11 90 13            	ld	de, KCKstr
    3288/     FDE : C3 80 11            	jp	cpstr_crlf	; "(C)",cr,lf
    3289/     FE1 :                     
    3290/     FE1 :                     ; c: 42 - 48 : OUT (C),r(r:B,C,D,E,H,L,A)
    3291/     FE1 :                     ed_out:
    3292/     FE1 : 11 FC 12            	ld	de, OUTstr
    3293/     FE4 : CD 57 11            	call	mkopcstr
    3294/     FE7 :                     
    3295/     FE7 : 11 90 13            	ld	de, KCKstr
    3296/     FEA : CD AA 11            	call	mk_rcs		; "(C), "
    3297/     FED :                     
    3298/     FED : 79                  	ld	a, c
    3299/     FEE : D6 2A               	sub	42
    3300/     FF0 : 4F                  	ld	c, a
    3301/     FF1 : E5                  	push	hl
    3302/     FF2 : 21 4D 14            	ld	hl, dd_ldtbl
    3303/     FF5 :                     
    3304/     FF5 :                     ed_out1:
    3305/     FF5 : CD D9 10            	call	get_strBufpoint	; get strung buffer
    3306/     FF8 : E1                  	pop	hl
    3307/     FF9 : C3 80 11            	jp	cpstr_crlf	; "REG",cr,lf
    3308/     FFC :                     
    3309/     FFC :                     ; c: 38 - 41 : SBC HL,rr(rr:BC,DE,HL,SP)
    3310/     FFC :                     ed_sbc:
    3311/     FFC : 11 A6 12            	ld	de, SBCstr
    3312/     FFF : CD 57 11            	call	mkopcstr
    3313/    1002 :                     
    3314/    1002 : 11 03 2E            	ld	de, RNHL
    3315/    1005 : CD AA 11            	call	mk_rcs		; "HL, "
    3316/    1008 :                     
    3317/    1008 : 79                  	ld	a, c
    3318/    1009 : D6 26               	sub	38
    3319/    100B :                     ed_sbc1:
    3320/    100B : 4F                  	ld	c, a
    3321/    100C : E5                  	push	hl
    3322/    100D : 21 D5 13            	ld	hl, INC_DEC_ADDrp
    3323/    1010 : 18 E3               	jr	ed_out1
    3324/    1012 :                     
    3325/    1012 :                     ; c: 34 - 37 : ADC HL,rr(rr:BC,DE,HL,SP)
    3326/    1012 :                     ed_adc:
    3327/    1012 : 11 9E 12            	ld	de, ADCstr
    3328/    1015 : CD 57 11            	call	mkopcstr
    3329/    1018 :                     
    3330/    1018 : 11 03 2E            	ld	de, RNHL
    3331/    101B : CD AA 11            	call	mk_rcs		; "HL, "
    3332/    101E :                     
    3333/    101E : 79                  	ld	a, c
    3334/    101F : D6 22               	sub	34
    3335/    1021 : 18 E8               	jr	ed_sbc1
    3336/    1023 :                     
    3337/    1023 :                     ; c: 30, 31 : LD A,R ; LD A,I
    3338/    1023 :                     ed_ld_ar:
    3339/    1023 : CD A7 11            	call	a_colon_sp	; "A, "
    3340/    1026 : 11 3E 2E            	ld	de, RNR
    3341/    1029 : C3 80 11            	jp	cpstr_crlf	; "R",cr,lf
    3342/    102C :                     	
    3343/    102C :                     ed_ld_ai:
    3344/    102C : CD A7 11            	call	a_colon_sp	; "A, "
    3345/    102F : 11 3C 2E            	ld	de, RNI
    3346/    1032 : C3 80 11            	jp	cpstr_crlf	; "I",cr,lf
    3347/    1035 :                     	
    3348/    1035 :                     ; c: 32, 33 : LD R,A ; LD I,A
    3349/    1035 :                     ed_ld_ra:
    3350/    1035 : 11 3E 2E            	ld	de, RNR
    3351/    1038 :                     ed_ld_ra1:
    3352/    1038 : CD AA 11            	call	mk_rcs		; "R, "
    3353/    103B : C3 72 11            	jp	a_crlf		; "A",cr,lf
    3354/    103E :                     
    3355/    103E :                     ed_ld_ia:
    3356/    103E : 11 3C 2E            	ld	de, RNI
    3357/    1041 : 18 F5               	jr	ed_ld_ra1
    3358/    1043 :                     	
    3359/    1043 :                     ; c: 27, 28, 29 : IM 2, IM 1, IM 0
    3360/    1043 :                     ed_im:
    3361/    1043 : 11 29 13            	ld	de, IMstr
    3362/    1046 : CD 57 11            	call	mkopcstr
    3363/    1049 :                     
    3364/    1049 : 3E 1D               	ld	a, 29
    3365/    104B : 91                  	sub	c
    3366/    104C : C6 30               	add	a, '0'		; '0', '1', '2'
    3367/    104E : 21 E9 BF            	ld	hl, dasm_OprStr
    3368/    1051 : 77                  	ld	(hl), a
    3369/    1052 : 23                  	inc	hl
    3370/    1053 : C3 83 11            	jp	insPostStr
    3371/    1056 :                     
    3372/    1056 :                     ; c: 6 - 26 ed_noopr
    3373/    1056 :                     ed_no_opr:
    3374/    1056 : D6 06               	sub	6
    3375/    1058 : 4F                  	ld	c, a
    3376/    1059 : 06 00               	ld	b, 0
    3377/    105B : 21 5B 14            	ld	hl, ed_noopr
    3378/    105E : CD D9 10            	call	get_strBufpoint		; de : string buffer
    3379/    1061 : C3 57 11            	jp	mkopcstr
    3380/    1064 :                     ;
    3381/    1064 :                     ; check ED 4 byte MC
    3382/    1064 :                     ;
    3383/    1064 :                     ed_4mc:
    3384/    1064 : 3E 04               	ld	a, 4
    3385/    1066 : 32 43 BF            	ld	(mc_Size), a	; 4byte machine code
    3386/    1069 :                     
    3387/    1069 : C5                  	push	bc
    3388/    106A : 79                  	ld	a, c
    3389/    106B : 21 1B 14            	ld	hl, ed_rp_str
    3390/    106E : CD D9 10            	call	get_strBufpoint		; de : string buffer
    3391/    1071 : C1                  	pop	bc
    3392/    1072 : 79                  	ld	a, c
    3393/    1073 : FE 03               	cp	3
    3394/    1075 : DA 26 0F            	jp	c, DD_2a1		; "rr, (nnnnH)",cr,lf
    3395/    1078 :                     					; rr: BC, DE, SP
    3396/    1078 :                     ; "(nnnnH), rr" rr: BC, DE, SP
    3397/    1078 :                     
    3398/    1078 : D5                  	push	de
    3399/    1079 : CD C2 10            	call	get_nnnn
    3400/    107C : CD EE 10            	call	ins_kn4kcs	; "(nnnnH), "
    3401/    107F : D1                  	pop	de
    3402/    1080 : C3 80 11            	jp	cpstr_crlf	; "REG",cr,lf
    3403/    1083 :                     
    3404/    1083 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3405/    1083 :                     	; OPECODE 0FDH check
    3406/    1083 :                     	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    3407/    1083 :                     
    3408/    1083 :                     chk_0FDH:
    3409/    1083 :                     
    3410/    1083 : 11 33 2E            	ld	de, RNIY
    3411/    1086 : ED 53 3F BF         	ld	(reg_xy), de	; save index reg string
    3412/    108A : 11 37 14            	ld	de, addiyrp_tbl
    3413/    108D : ED 53 41 BF         	ld	(xy_srtp), de
    3414/    1091 :                     
    3415/    1091 : C3 F3 0D            	jp	chk_0DDH_1
    3416/    1094 :                     
    3417/    1094 :                     ;-----------------------------------
    3418/    1094 :                     ; make "(REG+nn), " at dasm_OprStr
    3419/    1094 :                     ;	REG : IX or IY
    3420/    1094 :                     ; input de: RNIX, or RNIY
    3421/    1094 :                     ;-----------------------------------
    3422/    1094 :                     kixypnk_cs:
    3423/    1094 : 21 E9 BF            	ld	hl, dasm_OprStr
    3424/    1097 : CD A3 10            	call	mk_kixypnk
    3425/    109A : C3 CF 11            	jp	ins_kmR
    3426/    109D :                     
    3427/    109D :                     ;-----------------------------------
    3428/    109D :                     ; make "(REG+nn)",cr,lf 
    3429/    109D :                     ;	REG : IX or IY
    3430/    109D :                     ; input de: RNIX, or RNIY
    3431/    109D :                     ;       hl: string buffer
    3432/    109D :                     ;-----------------------------------
    3433/    109D :                     kixypnk_crlf:
    3434/    109D : CD A3 10            	call	mk_kixypnk
    3435/    10A0 : C3 83 11            	jp	insPostStr	; CR, LF, 00h
    3436/    10A3 :                     
    3437/    10A3 :                     ;-----------------------------------
    3438/    10A3 :                     ; make "(IX+nn)", "(IY+nn)" string
    3439/    10A3 :                     ; input de: RNIX, or RNIY
    3440/    10A3 :                     ;       hl: string buffer
    3441/    10A3 :                     ;-----------------------------------
    3442/    10A3 :                     mk_kixypnk:
    3443/    10A3 : CD BA 11            	call	ins_kakkoL	; "("
    3444/    10A6 : CD B2 11            	call	st_copy	; IX
    3445/    10A9 : CD C2 10            	call	get_nnnn
    3446/    10AC : 7B                  	ld	a, e		;get number
    3447/    10AD : FE 80               	cp	80h
    3448/    10AF : 38 0C               	jr	c, numPlus	; number plus
    3449/    10B1 : ED 44               	neg			; a = not a + 1
    3450/    10B3 : 5F                  	ld	e, a
    3451/    10B4 : CD CB 11            	call	ins_misR	; -
    3452/    10B7 :                     sv_nnkr:
    3453/    10B7 : CD 25 11            	call	hex2str_asm	; nnh
    3454/    10BA : C3 BE 11            	jp	ins_kakkoR	; ")"
    3455/    10BD :                     	
    3456/    10BD :                     numPlus:
    3457/    10BD : CD C7 11            	call	ins_plsR	; +
    3458/    10C0 : 18 F5               	jr	sv_nnkr
    3459/    10C2 :                     
    3460/    10C2 :                     ; de : nnnn , or d:yy, e:xx
    3461/    10C2 :                     get_nnnn:
    3462/    10C2 : E5                  	push	hl
    3463/    10C3 : 2A 3D BF            	ld	hl, (dasm_adr)
    3464/    10C6 : 23                  	inc	hl		; 2nd opecode address
    3465/    10C7 : 23                  	inc	hl		; operand address
    3466/    10C8 : 5E                  	ld	e, (hl)		; get nn
    3467/    10C9 : 23                  	inc	hl
    3468/    10CA : 56                  	ld	d, (hl)		; d:yy use for "LD (IX+xx), yy"
    3469/    10CB :                     				; d:OP use for 4bytes MC like "DD CB xx OP"
    3470/    10CB :                     				; de : YYXX : ED OP XX YY
    3471/    10CB : E1                  	pop	hl
    3472/    10CC : C9                  	ret
    3473/    10CD :                     
    3474/    10CD :                     ;-------------------------------------------------
    3475/    10CD :                     ; hl: massage table
    3476/    10CD :                     ; bc: found operand point
    3477/    10CD :                     ;
    3478/    10CD :                     ; output: copy strings to dasm_OprStr buffer
    3479/    10CD :                     ;         hl = end point of copied string buffer
    3480/    10CD :                     ;-------------------------------------------------
    3481/    10CD :                     mk_str:
    3482/    10CD : CD D9 10            	call	get_strBufpoint
    3483/    10D0 : 21 E9 BF            	ld	hl, dasm_OprStr
    3484/    10D3 : C3 B2 11            	jp	st_copy
    3485/    10D6 :                     
    3486/    10D6 :                     ;------------------------------------------------
    3487/    10D6 :                     ; get register strings address
    3488/    10D6 :                     ; input bc: string buffer offset
    3489/    10D6 :                     ; output de: register strings address
    3490/    10D6 :                     ;------------------------------------------------
    3491/    10D6 :                     get_rstg_off:
    3492/    10D6 : 21 AD 13            	ld	hl, disRegTbl
    3493/    10D9 :                     
    3494/    10D9 :                     ;-------------------------------------------------
    3495/    10D9 :                     ; input
    3496/    10D9 :                     ;	bc: found operand point
    3497/    10D9 :                     ;	hl: massage table
    3498/    10D9 :                     ; output: 
    3499/    10D9 :                     ;	DE : string point
    3500/    10D9 :                     ;-------------------------------------------------
    3501/    10D9 :                     get_strBufpoint:
    3502/    10D9 : CB 21               	sla	c
    3503/    10DB : CB 10               	rl	b		; bc *=2
    3504/    10DD : 09                  	add	hl, bc		; get operand string point
    3505/    10DE : 5E                  	ld	e, (hl)
    3506/    10DF : 23                  	inc	hl
    3507/    10E0 : 56                  	ld	d, (hl)
    3508/    10E1 : C9                  	ret
    3509/    10E2 :                     
    3510/    10E2 :                     ;------------------------------------------------
    3511/    10E2 :                     ; insert "nnH", CR, LF to buffer
    3512/    10E2 :                     ;input e: value
    3513/    10E2 :                     ;      hl: string buffer
    3514/    10E2 :                     ;------------------------------------------------
    3515/    10E2 :                     mk_n2crlf:
    3516/    10E2 : CD 25 11            	call	hex2str_asm
    3517/    10E5 : C3 83 11            	jp	insPostStr
    3518/    10E8 :                     
    3519/    10E8 :                     ;------------------------------------------------
    3520/    10E8 :                     ; insert "nnnnH", CR, LF to buffer
    3521/    10E8 :                     ;input de: value
    3522/    10E8 :                     ;      hl: string buffer
    3523/    10E8 :                     ;------------------------------------------------
    3524/    10E8 :                     mk_n4crlf:
    3525/    10E8 : CD 14 11            	call	hex4str_asm
    3526/    10EB : C3 83 11            	jp	insPostStr
    3527/    10EE :                     
    3528/    10EE :                     ;------------------------------------------------
    3529/    10EE :                     ; insert "(nnnnH), " to buffer dasm_OprStr
    3530/    10EE :                     ;input de: value
    3531/    10EE :                     ;
    3532/    10EE :                     ; make "(nnnnH), " to dasm_OprStr buffer
    3533/    10EE :                     ; output hl: end point of string buffer
    3534/    10EE :                     ;------------------------------------------------
    3535/    10EE :                     ins_kn4kcs:
    3536/    10EE : 21 E9 BF            	ld	hl, dasm_OprStr	;operand str buffer
    3537/    10F1 : CD BA 11            	call	ins_kakkoL	; "("
    3538/    10F4 : CD 14 11            	call	hex4str_asm
    3539/    10F7 : CD BE 11            	call	ins_kakkoR	; ")"
    3540/    10FA : C3 CF 11            	jp	ins_kmR		; ", "
    3541/    10FD :                     
    3542/    10FD :                     ;------------------------------------------------
    3543/    10FD :                     ; insert "(nnnnH)" to buffer
    3544/    10FD :                     ;input de: value
    3545/    10FD :                     ;      hl: string buffer
    3546/    10FD :                     ;------------------------------------------------
    3547/    10FD :                     mk_kn4k:
    3548/    10FD : CD BA 11            	call	ins_kakkoL	; "("
    3549/    1100 : CD 14 11            	call	hex4str_asm
    3550/    1103 : C3 BE 11            	jp	ins_kakkoR	; ")"
    3551/    1106 :                     
    3552/    1106 :                     ;------------------------------------------------
    3553/    1106 :                     ; Make address string from branch relative value
    3554/    1106 :                     ; input hl: string buffer pointer
    3555/    1106 :                     ; output *hl= "nnnnH",cr,lf,0
    3556/    1106 :                     ;------------------------------------------------
    3557/    1106 :                     mkRel_str:
    3558/    1106 : E5                  	push	hl
    3559/    1107 : 2A 3D BF            	ld	hl, (dasm_adr)
    3560/    110A : CD 65 06            	call	Rel_adr_c	; return hl : target addr
    3561/    110D : EB                  	ex	de, hl		; hl: buffer, de: addr value
    3562/    110E : E1                  	pop	hl
    3563/    110F : CD 14 11            	call	hex4str_asm
    3564/    1112 : 18 6F               	jr	insPostStr
    3565/    1114 :                     	
    3566/    1114 :                     ;------------------------------------------------
    3567/    1114 :                     ;input de: value, hl: save baffer.
    3568/    1114 :                     ;output 4hex chars(asm format)
    3569/    1114 :                     ;	(ex). "0FFFFH"
    3570/    1114 :                     ;             "1234H"
    3571/    1114 :                     ;       hl : hl = hl + 5(or 6); *hl=0
    3572/    1114 :                     ;------------------------------------------------
    3573/    1114 :                     hex4str_asm:
    3574/    1114 : 7A                  	ld	a, d
    3575/    1115 : FE A0               	cp	0a0h
    3576/    1117 : 38 04               	jr	c, h4sa_1
    3577/    1119 : 3E 30               	ld	a, '0'
    3578/    111B : 77                  	ld	(hl), a
    3579/    111C : 23                  	inc	hl
    3580/    111D :                     
    3581/    111D :                     h4sa_1:
    3582/    111D : CD 33 11            	call	hex4str
    3583/    1120 :                     h4sa_2:
    3584/    1120 : 3E 48               	ld	a, 'H'
    3585/    1122 : C3 C0 11            	jp	ikk_1
    3586/    1125 :                     
    3587/    1125 :                     ;------------------------------------------------
    3588/    1125 :                     ;input e: value, hl: save baffer.
    3589/    1125 :                     ;output: 2 hex chars(asm format)
    3590/    1125 :                     ;	(ex). "0FFH"
    3591/    1125 :                     ;             "12H"
    3592/    1125 :                     ;       hl : hl = hl + 3(or 4); *hl=0
    3593/    1125 :                     ;------------------------------------------------
    3594/    1125 :                     hex2str_asm:
    3595/    1125 : 7B                  	ld	a, e
    3596/    1126 : FE A0               	cp	0a0h
    3597/    1128 : 38 04               	jr	c, h2sa_1
    3598/    112A : 3E 30               	ld	a, '0'
    3599/    112C : 77                  	ld	(hl), a
    3600/    112D : 23                  	inc	hl
    3601/    112E :                     
    3602/    112E :                     h2sa_1:
    3603/    112E : CD 3B 11            	call	hex2str
    3604/    1131 : 18 ED               	jr	h4sa_2
    3605/    1133 :                     
    3606/    1133 :                     ;------------------------------------------------
    3607/    1133 :                     ;input de: value, hl: save baffer.
    3608/    1133 :                     ;output: 4 hex chras in save buffer
    3609/    1133 :                     ;	 hl = hl + 4
    3610/    1133 :                     ;------------------------------------------------
    3611/    1133 :                     hex4str:
    3612/    1133 : 7A                  	ld	a, d
    3613/    1134 : CD 44 11            	call	h2s_n1
    3614/    1137 : 7A                  	ld	a, d
    3615/    1138 : CD 48 11            	call	h2s_n2
    3616/    113B :                     
    3617/    113B :                     ;------------------------------------------------
    3618/    113B :                     ;input e: value, hl: save baffer.
    3619/    113B :                     ;output: 2 hex chras in save buffer
    3620/    113B :                     ;	 hl = hl + 2
    3621/    113B :                     ;------------------------------------------------
    3622/    113B :                     hex2str:
    3623/    113B : 7B                  	ld	a, e
    3624/    113C : CD 44 11            	call	h2s_n1
    3625/    113F : 7B                  	ld	a, e
    3626/    1140 : CD 48 11            	call	h2s_n2
    3627/    1143 : C9                  	ret
    3628/    1144 :                     
    3629/    1144 :                     h2s_n1:
    3630/    1144 : 0F                  	rrca
    3631/    1145 : 0F                  	rrca
    3632/    1146 : 0F                  	rrca
    3633/    1147 : 0F                  	rrca
    3634/    1148 :                     h2s_n2:
    3635/    1148 : E6 0F               	and	0fh
    3636/    114A : F6 30               	or	30h
    3637/    114C : FE 3A               	cp	3aH
    3638/    114E : 38 70               	jr	c, ikk_1	; '0' to '9'
    3639/    1150 : C6 07               	add	a, 07h		; 'A' to 'F'
    3640/    1152 : 18 6C               	jr	ikk_1
    3641/    1154 :                     
    3642/    1154 :                     add_opstr:
    3643/    1154 : 11 9A 12            	ld	de, ADDstr
    3644/    1157 :                     ;-----------------------------------
    3645/    1157 :                     ; make opecode strings
    3646/    1157 :                     ; input de : opecode strings
    3647/    1157 :                     ;-----------------------------------
    3648/    1157 :                     mkopcstr:
    3649/    1157 : F5                  	push	af
    3650/    1158 : C5                  	push	bc
    3651/    1159 : 06 08               	ld	b, 8	;tab size
    3652/    115B : 21 E1 BF            	ld	hl, dasm_OpcStr
    3653/    115E :                     dmkstr0:
    3654/    115E : 1A                  	ld	a, (de)
    3655/    115F : B7                  	or	a
    3656/    1160 : 28 06               	jr	z, dmkst1
    3657/    1162 : 77                  	ld	(hl), a
    3658/    1163 : 23                  	inc	hl
    3659/    1164 : 13                  	inc	de
    3660/    1165 : 05                  	dec	b
    3661/    1166 : 18 F6               	jr	dmkstr0
    3662/    1168 :                     dmkst1:
    3663/    1168 : 3E 20               	ld	a, ' '
    3664/    116A :                     dmkst2:
    3665/    116A : 77                  	ld	(hl), a
    3666/    116B : 23                  	inc	hl
    3667/    116C : 05                  	dec	b
    3668/    116D : 20 FB               	jr	nz, dmkst2
    3669/    116F : C1                  	pop	bc
    3670/    1170 : F1                  	pop	af
    3671/    1171 : C9                  	ret
    3672/    1172 :                     
    3673/    1172 :                     ;
    3674/    1172 :                     ; "REG",CR,LF
    3675/    1172 :                     ;
    3676/    1172 :                     a_crlf:
    3677/    1172 : 11 F3 2D            	ld	de, RNA
    3678/    1175 : 18 09               	jr	cpstr_crlf	; "A",CR,LF
    3679/    1177 :                     ;bc_crlf:
    3680/    1177 :                     ;	ld	de, RNBC
    3681/    1177 :                     ;	jr	cpstr_crlf
    3682/    1177 :                     ;de_crlf:
    3683/    1177 :                     ;	ld	de, RNDE
    3684/    1177 :                     ;	jr	cpstr_crlf
    3685/    1177 :                     ix_crlf:
    3686/    1177 : ED 5B 3F BF         	ld	de, (reg_xy)
    3687/    117B : 18 03               	jr	cpstr_crlf
    3688/    117D :                     ;sp_crlf:
    3689/    117D :                     ;	ld	de, RNSP
    3690/    117D :                     ;	jr	cpstr_crlf
    3691/    117D :                     hl_crlf:
    3692/    117D : 11 03 2E            	ld	de, RNHL
    3693/    1180 :                     cpstr_crlf:
    3694/    1180 : CD B2 11            	call	st_copy		; "REG"
    3695/    1183 :                     	
    3696/    1183 :                     ;-----------------------------------
    3697/    1183 :                     ; insert CR, LF, 00H(end delimiter)
    3698/    1183 :                     ; input hl : insert buffer
    3699/    1183 :                     ;-----------------------------------
    3700/    1183 :                     insPostStr:
    3701/    1183 : 3E 0D               	ld	a, CR
    3702/    1185 : 77                  	ld	(hl), a		; CR code
    3703/    1186 : 23                  	inc	hl
    3704/    1187 : 3E 0A               	ld	a, LF
    3705/    1189 : 77                  	ld	(hl), a		; LF code
    3706/    118A : 23                  	inc	hl
    3707/    118B : AF                  	xor	a
    3708/    118C : 77                  	ld	(hl), a		; end delimiter
    3709/    118D : C9                  	ret
    3710/    118E :                     
    3711/    118E :                     mk_krk_1:
    3712/    118E : 21 E9 BF            	ld	hl, dasm_OprStr
    3713/    1191 :                     ;----------------------------
    3714/    1191 :                     ; insert "(Reg)" to buffer
    3715/    1191 :                     ;
    3716/    1191 :                     ; input de: register string
    3717/    1191 :                     ;	hl: save buffer
    3718/    1191 :                     ;----------------------------
    3719/    1191 :                     mk_krk:
    3720/    1191 : CD BA 11            	call	ins_kakkoL	; "("
    3721/    1194 : CD B2 11            	call	st_copy		; "REG"
    3722/    1197 : 18 25               	jr	ins_kakkoR	; ")"
    3723/    1199 :                     
    3724/    1199 :                     ;----------------------------
    3725/    1199 :                     ; insert "(Reg), " to dasm_OprStr
    3726/    1199 :                     ;
    3727/    1199 :                     ; input de: register string
    3728/    1199 :                     ;----------------------------
    3729/    1199 :                     mk_krkcs:
    3730/    1199 : 21 E9 BF            	ld	hl, dasm_OprStr
    3731/    119C : CD BA 11            	call	ins_kakkoL	; "("
    3732/    119F : CD B2 11            	call	st_copy		; "REG"
    3733/    11A2 : CD BE 11            	call	ins_kakkoR	; ")"
    3734/    11A5 : 18 28               	jr	ins_kmR		; ", "
    3735/    11A7 :                     
    3736/    11A7 :                     ;----------------------------
    3737/    11A7 :                     ; insert "A, " to dasm_OprStr
    3738/    11A7 :                     ;----------------------------
    3739/    11A7 :                     a_colon_sp:
    3740/    11A7 : 11 F3 2D            	ld	de, RNA
    3741/    11AA :                     ;----------------------------
    3742/    11AA :                     ; insert "Reg, " to dasm_OprStr
    3743/    11AA :                     ;
    3744/    11AA :                     ; input de: register string
    3745/    11AA :                     ;----------------------------
    3746/    11AA :                     mk_rcs:
    3747/    11AA : 21 E9 BF            	ld	hl, dasm_OprStr
    3748/    11AD : CD B2 11            	call	st_copy		; "REG"
    3749/    11B0 : 18 1D               	jr	ins_kmR		; ", "
    3750/    11B2 :                     
    3751/    11B2 :                     ;-------------------------------------------------
    3752/    11B2 :                     ; copy string to output buffer
    3753/    11B2 :                     ; input:
    3754/    11B2 :                     ;	de : string point
    3755/    11B2 :                     ;	hl : output buffer
    3756/    11B2 :                     ;-------------------------------------------------
    3757/    11B2 :                     st_copy:
    3758/    11B2 : 1A                  	ld	a, (de)
    3759/    11B3 : 77                  	ld	(hl), a
    3760/    11B4 : B7                  	or	a
    3761/    11B5 : C8                  	ret	z	; return after coping delimiter
    3762/    11B6 :                     			; hl : delimiter position
    3763/    11B6 : 23                  	inc	hl
    3764/    11B7 : 13                  	inc	de
    3765/    11B8 : 18 F8               	jr	st_copy
    3766/    11BA :                     
    3767/    11BA :                     ;--------------
    3768/    11BA :                     ; insert "("
    3769/    11BA :                     ;--------------
    3770/    11BA :                     ins_kakkoL:
    3771/    11BA : 3E 28               	ld	a, '('
    3772/    11BC : 18 02               	jr	ikk_1
    3773/    11BE :                     	
    3774/    11BE :                     ;--------------
    3775/    11BE :                     ; insert ")"
    3776/    11BE :                     ;--------------
    3777/    11BE :                     ins_kakkoR:
    3778/    11BE : 3E 29               	ld	a, ')'
    3779/    11C0 :                     ikk_1:
    3780/    11C0 : 77                  	ld	(hl), a
    3781/    11C1 : 23                  	inc	hl
    3782/    11C2 : C9                  	ret
    3783/    11C3 :                     
    3784/    11C3 :                     ;--------------
    3785/    11C3 :                     ; insert " "
    3786/    11C3 :                     ;--------------
    3787/    11C3 :                     ins_spcR:
    3788/    11C3 : 3E 20               	ld	a, ' '
    3789/    11C5 : 18 F9               	jr	ikk_1
    3790/    11C7 :                     
    3791/    11C7 :                     ;--------------
    3792/    11C7 :                     ; insert "+"
    3793/    11C7 :                     ;--------------
    3794/    11C7 :                     ins_plsR:
    3795/    11C7 : 3E 2B               	ld	a, '+'
    3796/    11C9 : 18 F5               	jr	ikk_1
    3797/    11CB :                     
    3798/    11CB :                     ;--------------
    3799/    11CB :                     ; insert "-"
    3800/    11CB :                     ;--------------
    3801/    11CB :                     ins_misR:
    3802/    11CB : 3E 2D               	ld	a, '-'
    3803/    11CD : 18 F1               	jr	ikk_1
    3804/    11CF :                     
    3805/    11CF :                     ;--------------
    3806/    11CF :                     ; insert ", "
    3807/    11CF :                     ;--------------
    3808/    11CF :                     ins_kmR:
    3809/    11CF : 3E 2C               	ld	a, ','
    3810/    11D1 : CD C0 11            	call	ikk_1
    3811/    11D4 : 18 ED               	jr	ins_spcR
    3812/    11D6 :                     
    3813/    11D6 :                     ;------------------------------------------
    3814/    11D6 :                     ; Dis assemble tables
    3815/    11D6 :                     ;------------------------------------------
    3816/    11D6 :                     oth_1op_s:
    3817/    11D6 : 00                  	DB	00H	; NOP
    3818/    11D7 : 07                  	DB	07H	; RLCA
    3819/    11D8 : 0F                  	DB	0FH	; RRCA
    3820/    11D9 : 17                  	DB	17H	; RLA
    3821/    11DA : 1F                  	DB	1FH	; RRA
    3822/    11DB : 27                  	DB	27H	; DAA
    3823/    11DC : 2F                  	DB	2FH	; CPL
    3824/    11DD : 37                  	DB	37H	; SCF
    3825/    11DE : 3F                  	DB	3FH	; CCF
    3826/    11DF : C9                  	DB	0C9H	; RET
    3827/    11E0 : D9                  	DB	0D9H	; EXX
    3828/    11E1 : F3                  	DB	0F3H	; DI
    3829/    11E2 : FB                  	DB	0FBH	; EI
    3830/    11E3 :                     oth_1op_e:
    3831/    11E3 :                     
    3832/    11E3 :                     INC_OPCDTBLS:
    3833/    11E3 : 04                  	DB	04H	; INC	B
    3834/    11E4 : 0C                  	DB	0CH	; INC	C
    3835/    11E5 : 14                  	DB	14H	; INC	D
    3836/    11E6 : 1C                  	DB	1CH	; INC	E
    3837/    11E7 : 24                  	DB	24H	; INC	H
    3838/    11E8 : 2C                  	DB	2CH	; INC	L
    3839/    11E9 : 34                  	DB	34H	; INC	(HL)
    3840/    11EA : 3C                  	DB	3CH	; INC	A
    3841/    11EB :                     INC_OPCDTBLE:
    3842/    11EB :                     
    3843/    11EB :                     DEC_OPCDTBLS:
    3844/    11EB : 05                  	DB	05H	; DEC	B
    3845/    11EC : 0D                  	DB	0DH	; DEC	C
    3846/    11ED : 15                  	DB	15H	; DEC	D
    3847/    11EE : 1D                  	DB	1DH	; DEC	E
    3848/    11EF : 25                  	DB	25H	; DEC	H
    3849/    11F0 : 2D                  	DB	2DH	; DEC	L
    3850/    11F1 : 35                  	DB	35H	; DEC	(HL)
    3851/    11F2 : 3D                  	DB	3DH	; DEC	A
    3852/    11F3 :                     DEC_OPCDTBLE:
    3853/    11F3 :                     
    3854/    11F3 :                     inc_rp_s:
    3855/    11F3 : 03                  	DB	03H	; INC	BC
    3856/    11F4 : 13                  	DB	13H	; INC	DE
    3857/    11F5 : 23                  	DB	23H	; INC	HL
    3858/    11F6 : 33                  	DB	33H	; INC	SP
    3859/    11F7 :                     inc_rp_e:
    3860/    11F7 :                     
    3861/    11F7 :                     dec_rp_s:
    3862/    11F7 : 0B                  	DB	0BH	; DEC	BC
    3863/    11F8 : 1B                  	DB	1BH	; DEC	DE
    3864/    11F9 : 2B                  	DB	2BH	; DEC	HL
    3865/    11FA : 3B                  	DB	3BH	; DEC	SP
    3866/    11FB :                     dec_rp_e:
    3867/    11FB :                     
    3868/    11FB :                     add_rp_s:
    3869/    11FB : 09                  	DB	09H	; ADD	HL,BC
    3870/    11FC : 19                  	DB	19H	; ADD	HL,DE
    3871/    11FD : 29                  	DB	29H	; ADD	HL,HL
    3872/    11FE : 39                  	DB	39H	; ADD	HL,SP
    3873/    11FF :                     add_rp_e:
    3874/    11FF :                     
    3875/    11FF :                     pop_rp_s:
    3876/    11FF : C1                  	DB	0C1H	; POP	BC
    3877/    1200 : D1                  	DB	0D1H	; POP	DE
    3878/    1201 : E1                  	DB	0E1H	; POP	HL
    3879/    1202 : F1                  	DB	0F1H	; POP	AF
    3880/    1203 :                     pop_rp_e:
    3881/    1203 :                     
    3882/    1203 :                     push_rp_s:
    3883/    1203 : C5                  	DB	0C5H	; PUSH	BC
    3884/    1204 : D5                  	DB	0D5H	; PUSH	DE
    3885/    1205 : E5                  	DB	0E5H	; PUSH	HL
    3886/    1206 : F5                  	DB	0F5H	; PUSH	AF
    3887/    1207 :                     push_rp_e:
    3888/    1207 :                     
    3889/    1207 :                     dd_ld_tbl:
    3890/    1207 : 46                  	DB	46h	; nn: LD B,(IX+nn)
    3891/    1208 : 4E                  	DB	4Eh	; nn: LD C,(IX+nn)
    3892/    1209 : 56                  	DB	56h	; nn: LD D,(IX+nn)
    3893/    120A : 5E                  	DB	5Eh	; nn: LD E,(IX+nn)
    3894/    120B : 66                  	DB	66h	; nn: LD H,(IX+nn)
    3895/    120C : 6E                  	DB	6Eh	; nn: LD L,(IX+nn)
    3896/    120D : 7E                  	DB	7Eh	; nn: LD A,(IX+nn)
    3897/    120E :                     
    3898/    120E : 70                  	DB	70h	; nn: LD (IX+nn),B
    3899/    120F : 71                  	DB	71h	; nn: LD (IX+nn),C
    3900/    1210 : 72                  	DB	72h	; nn: LD (IX+nn),D
    3901/    1211 : 73                  	DB	73h	; nn: LD (IX+nn),E
    3902/    1212 : 74                  	DB	74h	; nn: LD (IX+nn),H
    3903/    1213 : 75                  	DB	75h	; nn: LD (IX+nn),L
    3904/    1214 : 77                  	DB	77h	; nn: LD (IX+nn),A
    3905/    1215 :                     dd_ld_tble:
    3906/    1215 :                     
    3907/    1215 :                     dd_log_tbl:
    3908/    1215 : 96                  	DB	96h	; nn: SUB (IX+nn)
    3909/    1216 : A6                  	DB	0A6h	; nn: AND (IX+nn)
    3910/    1217 : AE                  	DB	0AEh	; nn: XOR (IX+nn)
    3911/    1218 : B6                  	DB	0B6h	; nn: OR  (IX+nn)
    3912/    1219 : BE                  	DB	0BEh	; nn: CP  (IX+nn)
    3913/    121A : 34                  	DB	34h	; nn: INC (IX+nn)
    3914/    121B : 35                  	DB	35h	; nn: DEC (IX+nn)
    3915/    121C :                     dd_log_tble:
    3916/    121C :                     
    3917/    121C :                     dd_rt_tbles:
    3918/    121C : 06                  	DB	06h	; RLC (IX+nn)
    3919/    121D : 0E                  	DB	0Eh	; RRC (IX+nn)
    3920/    121E : 16                  	DB	16h	; RL  (IX+nn)
    3921/    121F : 1E                  	DB	1Eh	; RR  (IX+nn)
    3922/    1220 : 26                  	DB	26h	; SLA (IX+nn)
    3923/    1221 : 2E                  	DB	2Eh	; SRA (IX+nn)
    3924/    1222 : 3E                  	DB	3Eh	; SRL (IX+nn)
    3925/    1223 :                     dd_rt_tble:
    3926/    1223 :                     
    3927/    1223 :                     ; use checking undefine MC ( DD CB nn XX )
    3928/    1223 :                     dd_bit_opTbl:
    3929/    1223 : 46                  	DB	46h	; BIT 0,(IX+12H)
    3930/    1224 : 4E                  	DB	4Eh	; BIT 1,(IX+12H)
    3931/    1225 : 56                  	DB	56h	; BIT 2,(IX+12H)
    3932/    1226 : 5E                  	DB	5Eh	; BIT 3,(IX+12H)
    3933/    1227 : 66                  	DB	66h	; BIT 4,(IX+12H)
    3934/    1228 : 6E                  	DB	6Eh	; BIT 5,(IX+12H)
    3935/    1229 : 76                  	DB	76h	; BIT 6,(IX+12H)
    3936/    122A : 7E                  	DB	7Eh	; BIT 7,(IX+12H)
    3937/    122B : 86                  	DB	86h	; RES 0,(IX+12H)
    3938/    122C : 8E                  	DB	8Eh	; RES 1,(IX+12H)
    3939/    122D : 96                  	DB	96h	; RES 2,(IX+12H)
    3940/    122E : 9E                  	DB	9Eh	; RES 3,(IX+12H)
    3941/    122F : A6                  	DB	0A6h	; RES 4,(IX+12H)
    3942/    1230 : AE                  	DB	0AEh	; RES 5,(IX+12H)
    3943/    1231 : B6                  	DB	0B6h	; RES 6,(IX+12H)
    3944/    1232 : BE                  	DB	0BEh	; RES 7,(IX+12H)
    3945/    1233 : C6                  	DB	0C6h	; SET 0,(IX+12H)
    3946/    1234 : CE                  	DB	0CEh	; SET 1,(IX+12H)
    3947/    1235 : D6                  	DB	0D6h	; SET 2,(IX+12H)
    3948/    1236 : DE                  	DB	0DEh	; SET 3,(IX+12H)
    3949/    1237 : E6                  	DB	0E6h	; SET 4,(IX+12H)
    3950/    1238 : EE                  	DB	0EEh	; SET 5,(IX+12H)
    3951/    1239 : F6                  	DB	0F6h	; SET 6,(IX+12H)
    3952/    123A : FE                  	DB	0FEh	; SET 7,(IX+12H)
    3953/    123B :                     dd_bit_opTble:
    3954/    123B :                     
    3955/    123B :                     ; use checking undefine MC ( ED XX ....)
    3956/    123B :                     ed_op_tbl:
    3957/    123B : 40                  	DB	40h	; 55:IN  B,(C)
    3958/    123C : 48                   	DB	48h	; 54:IN  C,(C)
    3959/    123D : 50                  	DB	50h	; 53:IN  D,(C)
    3960/    123E : 58                  	DB	58h	; 52:IN  E,(C)
    3961/    123F : 60                  	DB	60h	; 51:IN  H,(C)
    3962/    1240 : 68                  	DB	68h	; 50:IN  L,(C)
    3963/    1241 : 78                  	DB	78h	; 49:IN  A,(C)
    3964/    1242 :                     
    3965/    1242 : 41                  	DB	41h	; 48:OUT (C),B
    3966/    1243 : 49                  	DB	49h	; 47:OUT (C),C
    3967/    1244 : 51                  	DB	51h	; 46:OUT (C),D
    3968/    1245 : 59                  	DB	59h	; 45:OUT (C),E
    3969/    1246 : 61                  	DB	61h	; 44:OUT (C),H
    3970/    1247 : 69                  	DB	69h	; 43:OUT (C),L
    3971/    1248 : 79                  	DB	79h	; 42:OUT (C),A
    3972/    1249 :                     
    3973/    1249 : 42                  	DB	42h	; 41:SBC HL,BC
    3974/    124A : 52                  	DB	52h	; 40:SBC HL,DE
    3975/    124B : 62                  	DB	62h	; 39:SBC HL,HL
    3976/    124C : 72                  	DB	72h	; 38:SBC HL,SP
    3977/    124D :                     
    3978/    124D : 4A                  	DB	4Ah	; 37:ADC HL,BC
    3979/    124E : 5A                  	DB	5Ah	; 36:ADC HL,DE
    3980/    124F : 6A                  	DB	6Ah	; 35:ADC HL,HL
    3981/    1250 : 7A                  	DB	7Ah	; 34:ADC HL,SP
    3982/    1251 :                     
    3983/    1251 : 47                  	DB	47h	; 33:LD I,A
    3984/    1252 : 4F                  	DB	4Fh	; 32:LD R,A
    3985/    1253 : 57                  	DB	57h	; 31:LD A,I
    3986/    1254 : 5F                  	DB	5Fh	; 30:LD A,R
    3987/    1255 :                     
    3988/    1255 : 46                  	DB	46h	; 29:IM  0
    3989/    1256 : 56                  	DB	56h	; 28:IM  1
    3990/    1257 : 5E                  	DB	5Eh	; 27:IM  2
    3991/    1258 :                     
    3992/    1258 : 44                  	DB	44h	; 26:NEG
    3993/    1259 : 45                  	DB	45h	; 25:RETN
    3994/    125A : 4D                  	DB	4Dh	; 24:RETI
    3995/    125B : 67                  	DB	67h	; 23:RRD
    3996/    125C : 6F                  	DB	6Fh	; 22:RLD
    3997/    125D : A0                  	DB	0A0h	; 21:LDI
    3998/    125E : A1                  	DB	0A1h	; 20:CPI
    3999/    125F : A2                  	DB	0A2h	; 19:INI
    4000/    1260 : A3                  	DB	0A3h	; 18:OUTI
    4001/    1261 : A8                  	DB	0A8h	; 17:LDD
    4002/    1262 : A9                  	DB	0A9h	; 16:CPD
    4003/    1263 : AA                  	DB	0AAh	; 15:IND
    4004/    1264 : AB                  	DB	0ABh	; 14:OUTD
    4005/    1265 : B0                  	DB	0B0h	; 13:LDIR
    4006/    1266 : B1                  	DB	0B1h	; 12:CPIR
    4007/    1267 : B2                  	DB	0B2h	; 11:INIR
    4008/    1268 : B3                  	DB	0B3h	; 10:OTIR
    4009/    1269 : B8                  	DB	0B8h	; 09:LDDR
    4010/    126A : B9                  	DB	0B9h	; 08:CPDR
    4011/    126B : BA                  	DB	0BAh	; 07:INDR
    4012/    126C : BB                  	DB	0BBh	; 06:OTDR
    4013/    126D :                     
    4014/    126D : 43                  	DB	43h	; 05:LD (nnnn),BC
    4015/    126E : 53                  	DB	53h	; 04:LD (nnnn),DE
    4016/    126F : 73                  	DB	73h	; 03:LD (nnnn),SP
    4017/    1270 :                     
    4018/    1270 : 4B                  	DB	4Bh	; 02:LD BC,(nnnn)
    4019/    1271 : 5B                  	DB	5Bh	; 01:LD DE,(nnnn)
    4020/    1272 : 7B                  	DB	7Bh	; 00:LD SP,(nnnn)
    4021/    1273 :                     ed_op_tble:
    4022/    1273 :                     
    4023/    1273 : 41 46 00            RNAF:		DB	"AF",00H
    4024/    1276 : 41 46 27 00         RNAFX:		DB	"AF'",00H
    4025/    127A :                     
    4026/    127A : 52 45 54 00         RETstr:		db	"RET", 00h
    4027/    127E : 4A 50 00            JPstr:		db	"JP", 00h
    4028/    1281 : 4A 52 00            JRstr:		db	"JR", 00h
    4029/    1284 : 44 4A 4E 5A 00      DJNZstr:	db	"DJNZ", 00h
    4030/    1289 : 43 41 4C 4C 00      CALLstr:	db	"CALL", 00h
    4031/    128E : 52 53 54 00         RSTstr:		db	"RST", 00h
    4032/    1292 : 4C 44 00            LDstr:		db	"LD", 00h
    4033/    1295 : 48 41 4C 54 00      HLTstr:		db	"HALT", 00h
    4034/    129A : 41 44 44 00         ADDstr:		db	"ADD", 00h
    4035/    129E : 41 44 43 00         ADCstr:		db	"ADC", 00h
    4036/    12A2 : 53 55 42 00         SUBstr:		db	"SUB", 00h
    4037/    12A6 : 53 42 43 00         SBCstr:		db	"SBC", 00h
    4038/    12AA : 41 4E 44 00         ANDstr:		db	"AND", 00h
    4039/    12AE : 58 4F 52 00         XORstr:		db	"XOR", 00h
    4040/    12B2 : 4F 52 00            ORstr:		db	"OR", 00h
    4041/    12B5 : 43 50 00            CPstr:		db	"CP", 00h
    4042/    12B8 : 49 4E 43 00         INCstr:		db	"INC", 00h
    4043/    12BC : 44 45 43 00         DECstr:		db	"DEC", 00h
    4044/    12C0 : 50 4F 50 00         POPstr:		db	"POP", 00h
    4045/    12C4 : 50 55 53 48 00      PUSHstr:	db	"PUSH",00h
    4046/    12C9 : 45 58 00            EXstr:		db	"EX", 00h
    4047/    12CC :                     
    4048/    12CC : 45 58 58 00         EXXstr:		db	"EXX", 00h
    4049/    12D0 : 4E 4F 50 00         NOPstr:		db	"NOP", 00h
    4050/    12D4 : 52 4C 43 41 00      RLCAstr:	db	"RLCA", 00h
    4051/    12D9 : 52 52 43 41 00      RRCAstr:	db	"RRCA", 00h
    4052/    12DE : 52 4C 41 00         RLAstr:		db	"RLA", 00h
    4053/    12E2 : 52 52 41 00         RRAstr:		db	"RRA", 00h
    4054/    12E6 : 44 41 41 00         DAAstr:		db	"DAA", 00h
    4055/    12EA : 43 50 4C 00         CPLstr:		db	"CPL", 00h
    4056/    12EE : 53 43 46 00         SCFstr:		db	"SCF", 00h
    4057/    12F2 : 43 43 46 00         CCFstr:		db	"CCF", 00h
    4058/    12F6 : 44 49 00            DIstr:		db	"DI", 00h
    4059/    12F9 : 45 49 00            EIstr:		db	"EI", 00h
    4060/    12FC :                     
    4061/    12FC : 4F 55 54 00         OUTstr:		db	"OUT", 00h
    4062/    1300 : 49 4E 00            INstr:		db	"IN", 00h
    4063/    1303 :                     
    4064/    1303 : 52 4C 43 00         RLCstr		db	"RLC", 00h
    4065/    1307 : 52 52 43 00         RRCstr		db	"RRC", 00h
    4066/    130B : 52 4C 00            RLstr		db	"RL", 00h
    4067/    130E : 52 52 00            RRstr		db	"RR", 00h
    4068/    1311 : 53 4C 41 00         SLAstr		db	"SLA", 00h
    4069/    1315 : 53 52 41 00         SRAstr		db	"SRA", 00h
    4070/    1319 : 53 52 4C 00         SRLstr		db	"SRL", 00h
    4071/    131D : 42 49 54 00         BITstr		db	"BIT", 00h
    4072/    1321 : 52 45 53 00         RESstr		db	"RES", 00h
    4073/    1325 : 4E 45 47 00         NEGstr		db	"NEG", 00h
    4074/    1329 : 49 4D 00            IMstr		db	"IM", 00h
    4075/    132C : 52 52 44 00         RRDstr		db	"RRD", 00h
    4076/    1330 : 52 4C 44 00         RLDstr		db	"RLD", 00h
    4077/    1334 : 4C 44 49 00         LDIstr		db	"LDI", 00h
    4078/    1338 : 43 50 49 00         CPIstr		db	"CPI", 00h
    4079/    133C : 49 4E 49 00         INIstr		db	"INI", 00h
    4080/    1340 : 4F 55 54 49 00      OUTIstr		db	"OUTI", 00h
    4081/    1345 : 4C 44 44 00         LDDstr		db	"LDD", 00h
    4082/    1349 : 43 50 44 00         CPDstr		db	"CPD", 00h
    4083/    134D : 49 4E 44 00         INDstr		db	"IND", 00h
    4084/    1351 : 4F 55 54 44 00      OUTDstr		db	"OUTD", 00h
    4085/    1356 : 4C 44 49 52 00      LDIRstr		db	"LDIR", 00h
    4086/    135B : 43 50 49 52 00      CPIRstr		db	"CPIR", 00h
    4087/    1360 : 49 4E 49 52 00      INIRstr		db	"INIR", 00h
    4088/    1365 : 4F 54 49 52 00      OTIRstr		db	"OTIR", 00h
    4089/    136A : 4C 44 44 52 00      LDDRstr		db	"LDDR", 00h
    4090/    136F : 43 50 44 52 00      CPDRstr		db	"CPDR", 00h
    4091/    1374 : 49 4E 44 52 00      INDRstr		db	"INDR", 00h
    4092/    1379 : 4F 54 44 52 00      OTDRstr		db	"OTDR", 00h
    4093/    137E : 52 45 54 49 00      RETIstr		db	"RETI", 00h
    4094/    1383 : 52 45 54 4E 00      RETNstr		db	"RETN", 00h
    4095/    1388 :                     ;BITstr		db	"BIT", 00h
    4096/    1388 :                     ;RESstr		db	"RES", 00h
    4097/    1388 : 53 45 54 00         SETstr		db	"SET", 00h
    4098/    138C :                     com_errm:
    4099/    138C : 3F 3F 3F 00         ER_OPMSG:	db	"???", 00h
    4100/    1390 : 28 43 29 00         KCKstr		db	"(C)", 00h
    4101/    1394 :                     
    4102/    1394 : 28 48 4C 29 00      kRNHL:	db	"(HL)", 00h
    4103/    1399 : 4E 5A 00            cc0:	db	"NZ", 00h
    4104/    139C : 5A 00               cc1:	db	"Z", 00h
    4105/    139E : 4E 43 00            cc2:	db	"NC", 00h
    4106/    13A1 : 43 00               cc3:	db	"C", 00h
    4107/    13A3 : 50 4F 00            cc4:	db	"PO", 00h
    4108/    13A6 : 50 45 00            cc5:	db	"PE", 00h
    4109/    13A9 : 50 00               cc6:	db	"P", 00h
    4110/    13AB : 4D 00               cc7:	db	"M", 00h
    4111/    13AD :                     
    4112/    13AD : F8 2D FA 2D FF 2D   disRegTbl:	dw	RNB, RNC, RND, RNE, RNH, RNL, kRNHL, RNA
             13B3 : 01 2E 06 2E 08 2E 
             13B9 : 94 13 F3 2D       
    4113/    13BD : AB 13 A9 13 A6 13   CC_opr:		dw	cc7, cc6, cc5, cc4, cc3, cc2, cc1, cc0
             13C3 : A3 13 A1 13 9E 13 
             13C9 : 9C 13 99 13       
    4114/    13CD : A1 13 9E 13 9C 13   JRCC_opr1:	dw	cc3, cc2, cc1, cc0
             13D3 : 99 13             
    4115/    13D5 : 36 2E 03 2E FC 2D   INC_DEC_ADDrp:	dw	RNSP, RNHL, RNDE, RNBC
             13DB : F5 2D             
    4116/    13DD : 73 12 03 2E FC 2D   POP_PUSHrp:	dw	RNAF, RNHL, RNDE, RNBC
             13E3 : F5 2D             
    4117/    13E5 :                     
    4118/    13E5 : F9 12 F6 12 CC 12   oth_1op_tbl:	dw	EIstr, DIstr, EXXstr, RETstr, CCFstr
             13EB : 7A 12 F2 12       
    4119/    13EF : EE 12 EA 12 E6 12   		dw	SCFstr, CPLstr, DAAstr, RRAstr
             13F5 : E2 12             
    4120/    13F7 : DE 12 D9 12 D4 12   		dw	RLAstr, RRCAstr, RLCAstr, NOPstr
             13FD : D0 12             
    4121/    13FF :                     
    4122/    13FF : FC 12 00 13 B5 12   logop2str:	dw	OUTstr, INstr, CPstr, ORstr, XORstr
             1405 : B2 12 AE 12       
    4123/    1409 : AA 12 A2 12 A6 12   		dw	ANDstr, SUBstr, SBCstr, ADCstr, ADDstr
             140F : 9E 12 9A 12       
    4124/    1413 :                     
    4125/    1413 : 36 2E 03 2E FC 2D   logop3str	dw	RNSP, RNHL, RNDE, RNBC
             1419 : F5 2D             
    4126/    141B : 36 2E FC 2D F5 2D   ed_rp_str	dw	RNSP, RNDE, RNBC, RNSP, RNDE, RNBC
             1421 : 36 2E FC 2D F5 2D 
    4127/    1427 :                     
    4128/    1427 : C0 12 C4 12 BC 12   dd_2opt:	dw	POPstr, PUSHstr, DECstr, INCstr
             142D : B8 12             
    4129/    142F : 36 2E 30 2E FC 2D   addixrp_tbl:	dw	RNSP, RNIX, RNDE, RNBC
             1435 : F5 2D             
    4130/    1437 : 36 2E 33 2E FC 2D   addiyrp_tbl:	dw	RNSP, RNIY, RNDE, RNBC
             143D : F5 2D             
    4131/    143F :                     
    4132/    143F : BC 12 B8 12 B5 12   ddlogtbl:	dw	DECstr, INCstr, CPstr, ORstr, XORstr, ANDstr, SUBstr
             1445 : B2 12 AE 12 AA 12 
             144B : A2 12             
    4133/    144D : F3 2D 08 2E 06 2E   dd_ldtbl:	dw	RNA, RNL, RNH, RNE, RND, RNC, RNB
             1453 : 01 2E FF 2D FA 2D 
             1459 : F8 2D             
    4134/    145B :                     
    4135/    145B : 79 13 74 13 6F 13   ed_noopr:	dw	OTDRstr, INDRstr, CPDRstr, LDDRstr
             1461 : 6A 13             
    4136/    1463 : 65 13 60 13 5B 13   		dw	OTIRstr, INIRstr, CPIRstr, LDIRstr
             1469 : 56 13             
    4137/    146B : 51 13 4D 13 49 13   		dw	OUTDstr, INDstr, CPDstr, LDDstr
             1471 : 45 13             
    4138/    1473 : 40 13 3C 13 38 13   		dw	OUTIstr, INIstr, CPIstr, LDIstr
             1479 : 34 13             
    4139/    147B : 30 13 2C 13 7E 13   		dw	RLDstr, RRDstr, RETIstr, RETNstr
             1481 : 83 13             
    4140/    1483 : 25 13               		dw	NEGstr
    4141/    1485 :                     
    4142/    1485 : 19 13 15 13 11 13   dd_rt_str:	dw	SRLstr, SRAstr, SLAstr, RRstr
             148B : 0E 13             
    4143/    148D : 0B 13 07 13 03 13   		dw	RLstr, RRCstr, RLCstr
    4144/    1493 :                     	
    4145/    1493 :                     ;;;
    4146/    1493 :                     ;;; GO address
    4147/    1493 :                     ;;; 
    4148/    1493 :                     
    4149/    1493 :                     GO:
    4150/    1493 : ED 5B F2 BE         	ld	de, (REGPC)
    4151/    1497 : ED 53 12 BF         	ld	(goTmp), de	; save go tmp go address
    4152/    149B : 23                  	INC	HL
    4153/    149C : CD 0D 27            	CALL	SKIPSP
    4154/    149F : CD 1D 27            	CALL	RDHEX
    4155/    14A2 : 30 03               	jr	nc, gostmp
    4156/    14A4 : B7                  	OR	A
    4157/    14A5 : 28 0A               	JR	Z, g_stpadr
    4158/    14A7 :                     gostmp:
    4159/    14A7 : 7A                  	ld	a, d
    4160/    14A8 : FE C0               	cp	(RAM_E + 1) >> 8	; a - 0C0H
    4161/    14AA : D2 09 02            	jp	nc, ERR		; detect I/O area
    4162/    14AD : ED 53 12 BF         	LD	(goTmp),DE	; save going address
    4163/    14B1 :                     g_stpadr:
    4164/    14B1 : CD 0D 27            	CALL	SKIPSP
    4165/    14B4 : 7E                  	LD	A,(HL)
    4166/    14B5 : B7                  	or	a
    4167/    14B6 : 28 18               	jr	z, GO1
    4168/    14B8 : FE 2C               	cp	','
    4169/    14BA : C2 09 02            	jp	nz, ERR
    4170/    14BD :                     
    4171/    14BD :                     ; set break point with go command
    4172/    14BD :                     
    4173/    14BD : 23                  	INC	HL
    4174/    14BE : CD 0D 27            	CALL	SKIPSP
    4175/    14C1 : CD 1D 27            	CALL	RDHEX		; 1st arg.
    4176/    14C4 : DA 09 02            	jp	c, ERR
    4177/    14C7 :                     
    4178/    14C7 : 21 06 BF            	ld	hl, tmpb_f	; hl: temp break point buffer
    4179/    14CA : CD AB 03            	call	setbpadr
    4180/    14CD : DA 09 02            	jp	c, ERR		; address is incorrect
    4181/    14D0 :                     
    4182/    14D0 :                     GO1:
    4183/    14D0 : 2A 12 BF            	LD	hl, (goTmp)
    4184/    14D3 : 22 F2 BE            	ld	(REGPC), hl	; set go address
    4185/    14D6 :                     
    4186/    14D6 :                     G0:
    4187/    14D6 :                     ; check Trace mode
    4188/    14D6 :                     
    4189/    14D6 : 3A F6 BE            	ld	a, (tpt1_f)
    4190/    14D9 : B7                  	or	a
    4191/    14DA : 28 1A               	jr	z, donot_trace
    4192/    14DC :                     	
    4193/    14DC : 2A 18 BF            	ld	hl,(tmpT)
    4194/    14DF : 22 F2 BE            	ld	(REGPC), hl	; set trace address
    4195/    14E2 :                     
    4196/    14E2 : 21 F6 BE            	ld	hl, tpt1_f
    4197/    14E5 : 11 F8 BE            	ld	de, tpt1_adr
    4198/    14E8 : CD 4E 15            	call	set_bp
    4199/    14EB : 21 FA BE            	ld	hl, tpt2_f
    4200/    14EE : 11 FC BE            	ld	de, tpt2_adr
    4201/    14F1 : CD 4E 15            	call	set_bp
    4202/    14F4 : 18 1B               	jr	skp_tbp		; skip set tmp bp and bp, if tracing
    4203/    14F6 :                     
    4204/    14F6 :                     ; set break point
    4205/    14F6 :                     donot_trace:
    4206/    14F6 : 21 FE BE            	ld	hl, bpt1_f
    4207/    14F9 : 11 00 BF            	ld	de, bpt1_adr
    4208/    14FC : CD 4E 15            	call	set_bp
    4209/    14FF : 21 02 BF            	ld	hl, bpt2_f
    4210/    1502 : 11 04 BF            	ld	de, bpt2_adr
    4211/    1505 : CD 4E 15            	call	set_bp
    4212/    1508 :                     
    4213/    1508 :                     
    4214/    1508 :                     ; check go, break pointer
    4215/    1508 :                     
    4216/    1508 : 21 06 BF            	ld	hl, tmpb_f
    4217/    150B : 11 08 BF            	ld	de, tmpb_adr
    4218/    150E : CD 4E 15            	call	set_bp
    4219/    1511 :                     
    4220/    1511 :                     	;; R register adjustment
    4221/    1511 :                     
    4222/    1511 :                     skp_tbp:
    4223/    1511 : 2A F0 BE            	LD	HL,(REGSP)
    4224/    1514 : F9                  	LD	SP,HL
    4225/    1515 : 2A F2 BE            	LD	HL,(REGPC)
    4226/    1518 : E5                  	PUSH	HL
    4227/    1519 : DD 2A EC BE         	LD	IX,(REGIX)
    4228/    151D : FD 2A EE BE         	LD	IY,(REGIY)
    4229/    1521 : 2A E4 BE            	LD	HL,(REGAFX)
    4230/    1524 : E5                  	PUSH	HL
    4231/    1525 : ED 4B E6 BE         	LD	BC,(REGBCX)
    4232/    1529 : ED 5B E8 BE         	LD	DE,(REGDEX)
    4233/    152D : 2A EA BE            	LD	HL,(REGHLX)
    4234/    1530 : D9                  	EXX
    4235/    1531 : F1                  	POP	AF
    4236/    1532 : 08                  	EX	AF,AF'		;'
    4237/    1533 : 2A DC BE            	LD	HL,(REGAF)
    4238/    1536 : E5                  	PUSH	HL
    4239/    1537 : ED 4B DE BE         	LD	BC,(REGBC)
    4240/    153B : ED 5B E0 BE         	LD	DE,(REGDE)
    4241/    153F : 2A E2 BE            	LD	HL,(REGHL)
    4242/    1542 : 3A F4 BE            	LD	A,(REGI)
    4243/    1545 : ED 47               	LD	I,A
    4244/    1547 : 3A F5 BE            	LD	A,(REGR)
    4245/    154A : ED 4F               	LD	R,A
    4246/    154C : F1                  	POP	AF
    4247/    154D : C9                  	RET			; POP PC
    4248/    154E :                     
    4249/    154E :                     set_bp:
    4250/    154E : 7E                  	ld	a, (hl)
    4251/    154F : B7                  	or	a
    4252/    1550 : C8                  	ret	z
    4253/    1551 :                     
    4254/    1551 : 1A                  	ld	a, (de)
    4255/    1552 : 4F                  	ld	c, a
    4256/    1553 : 13                  	inc	de
    4257/    1554 : 1A                  	ld	a, (de)
    4258/    1555 : 47                  	ld	b, a	; bc = break point address
    4259/    1556 :                     
    4260/    1556 : 3E FF               	ld	a, 0FFH
    4261/    1558 : 02                  	ld	(bc), a	; insert RST 38H code
    4262/    1559 : C9                  	ret
    4263/    155A :                     	
    4264/    155A :                     ;;;
    4265/    155A :                     ;;; SET memory
    4266/    155A :                     ;;; 
    4267/    155A :                     
    4268/    155A :                     SETM:
    4269/    155A : 23                  	INC	HL
    4270/    155B : CD 0D 27            	CALL	SKIPSP
    4271/    155E : CD 1D 27            	CALL	RDHEX
    4272/    1561 :                     
    4273/    1561 : DA 09 02            	jp	c, ERR
    4274/    1564 :                     
    4275/    1564 : CD 0D 27            	CALL	SKIPSP
    4276/    1567 : 7E                  	LD	A,(HL)
    4277/    1568 : B7                  	OR	A
    4278/    1569 : C2 09 02            	JP	NZ,ERR
    4279/    156C : 79                  	LD	A,C
    4280/    156D : B7                  	OR	A
    4281/    156E : 20 04               	JR	NZ,SM0
    4282/    1570 : ED 5B D7 BE         	LD	DE,(SADDR)
    4283/    1574 :                     
    4284/    1574 :                     
    4285/    1574 :                     SM0:
    4286/    1574 : EB                  	EX	DE,HL
    4287/    1575 :                     SM1:
    4288/    1575 : CD 2C 26            	CALL	HEXOUT4
    4289/    1578 : E5                  	PUSH	HL
    4290/    1579 : 21 12 2C            	LD	HL,dsap
    4291/    157C : CD 23 26            	CALL	STROUT
    4292/    157F : E1                  	POP	HL
    4293/    1580 : 7E                  	LD	A,(HL)
    4294/    1581 : E5                  	PUSH	HL
    4295/    1582 : CD 31 26            	CALL	HEXOUT2
    4296/    1585 : 3E 20               	LD	A,' '
    4297/    1587 : CD 8F 2E            	CALL	CONOUT
    4298/    158A : CD 83 26            	CALL	GETLIN
    4299/    158D : CD 0D 27            	CALL	SKIPSP
    4300/    1590 : 7E                  	LD	A,(HL)
    4301/    1591 : B7                  	OR	A
    4302/    1592 : 20 07               	JR	NZ,SM2
    4303/    1594 :                     	;; Empty  (Increment address)
    4304/    1594 : E1                  	POP	HL
    4305/    1595 : 23                  	INC	HL
    4306/    1596 : 22 D7 BE            	LD	(SADDR),HL
    4307/    1599 : 18 DA               	JR	SM1
    4308/    159B :                     SM2:
    4309/    159B : FE 2D               	CP	'-'
    4310/    159D : 20 07               	JR	NZ,SM3
    4311/    159F :                     	;; '-'  (Decrement address)
    4312/    159F : E1                  	POP	HL
    4313/    15A0 : 2B                  	DEC	HL
    4314/    15A1 : 22 D7 BE            	LD	(SADDR),HL
    4315/    15A4 : 18 CF               	JR	SM1
    4316/    15A6 :                     SM3:
    4317/    15A6 : FE 2E               	CP	'.'
    4318/    15A8 : 20 07               	JR	NZ,SM4
    4319/    15AA : E1                  	POP	HL
    4320/    15AB : 22 D7 BE            	LD	(SADDR),HL
    4321/    15AE : C3 BD 01            	JP	WSTART
    4322/    15B1 :                     SM4:
    4323/    15B1 : CD 1D 27            	CALL	RDHEX
    4324/    15B4 : B7                  	OR	A
    4325/    15B5 : E1                  	POP	HL
    4326/    15B6 : CA 09 02            	JP	Z,ERR
    4327/    15B9 : 73                  	LD	(HL),E
    4328/    15BA : 23                  	INC	HL
    4329/    15BB : 22 D7 BE            	LD	(SADDR),HL	; set value
    4330/    15BE :                     
    4331/    15BE :                     	; resave opcode for BP command
    4332/    15BE : ED 5B 00 BF         	ld	de, (bpt1_adr)
    4333/    15C2 : 1A                  	ld	a, (de)
    4334/    15C3 : 32 FF BE            	ld	(bpt1_op), a
    4335/    15C6 : ED 5B 04 BF         	ld	de, (bpt2_adr)
    4336/    15CA : 1A                  	ld	a, (de)
    4337/    15CB : 32 03 BF            	ld	(bpt2_op), a
    4338/    15CE :                     
    4339/    15CE : 18 A5               	JR	SM1
    4340/    15D0 :                     
    4341/    15D0 :                     ;;;
    4342/    15D0 :                     ;;; LOAD HEX file
    4343/    15D0 :                     ;;;
    4344/    15D0 :                     
    4345/    15D0 :                     LOADH:
    4346/    15D0 :                     	; clear brk point
    4347/    15D0 : AF                  	xor	a
    4348/    15D1 : 32 FE BE            	ld	(bpt1_f), a
    4349/    15D4 : 32 02 BF            	ld	(bpt2_f), a
    4350/    15D7 :                     	
    4351/    15D7 : 23                  	INC	HL
    4352/    15D8 : CD 0D 27            	CALL	SKIPSP
    4353/    15DB : CD 1D 27            	CALL	RDHEX
    4354/    15DE : CD 0D 27            	CALL	SKIPSP
    4355/    15E1 : 7E                  	LD	A,(HL)
    4356/    15E2 : B7                  	OR	A
    4357/    15E3 : C2 09 02            	JP	NZ,ERR
    4358/    15E6 :                     
    4359/    15E6 : 79                  	LD	A,C
    4360/    15E7 : B7                  	OR	A
    4361/    15E8 : 20 03               	JR	NZ,LH0
    4362/    15EA :                     
    4363/    15EA : 11 00 00            	LD	DE,0		;Offset
    4364/    15ED :                     LH0:
    4365/    15ED : CD 40 2E            	CALL	CONIN
    4366/    15F0 : FE 53               	CP	'S'
    4367/    15F2 : 28 61               	JR	Z,LHS0
    4368/    15F4 :                     LH1:
    4369/    15F4 : FE 3A               	CP	':'
    4370/    15F6 : 28 0D               	JR	Z,LHI0
    4371/    15F8 :                     LH2:
    4372/    15F8 :                     	;; Skip to EOL
    4373/    15F8 : FE 0D               	CP	CR
    4374/    15FA : 28 F1               	JR	Z,LH0
    4375/    15FC : FE 0A               	CP	LF
    4376/    15FE : 28 ED               	JR	Z,LH0
    4377/    1600 :                     LH3:
    4378/    1600 : CD 40 2E            	CALL	CONIN
    4379/    1603 : 18 F3               	JR	LH2
    4380/    1605 :                     
    4381/    1605 :                     LHI0:
    4382/    1605 : 3E 2E               	ld	a, '.'
    4383/    1607 : CD 8F 2E            	call	CONOUT
    4384/    160A :                     
    4385/    160A : CD 48 26            	CALL	HEXIN
    4386/    160D : 4F                  	LD	C,A		; Checksum
    4387/    160E : 47                  	LD	B,A		; Length
    4388/    160F :                     
    4389/    160F : CD 48 26            	CALL	HEXIN
    4390/    1612 : 67                  	LD	H,A		; Address H
    4391/    1613 : 81                  	ADD	A,C
    4392/    1614 : 4F                  	LD	C,A
    4393/    1615 :                     
    4394/    1615 : CD 48 26            	CALL	HEXIN
    4395/    1618 : 6F                  	LD	L,A		; Address L
    4396/    1619 : 81                  	ADD	A,C
    4397/    161A : 4F                  	LD	C,A
    4398/    161B :                     
    4399/    161B :                     	;; Add offset
    4400/    161B : 19                  	ADD	HL,DE
    4401/    161C :                     
    4402/    161C : CD 48 26            	CALL	HEXIN
    4403/    161F : 32 DA BE            	LD	(RECTYP),A
    4404/    1622 : 81                  	ADD	A,C
    4405/    1623 : 4F                  	LD	C,A		; Checksum
    4406/    1624 :                     
    4407/    1624 : 78                  	LD	A,B
    4408/    1625 : B7                  	OR	A
    4409/    1626 : 28 14               	JR	Z,LHI3
    4410/    1628 :                     LHI1:
    4411/    1628 : CD 48 26            	CALL	HEXIN
    4412/    162B : F5                  	PUSH	AF
    4413/    162C : 81                  	ADD	A,C
    4414/    162D : 4F                  	LD	C,A		; Checksum
    4415/    162E :                     
    4416/    162E : 3A DA BE            	LD	A,(RECTYP)
    4417/    1631 : B7                  	OR	A
    4418/    1632 : 20 05               	JR	NZ,LHI20
    4419/    1634 :                     
    4420/    1634 : F1                  	POP	AF
    4421/    1635 : 77                  	LD	(HL),A
    4422/    1636 : 23                  	INC	HL
    4423/    1637 : 18 01               	JR	LHI2
    4424/    1639 :                     LHI20:
    4425/    1639 : F1                  	POP	AF
    4426/    163A :                     LHI2:
    4427/    163A : 10 EC               	DJNZ	LHI1
    4428/    163C :                     LHI3:
    4429/    163C : CD 48 26            	CALL	HEXIN
    4430/    163F : 81                  	ADD	A,C
    4431/    1640 : 20 0A               	JR	NZ,LHIE		; Checksum error
    4432/    1642 : 3A DA BE            	LD	A,(RECTYP)
    4433/    1645 : B7                  	OR	A
    4434/    1646 : CA 00 16            	JP	Z,LH3
    4435/    1649 : C3 BD 01            	JP	WSTART
    4436/    164C :                     LHIE:
    4437/    164C : 21 E9 2B            	LD	HL,IHEMSG
    4438/    164F : CD 23 26            	CALL	STROUT
    4439/    1652 : C3 BD 01            	JP	WSTART
    4440/    1655 :                     	
    4441/    1655 :                     LHS0:
    4442/    1655 : CD 40 2E            	CALL	CONIN
    4443/    1658 : 32 DA BE            	LD	(RECTYP),A
    4444/    165B :                     
    4445/    165B : CD 48 26            	CALL	HEXIN
    4446/    165E : 47                  	LD	B,A		; Length+3
    4447/    165F : 4F                  	LD	C,A		; Checksum
    4448/    1660 :                     
    4449/    1660 : CD 48 26            	CALL	HEXIN
    4450/    1663 : 67                  	LD	H,A
    4451/    1664 : 81                  	ADD	A,C
    4452/    1665 : 4F                  	LD	C,A
    4453/    1666 :                     	
    4454/    1666 : CD 48 26            	CALL	HEXIN
    4455/    1669 : 6F                  	LD	L,A
    4456/    166A : 81                  	ADD	A,C
    4457/    166B : 4F                  	LD	C,A
    4458/    166C :                     
    4459/    166C : 19                  	ADD	HL,DE
    4460/    166D :                     
    4461/    166D : 05                  	DEC	B
    4462/    166E : 05                  	DEC	B
    4463/    166F : 05                  	DEC	B
    4464/    1670 : 28 15               	JR	Z,LHS3
    4465/    1672 :                     LHS1:
    4466/    1672 : CD 48 26            	CALL	HEXIN
    4467/    1675 : F5                  	PUSH	AF
    4468/    1676 : 81                  	ADD	A,C
    4469/    1677 : 4F                  	LD	C,A		; Checksum
    4470/    1678 :                     
    4471/    1678 : 3A DA BE            	LD	A,(RECTYP)
    4472/    167B : FE 31               	CP	'1'
    4473/    167D : 20 05               	JR	NZ,LHS2
    4474/    167F :                     
    4475/    167F : F1                  	POP	AF
    4476/    1680 : 77                  	LD	(HL),A
    4477/    1681 : 23                  	INC	HL
    4478/    1682 : 18 01               	JR	LHS20
    4479/    1684 :                     LHS2:
    4480/    1684 : F1                  	POP	AF
    4481/    1685 :                     LHS20:
    4482/    1685 : 10 EB               	DJNZ	LHS1
    4483/    1687 :                     LHS3:
    4484/    1687 : CD 48 26            	CALL	HEXIN
    4485/    168A : 81                  	ADD	A,C
    4486/    168B : FE FF               	CP	0FFH
    4487/    168D : 20 12               	JR	NZ,LHSE
    4488/    168F :                     
    4489/    168F : 3A DA BE            	LD	A,(RECTYP)
    4490/    1692 : FE 37               	CP	'7'
    4491/    1694 : 28 11               	JR	Z,LHSR
    4492/    1696 : FE 38               	CP	'8'
    4493/    1698 : 28 0D               	JR	Z,LHSR
    4494/    169A : FE 39               	CP	'9'
    4495/    169C : 28 09               	JR	Z,LHSR
    4496/    169E : C3 00 16            	JP	LH3
    4497/    16A1 :                     LHSE:
    4498/    16A1 : 21 F6 2B            	LD	HL,SHEMSG
    4499/    16A4 : CD 23 26            	CALL	STROUT
    4500/    16A7 :                     LHSR:
    4501/    16A7 : C3 BD 01            	JP	WSTART
    4502/    16AA :                     	
    4503/    16AA :                     ;;;
    4504/    16AA :                     ;;; SAVE HEX file
    4505/    16AA :                     ;;;
    4506/    16AA :                     
    4507/    16AA :                     SAVEH:
    4508/    16AA : 23                  	INC	HL
    4509/    16AB : 7E                  	LD	A,(HL)
    4510/    16AC : FE 49               	CP	'I'
    4511/    16AE : 28 04               	JR	Z,SH0
    4512/    16B0 : FE 53               	CP	'S'
    4513/    16B2 : 20 04               	JR	NZ,SH1
    4514/    16B4 :                     SH0:
    4515/    16B4 : 23                  	INC	HL
    4516/    16B5 : 32 D9 BE            	LD	(HEXMOD),A
    4517/    16B8 :                     SH1:
    4518/    16B8 : CD 0D 27            	CALL	SKIPSP
    4519/    16BB : CD 1D 27            	CALL	RDHEX
    4520/    16BE : B7                  	OR	A
    4521/    16BF : 28 1C               	JR	Z,SHE
    4522/    16C1 : D5                  	PUSH	DE
    4523/    16C2 : DD E1               	POP	IX		; IX = Start address
    4524/    16C4 : CD 0D 27            	CALL	SKIPSP
    4525/    16C7 : 7E                  	LD	A,(HL)
    4526/    16C8 : FE 2C               	CP	','
    4527/    16CA : 20 11               	JR	NZ,SHE
    4528/    16CC : 23                  	INC	HL
    4529/    16CD : CD 0D 27            	CALL	SKIPSP
    4530/    16D0 : CD 1D 27            	CALL	RDHEX		; DE = End address
    4531/    16D3 : B7                  	OR	A
    4532/    16D4 : 28 07               	JR	Z,SHE
    4533/    16D6 : CD 0D 27            	CALL	SKIPSP
    4534/    16D9 : 7E                  	LD	A,(HL)
    4535/    16DA : B7                  	OR	A
    4536/    16DB : 28 03               	JR	Z,SH2
    4537/    16DD :                     SHE:
    4538/    16DD : C3 09 02            	JP	ERR
    4539/    16E0 :                     
    4540/    16E0 :                     SH2:
    4541/    16E0 : DD E5               	PUSH	IX
    4542/    16E2 : E1                  	POP	HL
    4543/    16E3 : EB                  	EX	DE,HL
    4544/    16E4 : 23                  	INC	HL
    4545/    16E5 : B7                  	OR	A
    4546/    16E6 : ED 52               	SBC	HL,DE		; HL = Length
    4547/    16E8 :                     SH3:
    4548/    16E8 : CD 08 17            	CALL	SHL00
    4549/    16EB : 7C                  	LD	A,H
    4550/    16EC : B5                  	OR	L
    4551/    16ED : 20 F9               	JR	NZ,SH3
    4552/    16EF :                     
    4553/    16EF : 3A D9 BE            	LD	A,(HEXMOD)
    4554/    16F2 : FE 49               	CP	'I'
    4555/    16F4 : 20 09               	JR	NZ,SH4
    4556/    16F6 :                     	;; End record for Intel HEX
    4557/    16F6 : 21 15 2C            	LD	HL,IHEXER
    4558/    16F9 : CD 23 26            	CALL	STROUT
    4559/    16FC : C3 BD 01            	JP	WSTART
    4560/    16FF :                     SH4:
    4561/    16FF :                     	;; End record for Motorola S record
    4562/    16FF : 21 23 2C            	LD	HL,SRECER
    4563/    1702 : CD 23 26            	CALL	STROUT
    4564/    1705 : C3 BD 01            	JP	WSTART
    4565/    1708 :                     
    4566/    1708 :                     SHL00:
    4567/    1708 : 0E 10               	LD	C,16
    4568/    170A : 7C                  	LD	A,H
    4569/    170B : B7                  	OR	A
    4570/    170C : 20 05               	JR	NZ,SHL0
    4571/    170E : 7D                  	LD	A,L
    4572/    170F : B9                  	CP	C
    4573/    1710 : 30 01               	JR	NC,SHL0
    4574/    1712 : 4F                  	LD	C,A
    4575/    1713 :                     SHL0:
    4576/    1713 : 06 00               	LD	B,0
    4577/    1715 : B7                  	OR	A
    4578/    1716 : ED 42               	SBC	HL,BC
    4579/    1718 : 41                  	LD	B,C
    4580/    1719 :                     
    4581/    1719 : 3A D9 BE            	LD	A,(HEXMOD)
    4582/    171C : FE 49               	CP	'I'
    4583/    171E : 20 30               	JR	NZ,SHLS
    4584/    1720 :                     
    4585/    1720 :                     	;; Intel HEX
    4586/    1720 : 3E 3A               	LD	A,':'
    4587/    1722 : CD 8F 2E            	CALL	CONOUT
    4588/    1725 :                     
    4589/    1725 : 78                  	LD	A,B
    4590/    1726 : CD 31 26            	CALL	HEXOUT2		; Length
    4591/    1729 : 48                  	LD	C,B		; Checksum
    4592/    172A :                     
    4593/    172A : 7A                  	LD	A,D
    4594/    172B : CD 31 26            	CALL	HEXOUT2
    4595/    172E : 7A                  	LD	A,D
    4596/    172F : 81                  	ADD	A,C
    4597/    1730 : 4F                  	LD	C,A
    4598/    1731 :                     	
    4599/    1731 : 7B                  	LD	A,E
    4600/    1732 : CD 31 26            	CALL	HEXOUT2
    4601/    1735 : 7B                  	LD	A,E
    4602/    1736 : 81                  	ADD	A,C
    4603/    1737 : 4F                  	LD	C,A
    4604/    1738 :                     	
    4605/    1738 : AF                  	XOR	A
    4606/    1739 : CD 31 26            	CALL	HEXOUT2
    4607/    173C :                     SHLI0:
    4608/    173C : 1A                  	LD	A,(DE)
    4609/    173D : F5                  	PUSH	AF
    4610/    173E : CD 31 26            	CALL	HEXOUT2
    4611/    1741 : F1                  	POP	AF
    4612/    1742 : 81                  	ADD	A,C
    4613/    1743 : 4F                  	LD	C,A
    4614/    1744 :                     
    4615/    1744 : 13                  	INC	DE
    4616/    1745 : 10 F5               	DJNZ	SHLI0
    4617/    1747 :                     
    4618/    1747 : 79                  	LD	A,C
    4619/    1748 : ED 44               	NEG
    4620/    174A : CD 31 26            	CALL	HEXOUT2
    4621/    174D : C3 6C 26            	JP	CRLF
    4622/    1750 :                     
    4623/    1750 :                     SHLS:
    4624/    1750 :                     	;; Motorola S record
    4625/    1750 : 3E 53               	LD	A,'S'
    4626/    1752 : CD 8F 2E            	CALL	CONOUT
    4627/    1755 : 3E 31               	LD	A,'1'
    4628/    1757 : CD 8F 2E            	CALL	CONOUT
    4629/    175A :                     
    4630/    175A : 78                  	LD	A,B
    4631/    175B : C6 03               	ADD	A,2+1		; DataLength + 2(Addr) + 1(Sum)
    4632/    175D : 4F                  	LD	C,A
    4633/    175E : CD 31 26            	CALL	HEXOUT2
    4634/    1761 :                     
    4635/    1761 : 7A                  	LD	A,D
    4636/    1762 : CD 31 26            	CALL	HEXOUT2
    4637/    1765 : 7A                  	LD	A,D
    4638/    1766 : 81                  	ADD	A,C
    4639/    1767 : 4F                  	LD	C,A
    4640/    1768 :                     	
    4641/    1768 : 7B                  	LD	A,E
    4642/    1769 : CD 31 26            	CALL	HEXOUT2
    4643/    176C : 7B                  	LD	A,E
    4644/    176D : 81                  	ADD	A,C
    4645/    176E : 4F                  	LD	C,A
    4646/    176F :                     SHLS0:
    4647/    176F : 1A                  	LD	A,(DE)
    4648/    1770 : F5                  	PUSH	AF
    4649/    1771 : CD 31 26            	CALL	HEXOUT2		; Data
    4650/    1774 : F1                  	POP	AF
    4651/    1775 : 81                  	ADD	A,C
    4652/    1776 : 4F                  	LD	C,A
    4653/    1777 :                     
    4654/    1777 : 13                  	INC	DE
    4655/    1778 : 10 F5               	DJNZ	SHLS0
    4656/    177A :                     
    4657/    177A : 79                  	LD	A,C
    4658/    177B : 2F                  	CPL
    4659/    177C : CD 31 26            	CALL	HEXOUT2
    4660/    177F : C3 6C 26            	JP	CRLF
    4661/    1782 :                     
    4662/    1782 :                     ;;;
    4663/    1782 :                     ;;; Register
    4664/    1782 :                     ;;;
    4665/    1782 :                     
    4666/    1782 :                     REG:
    4667/    1782 : 23                  	INC	HL
    4668/    1783 : CD 0D 27            	CALL	SKIPSP
    4669/    1786 : B7                  	OR	A
    4670/    1787 : 20 06               	JR	NZ,RG0
    4671/    1789 : CD 08 18            	CALL	RDUMP
    4672/    178C : C3 BD 01            	JP	WSTART
    4673/    178F :                     RG0:
    4674/    178F : EB                  	EX	DE,HL
    4675/    1790 : 21 D9 2C            	LD	HL,RNTAB
    4676/    1793 :                     RG1:
    4677/    1793 : BE                  	CP	(HL)
    4678/    1794 : 28 0D               	JR	Z,RG2		; Character match
    4679/    1796 : 4F                  	LD	C,A
    4680/    1797 : 23                  	INC	HL
    4681/    1798 : 7E                  	LD	A,(HL)
    4682/    1799 : B7                  	OR	A
    4683/    179A : 28 69               	JR	Z,RGE		; Found end mark
    4684/    179C : 79                  	LD	A,C
    4685/    179D : 01 05 00            	LD	BC,5
    4686/    17A0 : 09                  	ADD	HL,BC		; Next entry
    4687/    17A1 : 18 F0               	JR	RG1
    4688/    17A3 :                     RG2:
    4689/    17A3 : 23                  	INC	HL
    4690/    17A4 : 7E                  	LD	A,(HL)
    4691/    17A5 : FE 0F               	CP	0FH		; Link code
    4692/    17A7 : 20 09               	JR	NZ,RG3
    4693/    17A9 :                     	;; Next table
    4694/    17A9 : 23                  	INC	HL
    4695/    17AA : 4E                  	LD	C,(HL)
    4696/    17AB : 23                  	INC	HL
    4697/    17AC : 66                  	LD	H,(HL)
    4698/    17AD : 69                  	LD	L,C
    4699/    17AE : 13                  	INC	DE
    4700/    17AF : 1A                  	LD	A,(DE)
    4701/    17B0 : 18 E1               	JR	RG1
    4702/    17B2 :                     RG3:
    4703/    17B2 : B7                  	OR	A
    4704/    17B3 : 28 50               	JR	Z,RGE		; Found end mark
    4705/    17B5 :                     
    4706/    17B5 : 4E                  	LD	C,(HL)		; LD C,A???
    4707/    17B6 : 23                  	INC	HL
    4708/    17B7 : 5E                  	LD	E,(HL)
    4709/    17B8 : 23                  	INC	HL
    4710/    17B9 : 56                  	LD	D,(HL)
    4711/    17BA : D5                  	PUSH	DE		; Reg storage address
    4712/    17BB : 23                  	INC	HL
    4713/    17BC : 7E                  	LD	A,(HL)
    4714/    17BD : 23                  	INC	HL
    4715/    17BE : 66                  	LD	H,(HL)
    4716/    17BF : 6F                  	LD	L,A		; HL: Reg name
    4717/    17C0 : CD 23 26            	CALL	STROUT
    4718/    17C3 : 3E 3D               	LD	A,'='
    4719/    17C5 : CD 8F 2E            	CALL	CONOUT
    4720/    17C8 :                     
    4721/    17C8 : 79                  	LD	A,C
    4722/    17C9 : E6 07               	AND	07H
    4723/    17CB : FE 01               	CP	1
    4724/    17CD : 20 08               	JR	NZ,RG4
    4725/    17CF :                     	;; 8 bit register
    4726/    17CF : E1                  	POP	HL
    4727/    17D0 : 7E                  	LD	A,(HL)
    4728/    17D1 : E5                  	PUSH	HL
    4729/    17D2 : CD 31 26            	CALL	HEXOUT2
    4730/    17D5 : 18 0C               	JR	RG5
    4731/    17D7 :                     RG4:
    4732/    17D7 :                     	;; 16 bit register
    4733/    17D7 : E1                  	POP	HL
    4734/    17D8 : E5                  	PUSH	HL
    4735/    17D9 : 23                  	INC	HL
    4736/    17DA : 7E                  	LD	A,(HL)
    4737/    17DB : CD 31 26            	CALL	HEXOUT2
    4738/    17DE : 2B                  	DEC	HL
    4739/    17DF : 7E                  	LD	A,(HL)
    4740/    17E0 : CD 31 26            	CALL	HEXOUT2
    4741/    17E3 :                     RG5:
    4742/    17E3 : 3E 20               	LD	A,' '
    4743/    17E5 : CD 8F 2E            	CALL	CONOUT
    4744/    17E8 : C5                  	PUSH	BC		; C: reg size
    4745/    17E9 : CD 83 26            	CALL	GETLIN
    4746/    17EC : CD 0D 27            	CALL	SKIPSP
    4747/    17EF : CD 1D 27            	CALL	RDHEX
    4748/    17F2 : B7                  	OR	A
    4749/    17F3 : 28 0D               	JR	Z,RGR
    4750/    17F5 : C1                  	POP	BC
    4751/    17F6 : E1                  	POP	HL
    4752/    17F7 : 79                  	LD	A,C
    4753/    17F8 : FE 01               	CP	1
    4754/    17FA : 20 03               	JR	NZ,RG6
    4755/    17FC :                     	;; 8 bit register
    4756/    17FC : 73                  	LD	(HL),E
    4757/    17FD : 18 03               	JR	RG7
    4758/    17FF :                     RG6:
    4759/    17FF :                     	;; 16 bit register
    4760/    17FF : 73                  	LD	(HL),E
    4761/    1800 : 23                  	INC	HL
    4762/    1801 : 72                  	LD	(HL),D
    4763/    1802 :                     RG7:
    4764/    1802 :                     RGR:
    4765/    1802 : C3 BD 01            	JP	WSTART
    4766/    1805 :                     RGE:
    4767/    1805 : C3 09 02            	JP	ERR
    4768/    1808 :                     
    4769/    1808 :                     RDUMP:
    4770/    1808 : 21 30 2C            	LD	HL,RDTAB
    4771/    180B :                     RD0:
    4772/    180B : 5E                  	LD	E,(HL)
    4773/    180C : 23                  	INC	HL
    4774/    180D : 56                  	LD	D,(HL)
    4775/    180E : 23                  	INC	HL
    4776/    180F : 7A                  	LD	A,D
    4777/    1810 : B3                  	OR	E
    4778/    1811 : CA 6C 26            	JP	Z,CRLF		; End
    4779/    1814 : D5                  	push	de
    4780/    1815 : EB                  	EX	DE,HL
    4781/    1816 : CD 23 26            	CALL	STROUT	; print name of register
    4782/    1819 : EB                  	EX	DE,HL
    4783/    181A : D1                  	pop	de
    4784/    181B :                     
    4785/    181B :                     ; flag check
    4786/    181B : 3E 2C               	ld	a, RDSF_H
    4787/    181D : BA                  	cp	d
    4788/    181E : 20 07               	jr	nz, rd101
    4789/    1820 : 3E 9B               	ld	a, RDSF_L
    4790/    1822 : BB                  	cp	e
    4791/    1823 : 20 02               	jr	nz, rd101
    4792/    1825 : 18 29               	jr	rd20
    4793/    1827 :                     
    4794/    1827 :                     rd101:
    4795/    1827 : 3E 2C               	ld	a, RDSFX_H
    4796/    1829 : BA                  	cp	d
    4797/    182A : 20 05               	jr	nz, rd10
    4798/    182C : 3E C2               	ld	a, RDSFX_L
    4799/    182E : BB                  	cp	e
    4800/    182F : 28 1F               	jr	z, rd20
    4801/    1831 :                     
    4802/    1831 :                     rd10:
    4803/    1831 : 5E                  	LD	E,(HL)
    4804/    1832 : 23                  	INC	HL
    4805/    1833 : 56                  	LD	D,(HL)
    4806/    1834 : 23                  	INC	HL
    4807/    1835 : 7E                  	LD	A,(HL)
    4808/    1836 : 23                  	INC	HL
    4809/    1837 : EB                  	EX	DE,HL
    4810/    1838 : FE 01               	CP	1
    4811/    183A : 20 07               	JR	NZ,RD1
    4812/    183C :                     	;; 1 byte
    4813/    183C : 7E                  	LD	A,(HL)
    4814/    183D : CD 31 26            	CALL	HEXOUT2
    4815/    1840 : EB                  	EX	DE,HL
    4816/    1841 : 18 C8               	JR	RD0
    4817/    1843 :                     RD1:
    4818/    1843 :                     	;; 2 byte
    4819/    1843 : 23                  	INC	HL
    4820/    1844 : 7E                  	LD	A,(HL)
    4821/    1845 : CD 31 26            	CALL	HEXOUT2		; High byte
    4822/    1848 : 2B                  	DEC	HL
    4823/    1849 : 7E                  	LD	A,(HL)
    4824/    184A : CD 31 26            	CALL	HEXOUT2		; Low byte
    4825/    184D : EB                  	EX	DE,HL
    4826/    184E : 18 BB               	JR	RD0
    4827/    1850 :                     
    4828/    1850 :                     ; make flag image string
    4829/    1850 :                     rd20:
    4830/    1850 : 5E                  	LD	E,(HL)
    4831/    1851 : 23                  	INC	HL
    4832/    1852 : 56                  	LD	D,(HL)
    4833/    1853 : 23                  	INC	HL
    4834/    1854 : 1A                  	ld	a, (de)		; get flag values
    4835/    1855 :                     
    4836/    1855 : D5                  	push	de
    4837/    1856 : E5                  	push	hl
    4838/    1857 :                     
    4839/    1857 :                     ; make flag image
    4840/    1857 :                     
    4841/    1857 : 21 30 BF            	ld	hl, F_bit
    4842/    185A : 01 84 18            	ld	bc, F_bit_on
    4843/    185D : 11 8C 18            	ld	de, F_bit_off
    4844/    1860 : F5                  	push	af		; adjustment SP. DO NOT DELETE THIS LINE!
    4845/    1861 :                     
    4846/    1861 :                     flg_loop:
    4847/    1861 : F1                  	pop	af		; "push af" before loop back
    4848/    1862 : CB 27               	sla	a
    4849/    1864 : 30 06               	jr	nc, flg_off
    4850/    1866 : F5                  	push	af
    4851/    1867 : 0A                  	ld	a, (bc)
    4852/    1868 : 77                  	ld	(hl), a
    4853/    1869 : F1                  	pop	af
    4854/    186A : 18 04               	jr	flg_nxt
    4855/    186C :                     flg_off:
    4856/    186C : F5                  	push	af
    4857/    186D : 1A                  	ld	a, (de)
    4858/    186E : 77                  	ld	(hl), a
    4859/    186F : F1                  	pop	af
    4860/    1870 :                     
    4861/    1870 :                     flg_nxt:
    4862/    1870 : 03                  	inc	bc
    4863/    1871 : 13                  	inc	de
    4864/    1872 : 23                  	inc	hl
    4865/    1873 :                     
    4866/    1873 : F5                  	push	af
    4867/    1874 : 7E                  	ld	a, (hl)
    4868/    1875 : B7                  	or	a		;check delimiter
    4869/    1876 : 20 E9               	jr	nz, flg_loop
    4870/    1878 :                     
    4871/    1878 : F1                  	pop	af		; restore stack position
    4872/    1879 : 21 30 BF            	ld	hl, F_bit
    4873/    187C : CD 23 26            	call	STROUT		; print flag register for bit imaze
    4874/    187F :                     
    4875/    187F : E1                  	pop	hl
    4876/    1880 : D1                  	pop	de
    4877/    1881 :                     
    4878/    1881 : 23                  	inc	hl
    4879/    1882 : 18 87               	JR	RD0
    4880/    1884 :                     
    4881/    1884 : 53 5A 2E 48 2E 50   F_bit_on:	db	"SZ.H.PNC"
             188A : 4E 43             
    4882/    188C : 2E 2E 2E 2E 2E 2E   F_bit_off:	db	"........"
             1892 : 2E 2E             
    4883/    1894 :                     
    4884/    1894 :                     ;--------------------------------------------------
    4885/    1894 :                     ;
    4886/    1894 :                     ; Minimal assemble
    4887/    1894 :                     ;
    4888/    1894 :                     ;--------------------------------------------------
    4889/    1894 :                     
    4890/    1894 : =80H                 dm_bit	equ	80h
    4891/    1894 :                     
    4892/    1894 :                     ope_cds:
    4893/    1894 :                     ; 4 bytes string
    4894/    1894 : 49 4E 49 52 B9      	db	"INIR",	dm_bit | 57
    4895/    1899 : 49 4E 44 52 BB      	db	"INDR",	dm_bit | 59
    4896/    189E : 4F 55 54 49 BD      	db	"OUTI",	dm_bit | 61
    4897/    18A3 : 4F 54 49 52 BE      	db	"OTIR",	dm_bit | 62
    4898/    18A8 : 4F 55 54 44 BF      	db	"OUTD",	dm_bit | 63
    4899/    18AD : 4F 54 44 52 C0      	db	"OTDR",	dm_bit | 64
    4900/    18B2 : 48 41 4C 54 B3      	db	"HALT",	dm_bit | 51
    4901/    18B7 : 52 45 54 49 AF      	db	"RETI",	dm_bit | 47
    4902/    18BC : 52 45 54 4E B0      	db	"RETN",	dm_bit | 48
    4903/    18C1 : 44 4A 4E 5A AC      	db	"DJNZ",	dm_bit | 44
    4904/    18C6 : 43 41 4C 4C AD      	db	"CALL",	dm_bit | 45
    4905/    18CB : 43 50 44 52 A8      	db	"CPDR",	dm_bit | 40
    4906/    18D0 : 4C 44 49 52 83      	db	"LDIR",	dm_bit | 03
    4907/    18D5 : 4C 44 44 52 85      	db	"LDDR",	dm_bit | 05
    4908/    18DA : 50 55 53 48 88      	db	"PUSH",	dm_bit | 08
    4909/    18DF : 52 4C 43 41 8A      	db	"RLCA",	dm_bit | 10
    4910/    18E4 : 52 52 43 41 8E      	db	"RRCA",	dm_bit | 14
    4911/    18E9 : 43 50 49 52 A6      	db	"CPIR",	dm_bit | 38
    4912/    18EE :                     
    4913/    18EE :                     ; 3 bytes string
    4914/    18EE : 4C 44 49 82         	db	"LDI",	dm_bit | 02
    4915/    18F2 : 4C 44 44 84         	db	"LDD",	dm_bit | 04
    4916/    18F6 : 45 58 58 87         	db	"EXX",	dm_bit | 07
    4917/    18FA : 50 4F 50 89         	db	"POP",	dm_bit | 09
    4918/    18FE : 52 4C 41 8B         	db	"RLA",	dm_bit | 11
    4919/    1902 : 52 4C 43 8C         	db	"RLC",	dm_bit | 12
    4920/    1906 : 52 52 41 8F         	db	"RRA",	dm_bit | 15
    4921/    190A : 52 52 43 90         	db	"RRC",	dm_bit | 16
    4922/    190E : 53 4C 41 92         	db	"SLA",	dm_bit | 18
    4923/    1912 : 53 52 41 93         	db	"SRA",	dm_bit | 19
    4924/    1916 : 53 52 4C 94         	db	"SRL",	dm_bit | 20
    4925/    191A : 41 44 44 95         	db	"ADD",	dm_bit | 21
    4926/    191E : 41 44 43 96         	db	"ADC",	dm_bit | 22
    4927/    1922 : 49 4E 43 97         	db	"INC",	dm_bit | 23
    4928/    1926 : 53 55 42 98         	db	"SUB",	dm_bit | 24
    4929/    192A : 53 42 43 99         	db	"SBC",	dm_bit | 25
    4930/    192E : 44 45 43 9A         	db	"DEC",	dm_bit | 26
    4931/    1932 : 41 4E 44 9B         	db	"AND",	dm_bit | 27
    4932/    1936 : 58 4F 52 9D         	db	"XOR",	dm_bit | 29
    4933/    193A : 43 50 4C 9E         	db	"CPL",	dm_bit | 30
    4934/    193E : 4E 45 47 9F         	db	"NEG",	dm_bit | 31
    4935/    1942 : 43 43 46 A0         	db	"CCF",	dm_bit | 32
    4936/    1946 : 53 43 46 A1         	db	"SCF",	dm_bit | 33
    4937/    194A : 42 49 54 A2         	db	"BIT",	dm_bit | 34
    4938/    194E : 53 45 54 A3         	db	"SET",	dm_bit | 35
    4939/    1952 : 52 45 53 A4         	db	"RES",	dm_bit | 36
    4940/    1956 : 43 50 49 A5         	db	"CPI",	dm_bit | 37
    4941/    195A : 43 50 44 A7         	db	"CPD",	dm_bit | 39
    4942/    195E : 52 45 54 AE         	db	"RET",	dm_bit | 46
    4943/    1962 : 52 53 54 B1         	db	"RST",	dm_bit | 49
    4944/    1966 : 4E 4F 50 B2         	db	"NOP",	dm_bit | 50
    4945/    196A : 49 4E 49 B8         	db	"INI",	dm_bit | 56
    4946/    196E : 49 4E 44 BA         	db	"IND",	dm_bit | 58
    4947/    1972 : 4F 55 54 BC         	db	"OUT",	dm_bit | 60
    4948/    1976 : 44 41 41 C1         	db	"DAA",	dm_bit | 65
    4949/    197A : 52 4C 44 C2         	db	"RLD",	dm_bit | 66
    4950/    197E : 52 52 44 C3         	db	"RRD",	dm_bit | 67
    4951/    1982 : 4F 52 47 C4         	db	"ORG",	dm_bit | 68
    4952/    1986 :                     
    4953/    1986 :                     ; 2 bytes string
    4954/    1986 : 45 58 86            	db	"EX",	dm_bit | 06
    4955/    1989 : 52 4C 8D            	db	"RL",	dm_bit | 13
    4956/    198C : 52 52 91            	db	"RR",	dm_bit | 17
    4957/    198F : 4F 52 9C            	db	"OR",	dm_bit | 28
    4958/    1992 : 43 50 A9            	db	"CP",	dm_bit | 41
    4959/    1995 : 4A 50 AA            	db	"JP",	dm_bit | 42
    4960/    1998 : 4A 52 AB            	db	"JR",	dm_bit | 43
    4961/    199B : 49 4D B6            	db	"IM",	dm_bit | 54
    4962/    199E : 49 4E B7            	db	"IN",	dm_bit | 55
    4963/    19A1 : 44 49 B4            	db	"DI",	dm_bit | 52
    4964/    19A4 : 45 49 B5            	db	"EI",	dm_bit | 53
    4965/    19A7 : 4C 44 81            	db	"LD",	dm_bit | 01
    4966/    19AA : 44 42 C5            	db	"DB",	dm_bit | 69
    4967/    19AD : 44 57 C6            	db	"DW",	dm_bit | 70
    4968/    19B0 : 00                  	db	0	; delimiter
    4969/    19B1 :                     
    4970/    19B1 :                     operand_cds:
    4971/    19B1 :                     ; 4 bytes string
    4972/    19B1 : 28 42 43 29 9A      	db	"(BC)",	dm_bit | 26
    4973/    19B6 : 28 44 45 29 9B      	db	"(DE)",	dm_bit | 27
    4974/    19BB : 28 48 4C 29 9C      	db	"(HL)",	dm_bit | 28
    4975/    19C0 : 28 49 58 29 9D      	db	"(IX)",	dm_bit | 29
    4976/    19C5 : 28 49 59 29 9E      	db	"(IY)",	dm_bit | 30
    4977/    19CA : 28 53 50 29 A0      	db	"(SP)",	dm_bit | 32
    4978/    19CF :                     
    4979/    19CF :                     ; 3 bytes string
    4980/    19CF : 28 43 29 9F         	db	"(C)",	dm_bit | 31
    4981/    19D3 : 41 46 27 83         	db	"AF'",	dm_bit | 3
    4982/    19D7 :                     
    4983/    19D7 :                     ; 2 bytes string
    4984/    19D7 : 41 46 82            	db	"AF",	dm_bit | 2
    4985/    19DA : 42 43 85            	db	"BC",	dm_bit | 5
    4986/    19DD : 44 45 88            	db	"DE",	dm_bit | 8
    4987/    19E0 : 48 4C 8B            	db	"HL",	dm_bit | 11
    4988/    19E3 : 49 58 8E            	db	"IX",	dm_bit | 14
    4989/    19E6 : 49 59 8F            	db	"IY",	dm_bit | 15
    4990/    19E9 : 53 50 90            	db	"SP",	dm_bit | 16
    4991/    19EC : 4E 5A 94            	db	"NZ",	dm_bit | 20
    4992/    19EF : 4E 43 95            	db	"NC",	dm_bit | 21
    4993/    19F2 : 50 4F 97            	db	"PO",	dm_bit | 23
    4994/    19F5 : 50 45 98            	db	"PE",	dm_bit | 24
    4995/    19F8 :                     
    4996/    19F8 :                     ; 1 bytes string
    4997/    19F8 : 41 81               	db	"A",  	dm_bit | 1
    4998/    19FA : 42 84               	db	"B",	dm_bit | 4
    4999/    19FC : 43 86               	db	"C",	dm_bit | 6
    5000/    19FE : 44 87               	db	"D",	dm_bit | 7
    5001/    1A00 : 45 89               	db	"E",	dm_bit | 9
    5002/    1A02 : 48 8A               	db	"H",	dm_bit | 10
    5003/    1A04 : 4C 8C               	db	"L",	dm_bit | 12
    5004/    1A06 : 49 8D               	db	"I",	dm_bit | 13
    5005/    1A08 : 52 91               	db	"R",	dm_bit | 17
    5006/    1A0A : 5A 92               	db	"Z",	dm_bit | 18
    5007/    1A0C : 4D 93               	db	"M",	dm_bit | 19
    5008/    1A0E : 50 96               	db	"P",	dm_bit | 22
    5009/    1A10 : 00                  	db	0	; delimiter
    5010/    1A11 :                     
    5011/    1A11 :                     opr_cd1:
    5012/    1A11 : 28 49 58 2B A1      	db	"(IX+",	dm_bit | 33
    5013/    1A16 : 28 49 59 2B A2      	db	"(IY+",	dm_bit | 34
    5014/    1A1B : 28 49 58 2D A4      	db	"(IX-",	dm_bit | 36
    5015/    1A20 : 28 49 59 2D A5      	db	"(IY-",	dm_bit | 37
    5016/    1A25 : 00                  	db	0	; delimiter
    5017/    1A26 :                     
    5018/    1A26 :                     ;----------------------------------------------
    5019/    1A26 :                     ; A[<address>] : input line assemble mode
    5020/    1A26 :                     ; A[.]<cr> : exit assemble mode
    5021/    1A26 :                     ;----------------------------------------------
    5022/    1A26 :                     line_asm:
    5023/    1A26 : 23                  	inc	hl
    5024/    1A27 : CD 91 25            	call	skp_sp
    5025/    1A2A : B7                  	or	a
    5026/    1A2B : 28 11               	jr	z, skpa_adr
    5027/    1A2D : CD 1D 27            	call	RDHEX		; get DE: address
    5028/    1A30 : DA 09 02            	jp	c, ERR
    5029/    1A33 : ED 53 1B BF         	ld	(asm_adr), de	; set start address
    5030/    1A37 :                     
    5031/    1A37 : CD 91 25            	call	skp_sp
    5032/    1A3A : B7                  	or	a
    5033/    1A3B : C2 09 02            	jp	nz, ERR
    5034/    1A3E :                     	
    5035/    1A3E :                     	; init work area
    5036/    1A3E :                     skpa_adr:
    5037/    1A3E : 2A 1B BF            	ld	hl, (asm_adr)
    5038/    1A41 : 22 1D BF            	ld	(tasm_adr), hl
    5039/    1A44 :                     	
    5040/    1A44 :                     	; print address
    5041/    1A44 :                     
    5042/    1A44 :                     next_asm:
    5043/    1A44 : AF                  	xor	a
    5044/    1A45 : 32 1F BF            	ld	(element_cnt), a
    5045/    1A48 : 32 21 BF            	ld	(opc_cd), a
    5046/    1A4B : 32 22 BF            	ld	(opr1_cd), a
    5047/    1A4E : 32 23 BF            	ld	(opr2_cd), a
    5048/    1A51 :                     
    5049/    1A51 : 2A 1D BF            	ld	hl, (tasm_adr)
    5050/    1A54 : CD 2C 26            	call	HEXOUT4
    5051/    1A57 : 21 12 2C            	ld	hl, dsap
    5052/    1A5A : CD 23 26            	call	STROUT
    5053/    1A5D :                     
    5054/    1A5D :                     ;-----------------------------
    5055/    1A5D :                     ; get a line from console
    5056/    1A5D :                     ;-----------------------------
    5057/    1A5D : 21 39 BF            	ld	hl, ky_flg
    5058/    1A60 : CB CE               	set	NO_LF>>1, (hl)
    5059/    1A62 :                     
    5060/    1A62 : CD 83 26            	call	GETLIN
    5061/    1A65 :                     
    5062/    1A65 : E5                  	push	hl
    5063/    1A66 : 21 39 BF            	ld	hl, ky_flg
    5064/    1A69 : CB 8E               	res	NO_LF>>1, (hl)
    5065/    1A6B : E1                  	pop	hl
    5066/    1A6C :                     
    5067/    1A6C : CD DD 25            	call	recorrect
    5068/    1A6F : 7E                  	ld	a, (hl)
    5069/    1A70 : FE 1B               	cp	ESC
    5070/    1A72 : 28 0D               	jr	z, ext_asm
    5071/    1A74 : FE 2E               	cp	'.'
    5072/    1A76 : 28 09               	jr	z, ext_asm
    5073/    1A78 : B7                  	or	a		; NULL?
    5074/    1A79 : C2 10 1B            	jp	nz, cont_asm
    5075/    1A7C : CD 8D 1A            	call	lf_out
    5076/    1A7F : 18 C3               	jr	next_asm
    5077/    1A81 :                     
    5078/    1A81 :                     ext_asm:
    5079/    1A81 : CD 8D 1A            	call	lf_out
    5080/    1A84 : 2A 1D BF            	ld	hl, (tasm_adr)
    5081/    1A87 : 22 1B BF            	ld	(asm_adr), hl	; save new address
    5082/    1A8A : C3 BD 01            	jp	WSTART		; exit assemble mode
    5083/    1A8D :                     
    5084/    1A8D :                     lf_out:
    5085/    1A8D : 3E 0A               	ld	a, LF
    5086/    1A8F : C3 8F 2E            	jp	CONOUT
    5087/    1A92 :                     
    5088/    1A92 :                     asm_err:
    5089/    1A92 : 21 8C 13            	ld	hl, com_errm
    5090/    1A95 :                     asm_err1:
    5091/    1A95 : CD 8D 1A            	call	lf_out
    5092/    1A98 : CD 23 26            	call	STROUT
    5093/    1A9B : 21 03 2C            	ld	hl, ERRMSG
    5094/    1A9E : CD 23 26            	call	STROUT
    5095/    1AA1 : 18 A1               	jr	next_asm
    5096/    1AA3 :                     
    5097/    1AA3 :                     ;-------------------------------------------------
    5098/    1AA3 :                     ; post operation
    5099/    1AA3 :                     ;-------------------------------------------------
    5100/    1AA3 :                     cout_sp:
    5101/    1AA3 : 3A 21 BF            	ld	a, (opc_cd)
    5102/    1AA6 : FE 44               	cp	68
    5103/    1AA8 : 28 37               	jr	z, skp_outm
    5104/    1AAA : FE 45               	cp	69
    5105/    1AAC : 28 38               	jr	z, dmp_db
    5106/    1AAE : FE 46               	cp	70
    5107/    1AB0 : 28 3F               	jr	z, dmp_dw
    5108/    1AB2 :                     
    5109/    1AB2 : 3E 20               	ld	a, ' '
    5110/    1AB4 : 0E 26               	ld	c, BUFLEN-2	; clear
    5111/    1AB6 : 21 CE BF            	ld	hl, line_buf	; disassemble string buffer
    5112/    1AB9 :                     cout_sp1:
    5113/    1AB9 : 77                  	ld	(hl), a
    5114/    1ABA : 23                  	inc	hl
    5115/    1ABB : 0D                  	dec	c
    5116/    1ABC : 20 FB               	jr	nz, cout_sp1
    5117/    1ABE : 3E 0D               	ld	a, CR
    5118/    1AC0 : 77                  	ld	(hl), a
    5119/    1AC1 : 23                  	inc	hl
    5120/    1AC2 : AF                  	xor	a
    5121/    1AC3 : 77                  	ld	(hl), a		; set delimitor
    5122/    1AC4 : CD 23 26            	call	STROUT
    5123/    1AC7 :                     
    5124/    1AC7 : 2A 1D BF            	ld	hl, (tasm_adr)	; disassemble address
    5125/    1ACA : 11 CE BF            	ld	de, line_buf	; disassemble string buffer
    5126/    1ACD : D5                  	push	de
    5127/    1ACE : CD 3D 09            	call	get_disasm_st
    5128/    1AD1 : E1                  	pop	hl
    5129/    1AD2 : CD 23 26            	call	STROUT		; cousole out result inline assemble
    5130/    1AD5 :                     cout_sp2:
    5131/    1AD5 : 2A 1D BF            	ld	hl, (tasm_adr)	; disassemble address
    5132/    1AD8 : CD 08 1B            	call	setbytec
    5133/    1ADB : 22 1D BF            	ld	(tasm_adr), hl	; next address
    5134/    1ADE : C3 44 1A            	jp	next_asm
    5135/    1AE1 :                     
    5136/    1AE1 :                     skp_outm:
    5137/    1AE1 : CD 8D 1A            	call	lf_out
    5138/    1AE4 : 18 EF               	jr	cout_sp2
    5139/    1AE6 :                     
    5140/    1AE6 :                     dmp_db:
    5141/    1AE6 : CD FE 1A            	call	setdsadr
    5142/    1AE9 : CD 08 1B            	call	setbytec
    5143/    1AEC : 22 D2 BE            	ld	(deaddr), hl
    5144/    1AEF : 18 08               	jr	prtdmp
    5145/    1AF1 :                     
    5146/    1AF1 :                     dmp_dw:
    5147/    1AF1 : CD FE 1A            	call	setdsadr
    5148/    1AF4 : 23                  	inc	hl
    5149/    1AF5 : 23                  	inc	hl
    5150/    1AF6 : 22 D2 BE            	ld	(deaddr), hl
    5151/    1AF9 :                     prtdmp:	
    5152/    1AF9 : CD 01 08            	call	dpm
    5153/    1AFC : 18 D7               	jr	cout_sp2
    5154/    1AFE :                     
    5155/    1AFE :                     setdsadr:
    5156/    1AFE : CD 8D 1A            	call	lf_out
    5157/    1B01 : 2A 1D BF            	ld	hl, (tasm_adr)
    5158/    1B04 : 22 D0 BE            	ld	(dsaddr), hl
    5159/    1B07 : C9                  	ret
    5160/    1B08 :                     
    5161/    1B08 :                     setbytec:
    5162/    1B08 : 3A 20 BF            	ld	a, (byte_count)
    5163/    1B0B : 4F                  	ld	c, a
    5164/    1B0C : AF                  	xor	a
    5165/    1B0D : 47                  	ld	b, a
    5166/    1B0E : 09                  	add	hl, bc
    5167/    1B0F : C9                  	ret
    5168/    1B10 :                     
    5169/    1B10 :                     ;----------------------------
    5170/    1B10 :                     ; analize input data
    5171/    1B10 :                     ;----------------------------
    5172/    1B10 :                     cont_asm:
    5173/    1B10 : CD 6A 24            	call	analize_input
    5174/    1B13 : DA 92 1A            	jp	c, asm_err		;error
    5175/    1B16 :                     
    5176/    1B16 :                     ; make machine code
    5177/    1B16 :                     
    5178/    1B16 : 3A 1F BF            	ld	a, (element_cnt)
    5179/    1B19 : FE 01               	cp	1
    5180/    1B1B : CA EB 20            	jp	z, mk_e1
    5181/    1B1E : FE 02               	cp	2
    5182/    1B20 : CA 75 21            	jp	z, mk_e2
    5183/    1B23 :                     
    5184/    1B23 :                     ;333333333333333333333333333333333333333
    5185/    1B23 :                     ;
    5186/    1B23 :                     ; make machine code,
    5187/    1B23 :                     ; element_cnt = 3 (ex. LD SP, HL)
    5188/    1B23 :                     ;
    5189/    1B23 :                     ;333333333333333333333333333333333333333
    5190/    1B23 :                     
    5191/    1B23 : =0DH                 el3_um	equ	el3_stbe - el3_stb
    5192/    1B23 :                     
    5193/    1B23 : 3A 21 BF            mk_e3:	ld	a, (opc_cd)
    5194/    1B26 : 01 0D 00            	ld	bc, el3_um
    5195/    1B29 : 21 3B 1B            	ld	hl, el3_stb
    5196/    1B2C : ED B1               	cpir
    5197/    1B2E : C2 92 1A            	jp	nz, asm_err
    5198/    1B31 :                     	
    5199/    1B31 : 21 48 1B            	ld	hl, el3_jtb
    5200/    1B34 :                     
    5201/    1B34 :                     jp_each:
    5202/    1B34 : 09                  	add	hl, bc		; offset : BC = BC * 2
    5203/    1B35 : 09                  	add	hl, bc		; HL = ent_el2 + offset
    5204/    1B36 : 4E                  	ld	c, (hl)
    5205/    1B37 : 23                  	inc	hl
    5206/    1B38 : 46                  	ld	b, (hl)
    5207/    1B39 : C5                  	push	bc
    5208/    1B3A : C9                  	ret
    5209/    1B3B :                     
    5210/    1B3B : 01                  el3_stb:	db	1			; normal, DD, FD, ED
    5211/    1B3C : 06 15               		db	6, 21 			; normal, DD, FD
    5212/    1B3E : 16 19               		db	22, 25			; normal, DD, FD, ED
    5213/    1B40 : 2B                  		db	43 			; normal
    5214/    1B41 : 37 3C               		db	55, 60			; normal, ED
    5215/    1B43 : 2A 2D               		db	42, 45			; normal
    5216/    1B45 : 22 24 23            		db	34, 36, 35 		; CB, DD, FD
    5217/    1B48 :                     el3_stbe:	
    5218/    1B48 :                     
    5219/    1B48 : 72 1B               el3_jtb:	dw	el3_35
    5220/    1B4A : 90 1B               		dw	el3_36
    5221/    1B4C : AE 1B               		dw	el3_34
    5222/    1B4E : 2F 1C               		dw	el3_45
    5223/    1B50 : 3C 1C               		dw	el3_42
    5224/    1B52 : 5C 1C               		dw	el3_60
    5225/    1B54 : 65 1C               		dw	el3_55
    5226/    1B56 : A5 1C               		dw	el3_43
    5227/    1B58 : DA 1C               		dw	el3_25
    5228/    1B5A : E2 1C               		dw	el3_22
    5229/    1B5C : 5B 1D               		dw	el3_21
    5230/    1B5E : DD 1D               		dw	el3_6
    5231/    1B60 : 67 1E               		dw	el3_1
    5232/    1B62 :                     
    5233/    1B62 :                     
    5234/    1B62 :                     ;
    5235/    1B62 :                     ; SET section
    5236/    1B62 :                     ;
    5237/    1B62 :                     ; r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    5238/    1B62 :                     
    5239/    1B62 : C0 C8 D0 D8 E0 E8   set_mcb:	db	0C0h, 0C8h, 0D0h, 0D8h, 0E0h, 0E8h, 0F0h, 0F8h
             1B68 : F0 F8             
    5240/    1B6A : C6 CE D6 DE E6 EE   set_xyt:	db	0C6h, 0CEh, 0D6h, 0DEh, 0E6h, 0EEh, 0F6h, 0FEh
             1B70 : F6 FE             
    5241/    1B72 :                     
    5242/    1B72 :                     el3_35: ; SET  ( CB, DD, FD )
    5243/    1B72 :                     
    5244/    1B72 : 21 62 1B            	ld	hl, set_mcb
    5245/    1B75 : 22 2C BF            	ld	(cb_mcw), hl
    5246/    1B78 : 21 6A 1B            	ld	hl, set_xyt
    5247/    1B7B : 22 2E BF            	ld	(cb_xyw), hl
    5248/    1B7E : 18 3A               	jr	bit_res_set
    5249/    1B80 :                     
    5250/    1B80 :                     ;
    5251/    1B80 :                     ; RES section
    5252/    1B80 :                     ;
    5253/    1B80 :                     ; r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    5254/    1B80 :                     
    5255/    1B80 : 80 88 90 98 A0 A8   res_mcb:	db	80h, 88h, 90h, 98h, 0A0h, 0A8h, 0B0h, 0B8h
             1B86 : B0 B8             
    5256/    1B88 : 86 8E 96 9E A6 AE   res_xyt:	db	86h, 8Eh, 96h, 9Eh, 0A6h, 0AEh, 0B6h, 0BEh
             1B8E : B6 BE             
    5257/    1B90 :                     
    5258/    1B90 :                     el3_36: ; RES  ( CB, DD, FD )
    5259/    1B90 :                     
    5260/    1B90 : 21 80 1B            	ld	hl, res_mcb
    5261/    1B93 : 22 2C BF            	ld	(cb_mcw), hl
    5262/    1B96 : 21 88 1B            	ld	hl, res_xyt
    5263/    1B99 : 22 2E BF            	ld	(cb_xyw), hl
    5264/    1B9C : 18 1C               	jr	bit_res_set
    5265/    1B9E :                     
    5266/    1B9E :                     ;
    5267/    1B9E :                     ; BIT section
    5268/    1B9E :                     ;
    5269/    1B9E :                     ; r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    5270/    1B9E :                     
    5271/    1B9E : =8H                  bit_mcbn	equ	bit_mcbe - bit_mcb
    5272/    1B9E : 40 48 50 58 60 68   bit_mcb:	db	40h, 48h, 50h, 58h, 60h, 68h, 70h, 78h
             1BA4 : 70 78             
    5273/    1BA6 :                     bit_mcbe:
    5274/    1BA6 : 46 4E 56 5E 66 6E   bit_xyt:	db	46h, 4Eh, 56h, 5Eh, 66h, 6Eh, 76h, 7Eh
             1BAC : 76 7E             
    5275/    1BAE :                     
    5276/    1BAE :                     
    5277/    1BAE :                     el3_34: ; BIT  ( CB, DD, FD )
    5278/    1BAE :                     
    5279/    1BAE : 21 9E 1B            	ld	hl, bit_mcb
    5280/    1BB1 : 22 2C BF            	ld	(cb_mcw), hl
    5281/    1BB4 : 21 A6 1B            	ld	hl, bit_xyt
    5282/    1BB7 : 22 2E BF            	ld	(cb_xyw), hl
    5283/    1BBA :                     
    5284/    1BBA :                     bit_res_set:
    5285/    1BBA : 3A 22 BF            	ld	a, (opr1_cd)
    5286/    1BBD : FE 19               	cp	25
    5287/    1BBF : C2 92 1A            	jp	nz, asm_err
    5288/    1BC2 :                     
    5289/    1BC2 : 2A 24 BF            	ld	hl, (opr_num25)
    5290/    1BC5 : 7C                  	ld	a, h
    5291/    1BC6 : B7                  	or	a
    5292/    1BC7 : C2 92 1A            	jp	nz, asm_err
    5293/    1BCA : 7D                  	ld	a, l
    5294/    1BCB : FE 08               	cp	8
    5295/    1BCD : D2 92 1A            	jp	nc, asm_err
    5296/    1BD0 :                     
    5297/    1BD0 :                     	; HL : 0 - 7
    5298/    1BD0 :                     
    5299/    1BD0 : 3A 23 BF            	ld	a, (opr2_cd)
    5300/    1BD3 : FE 21               	cp	33
    5301/    1BD5 : 28 2C               	jr	z, bit_ixp
    5302/    1BD7 : FE 24               	cp	36
    5303/    1BD9 : 28 3A               	jr	z, bit_ixm
    5304/    1BDB : FE 22               	cp	34
    5305/    1BDD : 28 3B               	jr	z, bit_iyp
    5306/    1BDF : FE 25               	cp	37
    5307/    1BE1 : 28 3F               	jr	z, bit_iym
    5308/    1BE3 :                     ;
    5309/    1BE3 :                     ; CB : bit n, [r | (hl)]
    5310/    1BE3 :                     ;
    5311/    1BE3 : ED 4B 2C BF         	ld	bc, (cb_mcw)
    5312/    1BE7 : 09                  	add	hl, bc
    5313/    1BE8 : 56                  	ld	d, (hl)		; get MC base
    5314/    1BE9 :                     
    5315/    1BE9 : 3A 23 BF            	ld	a, (opr2_cd)
    5316/    1BEC : 21 3A 1E            	ld	hl, r_hl_nn
    5317/    1BEF : 01 08 00            	ld	bc, bit_mcbn
    5318/    1BF2 : ED B1               	cpir
    5319/    1BF4 : C2 92 1A            	jp	nz, asm_err
    5320/    1BF7 :                     
    5321/    1BF7 : 79                  	ld	a, c
    5322/    1BF8 : FE 07               	cp	7
    5323/    1BFA : 28 03               	jr	z, el3_341
    5324/    1BFC :                     
    5325/    1BFC : 3E 06               	ld	a, 6
    5326/    1BFE : 91                  	sub	c
    5327/    1BFF :                     el3_341:
    5328/    1BFF : 82                  	add	a, d		; make 2nd MC
    5329/    1C00 : C3 16 24            	jp	el2_130
    5330/    1C03 :                     
    5331/    1C03 :                     	; HL : 0 - 7
    5332/    1C03 :                     
    5333/    1C03 :                     bit_ixp:
    5334/    1C03 : 3A 2B BF            	ld	a, (opr_num33)
    5335/    1C06 :                     bit_ixp1:
    5336/    1C06 : 5F                  	ld	e, a
    5337/    1C07 : 16 DD               	ld	d, 0DDh
    5338/    1C09 :                     
    5339/    1C09 :                     ; adjust I/F
    5340/    1C09 :                     ; d: 1st MC, a: 2nd MC, c: 3rd MC, e: 4th MC
    5341/    1C09 :                     
    5342/    1C09 :                     el3_342:
    5343/    1C09 : ED 4B 2E BF         	ld	bc, (cb_xyw)
    5344/    1C0D : 09                  	add	hl, bc
    5345/    1C0E : 4B                  	ld	c, e		; adjust I/F
    5346/    1C0F : 5E                  	ld	e, (hl)		; 4th MC
    5347/    1C10 : 3E CB               	ld	a, 0CBh
    5348/    1C12 : C3 39 24            	jp	mc_end41	; save 4byte MC
    5349/    1C15 :                     
    5350/    1C15 :                     bit_ixm:
    5351/    1C15 : 3A 2A BF            	ld	a, (opr_num36)
    5352/    1C18 : 18 EC               	jr	bit_ixp1
    5353/    1C1A :                     
    5354/    1C1A :                     
    5355/    1C1A :                     bit_iyp:
    5356/    1C1A : 3A 29 BF            	ld	a, (opr_num34)
    5357/    1C1D :                     bit_iyp1:
    5358/    1C1D : 5F                  	ld	e, a
    5359/    1C1E : 16 FD               	ld	d, 0FDh
    5360/    1C20 : 18 E7               	jr	el3_342
    5361/    1C22 :                     
    5362/    1C22 :                     bit_iym:
    5363/    1C22 : 3A 28 BF            	ld	a, (opr_num37)
    5364/    1C25 : 18 F6               	jr	bit_iyp1
    5365/    1C27 :                     
    5366/    1C27 :                     ;
    5367/    1C27 :                     ; CALL section
    5368/    1C27 :                     ; ret_no:	db	6, 18, 19, 20, 21, 22, 23, 24
    5369/    1C27 :                     ;
    5370/    1C27 : EC E4 F4 D4 C4 FC   call_mc1t:	db	0ECh, 0E4h, 0F4h, 0D4h, 0C4h, 0FCh, 0CCh, 0DCh
             1C2D : CC DC             
    5371/    1C2F :                     
    5372/    1C2F :                     el3_45: ; CALL ( normal )
    5373/    1C2F :                     
    5374/    1C2F : 11 27 1C            	ld	de, call_mc1t
    5375/    1C32 : 18 0B               	jr	el3_421
    5376/    1C34 :                     ;
    5377/    1C34 :                     ; JP section
    5378/    1C34 :                     ; ret_no:	db	6, 18, 19, 20, 21, 22, 23, 24
    5379/    1C34 :                     ;
    5380/    1C34 : =8H                  jp_mc1tm	equ	jp_mc1te - jp_mc1t
    5381/    1C34 : EA E2 F2 D2 C2 FA   jp_mc1t:	db	0EAh, 0E2h, 0F2h, 0D2h, 0C2h, 0FAh, 0CAh, 0DAh
             1C3A : CA DA             
    5382/    1C3C :                     jp_mc1te:
    5383/    1C3C :                     
    5384/    1C3C :                     el3_42: ; JP   ( normal )
    5385/    1C3C :                     
    5386/    1C3C : 11 34 1C            	ld	de, jp_mc1t
    5387/    1C3F :                     
    5388/    1C3F :                     el3_421:
    5389/    1C3F : 21 87 22            	ld	hl, ret_no
    5390/    1C42 : 01 08 00            	ld	bc, jp_mc1tm
    5391/    1C45 : 3A 22 BF            	ld	a, (opr1_cd)
    5392/    1C48 : ED B1               	cpir
    5393/    1C4A : C2 92 1A            	jp	nz, asm_err
    5394/    1C4D :                     
    5395/    1C4D : 3A 23 BF            	ld	a, (opr2_cd)
    5396/    1C50 : FE 19               	cp	25
    5397/    1C52 : C2 92 1A            	jp	nz, asm_err
    5398/    1C55 :                     
    5399/    1C55 : 62                  	ld	h, d		; DE : MC target table
    5400/    1C56 : 6B                  	ld	l, e		; DE : MC target table
    5401/    1C57 : 09                  	add	hl, bc
    5402/    1C58 : 7E                  	ld	a, (hl)		; get 1st MC
    5403/    1C59 : C3 0A 22            	jp	el2_451
    5404/    1C5C :                     
    5405/    1C5C :                     ;
    5406/    1C5C :                     ; OUT section
    5407/    1C5C :                     ;
    5408/    1C5C : =6H                  in_selm		equ	ld_e2_tbl1 - in_selt
    5409/    1C5C :                     
    5410/    1C5C :                     el3_60: ; OUT  ( normal, ED )
    5411/    1C5C :                     
    5412/    1C5C : 11 D3 41            	ld	de, 41D3H
    5413/    1C5F : ED 4B 22 BF         	ld	bc, (opr1_cd)	; c = (opr1_cd), b = (opr2_cd)
    5414/    1C63 : 18 0B               	jr	el3_550
    5415/    1C65 :                     
    5416/    1C65 :                     ;
    5417/    1C65 :                     ; IN section
    5418/    1C65 :                     ;
    5419/    1C65 :                     el3_55: ; IN   ( normal, ED )
    5420/    1C65 :                     
    5421/    1C65 : 11 DB 40            	ld	de, 40DBH
    5422/    1C68 : 3A 22 BF            	ld	a, (opr1_cd)
    5423/    1C6B : 47                  	ld	b, a
    5424/    1C6C : 3A 23 BF            	ld	a, (opr2_cd)
    5425/    1C6F : 4F                  	ld	c, a
    5426/    1C70 :                     
    5427/    1C70 :                     el3_550:
    5428/    1C70 : 79                  	ld	a, c
    5429/    1C71 : FE 23               	cp	35
    5430/    1C73 : 28 1F               	jr	z, in_a_nn
    5431/    1C75 : FE 1F               	cp	31
    5432/    1C77 : C2 92 1A            	jp	nz, asm_err
    5433/    1C7A :                     
    5434/    1C7A : 78                  	ld	a, b
    5435/    1C7B : FE 01               	cp	1
    5436/    1C7D : 28 0F               	jr	z, el3_551	; passing search
    5437/    1C7F :                     	
    5438/    1C7F : 21 24 1E            	ld	hl, in_selt
    5439/    1C82 : 01 06 00            	ld	bc, in_selm
    5440/    1C85 : CD C9 1C            	call	mkmc_sh
    5441/    1C88 : DA 92 1A            	jp	c, asm_err
    5442/    1C8B : 7A                  	ld	a, d
    5443/    1C8C : 18 03               	jr	el3_552
    5444/    1C8E :                     	
    5445/    1C8E :                     el3_551:
    5446/    1C8E : 7A                  	ld	a, d
    5447/    1C8F : C6 38               	add	a, 38h		; get 2nd MC
    5448/    1C91 :                     el3_552:
    5449/    1C91 : C3 64 24            	jp	el2_5411
    5450/    1C94 :                     
    5451/    1C94 :                     in_a_nn:
    5452/    1C94 : 2A 26 BF            	ld	hl, (opr_num35)
    5453/    1C97 : 7C                  	ld	a, h
    5454/    1C98 : B7                  	or	a
    5455/    1C99 : C2 92 1A            	jp	nz, asm_err
    5456/    1C9C : 7D                  	ld	a, l
    5457/    1C9D : F5                  	push	af		; adjust I/F
    5458/    1C9E : 7B                  	ld	a, e		; 1st MC
    5459/    1C9F : 18 25               	jr	el3_431		; save 2byte MC (el2_441)
    5460/    1CA1 :                     	
    5461/    1CA1 :                     ;
    5462/    1CA1 :                     ; JR section
    5463/    1CA1 :                     ;
    5464/    1CA1 : 14 12 15 06         jr_cct:	db	20, 18, 21, 6
    5465/    1CA5 :                     
    5466/    1CA5 :                     el3_43: ; JR   ( normal )
    5467/    1CA5 :                     
    5468/    1CA5 : 21 A1 1C            	ld	hl, jr_cct
    5469/    1CA8 : 01 04 00            	ld	bc, 4
    5470/    1CAB : 16 20               	ld	d, 20h		; base MC
    5471/    1CAD : 3A 22 BF            	ld	a, (opr1_cd)
    5472/    1CB0 : CD C9 1C            	call	mkmc_sh
    5473/    1CB3 : DA 92 1A            	jp	c, asm_err
    5474/    1CB6 :                     
    5475/    1CB6 : 3A 23 BF            	ld	a, (opr2_cd)
    5476/    1CB9 : FE 19               	cp	25		; number?
    5477/    1CBB : C2 92 1A            	jp	nz, asm_err
    5478/    1CBE :                     
    5479/    1CBE : CD B3 25            	call	calc_reladr
    5480/    1CC1 : DA 92 1A            	jp	c, asm_err
    5481/    1CC4 :                     	
    5482/    1CC4 : F5                  	push	af		; adjust I/F
    5483/    1CC5 : 7A                  	ld	a, d		; adjust I/F
    5484/    1CC6 :                     el3_431:
    5485/    1CC6 : C3 2C 22            	jp	el2_441		; save 2byte MC
    5486/    1CC9 :                     ;
    5487/    1CC9 :                     ; hl : search table
    5488/    1CC9 :                     ; bc : loop counter
    5489/    1CC9 :                     ; d  : base MC 
    5490/    1CC9 :                     ;
    5491/    1CC9 :                     ; output:
    5492/    1CC9 :                     ;	  CF=1 : error
    5493/    1CC9 :                     ;	  CF=0 : D = MC
    5494/    1CC9 :                     mkmc_sh:
    5495/    1CC9 : ED A1               	cpi
    5496/    1CCB : 28 0C               	jr	z, mkmc_shed
    5497/    1CCD :                     	
    5498/    1CCD : 5F                  	ld	e, a	; save a
    5499/    1CCE : 7A                  	ld	a, d
    5500/    1CCF : C6 08               	add	a, 8
    5501/    1CD1 : 57                  	ld	d, a
    5502/    1CD2 :                     
    5503/    1CD2 : 79                  	ld	a, c
    5504/    1CD3 : B0                  	or	b
    5505/    1CD4 : 7B                  	ld	a, e	; restore a
    5506/    1CD5 : 20 F2               	jr	nz, mkmc_sh
    5507/    1CD7 : 37                  	scf
    5508/    1CD8 : C9                  	ret
    5509/    1CD9 :                     
    5510/    1CD9 :                     mkmc_shed:
    5511/    1CD9 : C9                  	ret
    5512/    1CDA :                     
    5513/    1CDA :                     ;
    5514/    1CDA :                     ; ADC section
    5515/    1CDA :                     ;
    5516/    1CDA :                     
    5517/    1CDA :                     el3_25: ; SBC  ( normal, DD, FD, ED )
    5518/    1CDA :                     
    5519/    1CDA : 11 9F 42            	ld	de, 429fh
    5520/    1CDD : 3E DE               	ld	a, 0DEh
    5521/    1CDF : 08                  	ex	af, af'
    5522/    1CE0 : 18 06               	jr	el3_221
    5523/    1CE2 :                     ;
    5524/    1CE2 :                     ; ADC section
    5525/    1CE2 :                     ;
    5526/    1CE2 :                     ; defined other section
    5527/    1CE2 :                     ; r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    5528/    1CE2 :                     ; ld_rr_:	db	25
    5529/    1CE2 :                     ; ex_sr_:	db	33, 36, 34, 37
    5530/    1CE2 :                     ; r_hl_nne:
    5531/    1CE2 :                     
    5532/    1CE2 : =9H                  adc_MC	equ	ex_sr_ - r_hl_nn
    5533/    1CE2 : =4H                  adc_3MC	equ	r_hl_nne - ex_sr_
    5534/    1CE2 :                     
    5535/    1CE2 :                     el3_22: ; ADC  ( normal, DD, FD, ED )
    5536/    1CE2 :                     
    5537/    1CE2 : 11 8F 4A            	ld	de, 4a8fh
    5538/    1CE5 : 3E CE               	ld	a, 0CEh
    5539/    1CE7 : 08                  	ex	af, af'
    5540/    1CE8 :                     
    5541/    1CE8 :                     el3_221:
    5542/    1CE8 : 3A 22 BF            	ld	a, (opr1_cd)
    5543/    1CEB : FE 01               	cp	1		; A?
    5544/    1CED : 28 2A               	jr	z, adc_a_
    5545/    1CEF : FE 0B               	cp	11		; HL?
    5546/    1CF1 : C2 92 1A            	jp	nz, asm_err
    5547/    1CF4 :                     
    5548/    1CF4 :                     ; adc hl,[ BC | DE | HL | SP ]
    5549/    1CF4 :                     
    5550/    1CF4 : 3A 23 BF            	ld	a, (opr2_cd)
    5551/    1CF7 : FE 05               	cp	5
    5552/    1CF9 : 28 19               	jr	z, adc_hl_bc
    5553/    1CFB : FE 08               	cp	8
    5554/    1CFD : 28 11               	jr	z, adc_hl_de
    5555/    1CFF : FE 0B               	cp	11
    5556/    1D01 : 28 09               	jr	z, adc_hl_hl
    5557/    1D03 : FE 10               	cp	16
    5558/    1D05 : C2 92 1A            	jp	nz, asm_err
    5559/    1D08 :                     
    5560/    1D08 :                     adc_hl_sp:
    5561/    1D08 : 3E 30               	ld	a, 30h
    5562/    1D0A : 18 09               	jr	adc_hl_
    5563/    1D0C :                     adc_hl_hl:
    5564/    1D0C : 3E 20               	ld	a, 20h
    5565/    1D0E : 18 05               	jr	adc_hl_
    5566/    1D10 :                     adc_hl_de:
    5567/    1D10 : 3E 10               	ld	a, 10h
    5568/    1D12 : 18 01               	jr	adc_hl_
    5569/    1D14 :                     adc_hl_bc:
    5570/    1D14 : AF                  	xor	a
    5571/    1D15 :                     adc_hl_:
    5572/    1D15 : 82                  	add	a, d		; make 2nd MC
    5573/    1D16 :                     
    5574/    1D16 : C3 64 24            	jp	el2_5411
    5575/    1D19 :                     
    5576/    1D19 :                     adc_a_:
    5577/    1D19 : 3A 23 BF            	ld	a, (opr2_cd)
    5578/    1D1C : 21 3A 1E            	ld	hl, r_hl_nn
    5579/    1D1F : 01 09 00            	ld	bc, adc_MC
    5580/    1D22 : ED B1               	cpir
    5581/    1D24 : 20 18               	jr	nz, chk_adc3mc
    5582/    1D26 :                     
    5583/    1D26 : 79                  	ld	a, c
    5584/    1D27 : FE 08               	cp	8
    5585/    1D29 : 28 10               	jr	z, adc_a_a
    5586/    1D2B : B7                  	or	a
    5587/    1D2C : 28 05               	jr	z, adc_a_n
    5588/    1D2E : 7B                  	ld	a, e
    5589/    1D2F : 91                  	sub	c		; make MC 1
    5590/    1D30 :                     adc_a_x:
    5591/    1D30 : C3 FE 20            	jp	st_mc11
    5592/    1D33 :                     	
    5593/    1D33 :                     adc_a_n:
    5594/    1D33 : 2A 24 BF            	ld	hl, (opr_num25)
    5595/    1D36 : 08                  	ex	af, af'		; get 1st MC
    5596/    1D37 : 57                  	ld	d, a		; adjust I/F
    5597/    1D38 : C3 F7 1E            	jp	ld_r251
    5598/    1D3B :                     
    5599/    1D3B :                     adc_a_a:
    5600/    1D3B :                     ;	inc	e
    5601/    1D3B : 7B                  	ld	a, e
    5602/    1D3C : 18 F2               	jr	adc_a_x
    5603/    1D3E :                     
    5604/    1D3E :                     chk_adc3mc:
    5605/    1D3E : 21 43 1E            	ld	hl, ex_sr_
    5606/    1D41 : 01 04 00            	ld	bc, adc_3MC
    5607/    1D44 : ED B1               	cpir
    5608/    1D46 : C2 92 1A            	jp	nz, asm_err
    5609/    1D49 :                     
    5610/    1D49 : 21 28 BF            	ld	hl, opr_num37
    5611/    1D4C : 09                  	add	hl, bc
    5612/    1D4D : 56                  	ld	d, (hl)		; 3rd MC
    5613/    1D4E :                     
    5614/    1D4E : 79                  	ld	a, c
    5615/    1D4F : 0E FD               	ld	c, 0FDH		; 1st MC
    5616/    1D51 : FE 02               	cp	2
    5617/    1D53 : 38 02               	jr	c, adc_fd
    5618/    1D55 :                     
    5619/    1D55 : 0E DD               	ld	c, 0DDH		; 1st MC
    5620/    1D57 :                     
    5621/    1D57 :                     adc_fd:
    5622/    1D57 : 1D                  	dec	e		; get 2nd MC
    5623/    1D58 : C3 3A 1F            	jp	ld_bc_n42	; save 3MC
    5624/    1D5B :                     ;
    5625/    1D5B :                     ; ADD section
    5626/    1D5B :                     ;
    5627/    1D5B :                     el3_21: ; ADD  ( normal, DD, FD )
    5628/    1D5B :                     
    5629/    1D5B : 11 87 09            	ld	de, 0987h
    5630/    1D5E : 3E C6               	ld	a, 0C6h
    5631/    1D60 : 08                  	ex	af, af'
    5632/    1D61 :                     
    5633/    1D61 : 3A 23 BF            	ld	a, (opr2_cd)
    5634/    1D64 : 47                  	ld	b, a
    5635/    1D65 : 3A 22 BF            	ld	a, (opr1_cd)
    5636/    1D68 : FE 01               	cp	1
    5637/    1D6A : 28 AD               	jr	z, adc_a_
    5638/    1D6C : FE 0B               	cp	11
    5639/    1D6E : 28 47               	jr	z, add_hl_
    5640/    1D70 : FE 0E               	cp	14
    5641/    1D72 : 28 09               	jr	z, add_ix_
    5642/    1D74 : FE 0F               	cp	15
    5643/    1D76 : C2 92 1A            	jp	nz, asm_err
    5644/    1D79 :                     ;;
    5645/    1D79 :                     ;;
    5646/    1D79 :                     add_iy_:
    5647/    1D79 : 0E FD               	ld	c, 0FDh
    5648/    1D7B : 18 02               	jr	el3_211
    5649/    1D7D :                     ;;
    5650/    1D7D :                     ;;
    5651/    1D7D :                     add_ix_:
    5652/    1D7D : 0E DD               	ld	c, 0DDh
    5653/    1D7F :                     el3_211:
    5654/    1D7F : 78                  	ld	a, b
    5655/    1D80 : FE 05               	cp	5
    5656/    1D82 : 28 19               	jr	z, add_xy_bc
    5657/    1D84 : FE 08               	cp	8
    5658/    1D86 : 28 19               	jr	z, add_xy_de
    5659/    1D88 : FE 0E               	cp	14
    5660/    1D8A : 28 19               	jr	z, add_ix_ix
    5661/    1D8C : FE 0F               	cp	15
    5662/    1D8E : CA AF 1D            	jp	z, add_iy_iy
    5663/    1D91 : FE 10               	cp	16
    5664/    1D93 : C2 92 1A            	jp	nz, asm_err
    5665/    1D96 :                     add_xy_sp:
    5666/    1D96 : 3E 39               	ld	a, 39h
    5667/    1D98 :                     el3_212:
    5668/    1D98 : F5                  	push	af		; adjust I/F
    5669/    1D99 : 79                  	ld	a, c
    5670/    1D9A : C3 2C 22            	jp	el2_441
    5671/    1D9D :                     
    5672/    1D9D :                     add_xy_bc:
    5673/    1D9D : 3E 09               	ld	a, 9h
    5674/    1D9F : 18 F7               	jr	el3_212
    5675/    1DA1 :                     add_xy_de:
    5676/    1DA1 : 3E 19               	ld	a, 19h
    5677/    1DA3 : 18 F3               	jr	el3_212
    5678/    1DA5 :                     add_ix_ix:
    5679/    1DA5 : 79                  	ld	a, c
    5680/    1DA6 : FE DD               	cp	0ddh
    5681/    1DA8 : C2 92 1A            	jp	nz, asm_err
    5682/    1DAB :                     add_xy_xy:
    5683/    1DAB : 3E 29               	ld	a, 29h
    5684/    1DAD : 18 E9               	jr	el3_212
    5685/    1DAF :                     add_iy_iy:
    5686/    1DAF : 79                  	ld	a, c
    5687/    1DB0 : FE FD               	cp	0fdh
    5688/    1DB2 : C2 92 1A            	jp	nz, asm_err
    5689/    1DB5 : 18 F4               	jr	add_xy_xy
    5690/    1DB7 :                     
    5691/    1DB7 :                     ;;
    5692/    1DB7 :                     ;;
    5693/    1DB7 :                     add_hl_:
    5694/    1DB7 : 78                  	ld	a, b
    5695/    1DB8 : FE 05               	cp	5
    5696/    1DBA : 28 12               	jr	z, add_hl_bc
    5697/    1DBC : FE 08               	cp	8
    5698/    1DBE : 28 13               	jr	z, add_hl_de
    5699/    1DC0 : FE 0B               	cp	11
    5700/    1DC2 : 28 14               	jr	z, add_hl_hl
    5701/    1DC4 : FE 10               	cp	16
    5702/    1DC6 : C2 92 1A            	jp	nz, asm_err
    5703/    1DC9 :                     add_hl_sp:
    5704/    1DC9 : 3E 39               	ld	a, 39h
    5705/    1DCB : C3 30 1D            	jp	adc_a_x
    5706/    1DCE :                     add_hl_bc:
    5707/    1DCE : 3E 09               	ld	a, 09h
    5708/    1DD0 : C3 30 1D            	jp	adc_a_x
    5709/    1DD3 :                     add_hl_de:
    5710/    1DD3 : 3E 19               	ld	a, 19h
    5711/    1DD5 : C3 30 1D            	jp	adc_a_x
    5712/    1DD8 :                     add_hl_hl:
    5713/    1DD8 : 3E 29               	ld	a, 29h
    5714/    1DDA : C3 30 1D            	jp	adc_a_x
    5715/    1DDD :                     
    5716/    1DDD :                     ;
    5717/    1DDD :                     ; EX section
    5718/    1DDD :                     ;
    5719/    1DDD :                     
    5720/    1DDD :                     el3_6:  ; EX   ( normal, DD, FD )
    5721/    1DDD :                     
    5722/    1DDD : 3A 23 BF            	ld	a, (opr2_cd)
    5723/    1DE0 : 47                  	ld	b, a
    5724/    1DE1 : 3A 22 BF            	ld	a, (opr1_cd)
    5725/    1DE4 : FE 02               	cp	2
    5726/    1DE6 : 28 26               	jr	z, ex_af_
    5727/    1DE8 : FE 08               	cp	8
    5728/    1DEA : 28 2C               	jr	z, ex_de_
    5729/    1DEC : FE 20               	cp	32
    5730/    1DEE : C2 92 1A            	jp	nz, asm_err
    5731/    1DF1 :                     
    5732/    1DF1 :                     ; ex (sp),
    5733/    1DF1 : 78                  	ld	a, b
    5734/    1DF2 : 1E E3               	ld	e, 0E3h
    5735/    1DF4 :                     
    5736/    1DF4 : FE 0B               	cp	11		; hl
    5737/    1DF6 : 28 13               	jr	z, ex_sp_hl
    5738/    1DF8 : FE 0E               	cp	14
    5739/    1DFA : 16 DD               	ld	d, 0ddh
    5740/    1DFC : 28 07               	jr	z, ex_sp_ix
    5741/    1DFE : FE 0F               	cp	15
    5742/    1E00 : C2 92 1A            	jp	nz, asm_err
    5743/    1E03 : 16 FD               	ld	d, 0fdh
    5744/    1E05 :                     ex_sp_ix:
    5745/    1E05 : 7B                  	ld	a, e
    5746/    1E06 : F5                  	push	af		; adjust I/F
    5747/    1E07 : 7A                  	ld	a, d
    5748/    1E08 : C3 2C 22            	jp	el2_441
    5749/    1E0B :                     
    5750/    1E0B :                     ex_sp_hl:
    5751/    1E0B : 7B                  	ld	a, e
    5752/    1E0C : 18 12               	jr	el3_61
    5753/    1E0E :                     
    5754/    1E0E :                     ex_af_:
    5755/    1E0E : 78                  	ld	a, b
    5756/    1E0F : FE 03               	cp	3
    5757/    1E11 : C2 92 1A            	jp	nz, asm_err
    5758/    1E14 : 3E 08               	ld	a, 08h		; 1st MC
    5759/    1E16 : 18 08               	jr	el3_61
    5760/    1E18 :                     
    5761/    1E18 :                     ex_de_:
    5762/    1E18 : 78                  	ld	a, b
    5763/    1E19 : FE 0B               	cp	11		; hl
    5764/    1E1B : C2 92 1A            	jp	nz, asm_err
    5765/    1E1E : 3E EB               	ld	a, 0ebh		; 1st MC
    5766/    1E20 :                     el3_61:
    5767/    1E20 : C3 FE 20            	jp	st_mc11
    5768/    1E23 :                     
    5769/    1E23 :                     ;
    5770/    1E23 :                     ; LD section
    5771/    1E23 :                     ;
    5772/    1E23 :                     
    5773/    1E23 :                     ; ld_en1 = 7 (1, 4, 6, 7, 9, 10, 12)
    5774/    1E23 :                     ; ld_en2 = 5 (5, 8, 11, 14, 15)
    5775/    1E23 :                     ; ld_en3 = 4 (33, 36, 34, 37 )
    5776/    1E23 :                     ; ld_en4 =  7 (13, 16, 17, 26, 27, 28, 35)
    5777/    1E23 : =7H                  ld_en1		equ	ld_e2_tbl1 - ld_e2_tbl
    5778/    1E23 : =5H                  ld_en2		equ	ld_e2_tbl2 - ld_e2_tbl1
    5779/    1E23 : =4H                  ld_en3		equ	ld_e2_tbl3 - ld_e2_tbl2
    5780/    1E23 : =7H                  ld_en4		equ	ld_e2_tble - ld_e2_tbl3
    5781/    1E23 :                     
    5782/    1E23 : 01                  ld_e2_tbl:	db	1
    5783/    1E24 : 04 06 07 09 0A 0C   in_selt:	db	4, 6, 7, 9, 10, 12
    5784/    1E2A : 05 08 0B 0E 0F      ld_e2_tbl1:	db	5, 8, 11, 14, 15
    5785/    1E2F : 21 24 22 25         ld_e2_tbl2:	db	33, 36, 34, 37
    5786/    1E33 : 0D                  ld_e2_tbl3:	db	13
    5787/    1E34 : 10                  		db	16
    5788/    1E35 : 11                  		db	17
    5789/    1E36 : 1A                  		db	26
    5790/    1E37 : 1B                  		db	27
    5791/    1E38 : 1C                  		db	28
    5792/    1E39 : 23                  		db	35
    5793/    1E3A :                     ld_e2_tble:
    5794/    1E3A :                     
    5795/    1E3A : =0DH                 rhlnnxy		equ	r_hl_nne - r_hl_nn
    5796/    1E3A : =8H                  ld_rrn		equ	ld_rr_ -  r_hl_nn
    5797/    1E3A : =0AH                 ld_rxyn_sp	equ	lda_spe - ld_rr_
    5798/    1E3A :                     
    5799/    1E3A : =5H                  m_num		equ	r_hl_nne - ld_rr_	; except No.0 - 4  (IX+,IY+,IX-,IY-,nn)
    5800/    1E3A :                     
    5801/    1E3A : 01 04 06 07 09 0A   r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
             1E40 : 0C 1C             
    5802/    1E42 : 19                  ld_rr_:		db	25
    5803/    1E43 : 21 24 22 25         ex_sr_:		db	33, 36, 34, 37
    5804/    1E47 :                     r_hl_nne:
    5805/    1E47 : 1A                  lda_sp:		db	26 ; LD A (BC)
    5806/    1E48 : 1B                  		db	27 ; LD A (DE)
    5807/    1E49 : 0D                  		db	13 ; LD A I
    5808/    1E4A : 11                  		db	17 ; LD A R
    5809/    1E4B : 23                  		db	35 ; LD A (1234H)
    5810/    1E4C :                     lda_spe:
    5811/    1E4C :                     
    5812/    1E4C : 68                  ld1_base:	db	68h	; L
    5813/    1E4D : 60                  		db	60h	; H
    5814/    1E4E : 58                  		db	58h	; E
    5815/    1E4F : 50                  		db	50h	; D
    5816/    1E50 : 48                  		db	48h	; C
    5817/    1E51 : 40                  		db	40h	; B
    5818/    1E52 : 78                  		db	78h	; A
    5819/    1E53 :                     
    5820/    1E53 : AF 1E               ld_r_jt:	dw	ld_r35 ; LD A (1234H)
    5821/    1E55 : C0 1E               		dw	ld_r17 ; LD A R
    5822/    1E57 : C5 1E               		dw	ld_r13 ; LD A I
    5823/    1E59 : C9 1E               		dw	ld_r27 ; LD A (DE)
    5824/    1E5B : CE 1E               		dw	ld_r26 ; LD A (BC)
    5825/    1E5D : D3 1E               		dw	ld_r37
    5826/    1E5F : E1 1E               		dw	ld_r34
    5827/    1E61 : E6 1E               		dw	ld_r36
    5828/    1E63 : EE 1E               		dw	ld_r33
    5829/    1E65 : F3 1E               		dw	ld_r25
    5830/    1E67 :                     
    5831/    1E67 :                     ; LD XXXX, XXXX
    5832/    1E67 :                     el3_1:
    5833/    1E67 : 3A 22 BF            	ld	a, (opr1_cd)
    5834/    1E6A : 21 23 1E            	ld	hl, ld_e2_tbl
    5835/    1E6D : 01 07 00            	ld	bc, ld_en1
    5836/    1E70 : ED B1               	cpir
    5837/    1E72 : C2 05 1F            	jp	nz, el3_11
    5838/    1E75 :                     	
    5839/    1E75 : 21 4C 1E            	ld	hl, ld1_base
    5840/    1E78 : 09                  	add	hl, bc
    5841/    1E79 : 56                  	ld	d, (hl)		; met MC base code
    5842/    1E7A :                     
    5843/    1E7A : 3A 23 BF            	ld	a, (opr2_cd)
    5844/    1E7D : 21 3A 1E            	ld	hl, r_hl_nn
    5845/    1E80 : 01 08 00            	ld	bc, ld_rrn
    5846/    1E83 : ED B1               	cpir
    5847/    1E85 : 20 0C               	jr	nz, el3_125
    5848/    1E87 :                     	
    5849/    1E87 : 79                  	ld	a, c
    5850/    1E88 : FE 07               	cp	7		; A param?
    5851/    1E8A : 28 03               	jr	z, el3_12
    5852/    1E8C : 3E 06               	ld	a, 6
    5853/    1E8E : 91                  	sub	c		; make B, C, D, E, H, L, (HL) param
    5854/    1E8F :                     el3_12:
    5855/    1E8F : B2                  	or	d		; make MC
    5856/    1E90 : C3 FE 20            	jp	st_mc11	
    5857/    1E93 :                     
    5858/    1E93 :                     
    5859/    1E93 :                     el3_125:
    5860/    1E93 : 21 42 1E            	ld	hl, ld_rr_
    5861/    1E96 : 01 0A 00            	ld	bc, ld_rxyn_sp
    5862/    1E99 : ED B1               	cpir
    5863/    1E9B : C2 92 1A            	jp	nz, asm_err
    5864/    1E9E :                     
    5865/    1E9E : 79                  	ld	a, c
    5866/    1E9F : FE 05               	cp	5		; check LD A, special
    5867/    1EA1 : 30 06               	jr	nc, el3_126
    5868/    1EA3 :                     
    5869/    1EA3 : 7A                  	ld	a, d
    5870/    1EA4 : FE 78               	cp	78h		; LD A ?
    5871/    1EA6 : C2 92 1A            	jp	nz, asm_err	; err, if B, C, D, E, H, L, (HL)
    5872/    1EA9 :                     
    5873/    1EA9 :                     el3_126:
    5874/    1EA9 : 21 53 1E            	ld	hl, ld_r_jt
    5875/    1EAC : C3 34 1B            	jp	jp_each
    5876/    1EAF :                     
    5877/    1EAF :                     ld_r35: ; LD A,(1234H)
    5878/    1EAF : 3E 3A               	ld	a, 3ah		; 1st MC
    5879/    1EB1 :                     
    5880/    1EB1 : 2A 1D BF            	ld	hl, (tasm_adr)
    5881/    1EB4 : 77                  	ld	(hl), a
    5882/    1EB5 : 23                  	inc	hl
    5883/    1EB6 : ED 5B 26 BF         	ld	de, (opr_num35)
    5884/    1EBA : 73                  	ld	(hl), e
    5885/    1EBB : 23                  	inc	hl
    5886/    1EBC : 72                  	ld	(hl), d
    5887/    1EBD : C3 16 22            	jp	mc_end3
    5888/    1EC0 :                     
    5889/    1EC0 :                     ld_r17: ; LD A,R
    5890/    1EC0 : 3E 5F               	ld	a, 5fh
    5891/    1EC2 :                     ld_r171:
    5892/    1EC2 : C3 64 24            	jp	el2_5411
    5893/    1EC5 :                     	
    5894/    1EC5 :                     ld_r13: ; LD A,I
    5895/    1EC5 : 3E 57               	ld	a, 57h
    5896/    1EC7 : 18 F9               	jr	ld_r171
    5897/    1EC9 :                     
    5898/    1EC9 :                     ld_r27: ; LD A,(DE)
    5899/    1EC9 : 3E 1A               	ld	a, 1ah
    5900/    1ECB : C3 FE 20            	jp	st_mc11
    5901/    1ECE :                     	
    5902/    1ECE :                     ld_r26: ; LD A,(BC)
    5903/    1ECE : 3E 0A               	ld	a, 0ah
    5904/    1ED0 : C3 FE 20            	jp	st_mc11
    5905/    1ED3 :                     
    5906/    1ED3 :                     ld_r37:	; LD r,(IY-nn)
    5907/    1ED3 : 3A 28 BF            	ld	a, (opr_num37)
    5908/    1ED6 :                     ld_r371:
    5909/    1ED6 : 4F                  	ld	c, a
    5910/    1ED7 : 1E FD               	ld	e, 0FDH
    5911/    1ED9 :                     ld_r372:
    5912/    1ED9 : 3E 06               	ld	a, 6
    5913/    1EDB : B2                  	or	d		; make 2nd MC
    5914/    1EDC : 57                  	ld	d, a		; adjust I/F
    5915/    1EDD : 7B                  	ld	a, e		; adjust I/F
    5916/    1EDE : C3 21 23            	jp	cp_xy1
    5917/    1EE1 :                     
    5918/    1EE1 :                     ld_r34: ; LD r,(IY+nn)
    5919/    1EE1 : 3A 29 BF            	ld	a, (opr_num34)
    5920/    1EE4 : 18 F0               	jr	ld_r371
    5921/    1EE6 :                     
    5922/    1EE6 :                     ld_r36: ; LD r,(IX-nn)
    5923/    1EE6 : 3A 2A BF            	ld	a, (opr_num36)
    5924/    1EE9 :                     ld_r361:
    5925/    1EE9 : 4F                  	ld	c, a
    5926/    1EEA : 1E DD               	ld	e, 0DDH
    5927/    1EEC : 18 EB               	jr	ld_r372
    5928/    1EEE :                     
    5929/    1EEE :                     ld_r33: ; LD r,(IX+nn)
    5930/    1EEE : 3A 2B BF            	ld	a, (opr_num33)
    5931/    1EF1 : 18 F6               	jr	ld_r361
    5932/    1EF3 :                     
    5933/    1EF3 :                     ld_r25: ; LD r, nn
    5934/    1EF3 : 7A                  	ld	a, d		; get 1st MC base
    5935/    1EF4 : D6 3A               	sub	3ah		; get 1st MC
    5936/    1EF6 : 57                  	ld	d, a
    5937/    1EF7 :                     
    5938/    1EF7 :                     ld_r251:
    5939/    1EF7 : 2A 24 BF            	ld	hl, (opr_num25)
    5940/    1EFA : 7C                  	ld	a, h
    5941/    1EFB : B7                  	or	a
    5942/    1EFC : C2 92 1A            	jp	nz, asm_err
    5943/    1EFF : 7D                  	ld	a, l
    5944/    1F00 : F5                  	push	af		; adjust I/F
    5945/    1F01 : 7A                  	ld	a, d		; adjust I/F
    5946/    1F02 : C3 2C 22            	jp	el2_441
    5947/    1F05 :                     
    5948/    1F05 :                     ;
    5949/    1F05 :                     ; LD rp16, nnnn
    5950/    1F05 :                     ; LD rp16, (nnnn)
    5951/    1F05 :                     ; rp16 : BC, DE, HL, IX, IY
    5952/    1F05 :                     ; ld_e2_tbl1:	db	5, 8, 11, 14, 15
    5953/    1F05 :                     
    5954/    1F05 :                     el3_11:
    5955/    1F05 :                     ;	hl = ld_e2_tbl1
    5956/    1F05 : 01 05 00            	ld	bc, ld_en2
    5957/    1F08 : ED B1               	cpir
    5958/    1F0A : 20 74               	jr	nz, el3_1_2
    5959/    1F0C : 79                  	ld	a, c
    5960/    1F0D : B7                  	or	a
    5961/    1F0E : 28 6C               	jr	z, ld_iy_n4
    5962/    1F10 : FE 01               	cp	1
    5963/    1F12 : 28 4E               	jr	z, ld_ix_n4
    5964/    1F14 : FE 02               	cp	2
    5965/    1F16 : 28 35               	jr	z, ld_hl_n4
    5966/    1F18 : FE 03               	cp	3
    5967/    1F1A : 28 29               	jr	z, ld_de_n4
    5968/    1F1C :                     
    5969/    1F1C :                     
    5970/    1F1C :                     ; LD BC, nnnn; LD BC, (nnnn)
    5971/    1F1C :                     ld_bc_n4:
    5972/    1F1C : 16 ED               	ld	d, 0EDH		; 1st MC
    5973/    1F1E : 1E 4B               	ld	e, 4bh		; 2nd MC
    5974/    1F20 : 0E 01               	ld	c, 1		; 1st MC
    5975/    1F22 :                     
    5976/    1F22 :                     ld_bc_n40:
    5977/    1F22 : 3A 23 BF            	ld	a, (opr2_cd)
    5978/    1F25 : FE 19               	cp	25
    5979/    1F27 : 28 0A               	jr	z, ld_bc_n41
    5980/    1F29 :                     
    5981/    1F29 : 7B                  	ld	a, e		; 2nd MC
    5982/    1F2A : 21 26 BF            	ld	hl, opr_num35
    5983/    1F2D : 4E                  	ld	c, (hl)		; 3rd MC
    5984/    1F2E : 23                  	inc	hl
    5985/    1F2F : 5E                  	ld	e, (hl)		; 4th MC
    5986/    1F30 : C3 39 24            	jp	mc_end41
    5987/    1F33 :                     
    5988/    1F33 :                     ld_bc_n41:
    5989/    1F33 : 21 24 BF            	ld	hl, opr_num25
    5990/    1F36 : 5E                  	ld	e, (hl)		; 2rd MC
    5991/    1F37 : 23                  	inc	hl
    5992/    1F38 : 56                  	ld	d, (hl)		; 3rd MC
    5993/    1F39 : 79                  	ld	a, c		; 1st MC
    5994/    1F3A :                     
    5995/    1F3A :                     ld_bc_n42:
    5996/    1F3A : 2A 1D BF            	ld	hl, (tasm_adr)
    5997/    1F3D : 71                  	ld	(hl), c		; save 1st MC
    5998/    1F3E : 23                  	inc	hl
    5999/    1F3F : 73                  	ld	(hl), e
    6000/    1F40 : 23                  	inc	hl
    6001/    1F41 : 72                  	ld	(hl), d
    6002/    1F42 : C3 16 22            	jp	mc_end3
    6003/    1F45 :                     	
    6004/    1F45 :                     ; LD DE, nnnn; LD DE, (nnnn)
    6005/    1F45 :                     ld_de_n4:
    6006/    1F45 : 16 ED               	ld	d, 0EDH		; 1st MC
    6007/    1F47 : 1E 5B               	ld	e, 5bh		; 2nd MC
    6008/    1F49 : 0E 11               	ld	c, 11h		; 1st MC
    6009/    1F4B : 18 D5               	jr	ld_bc_n40
    6010/    1F4D :                     
    6011/    1F4D :                     ; LD HL, nnnn; LD HL, (nnnn)
    6012/    1F4D :                     ld_hl_n4:
    6013/    1F4D : 0E 21               	ld	c, 21h
    6014/    1F4F : ED 5B 24 BF         	ld	de, (opr_num25)
    6015/    1F53 : 3A 23 BF            	ld	a, (opr2_cd)
    6016/    1F56 : FE 19               	cp	25
    6017/    1F58 : 28 E0               	jr	z, ld_bc_n42
    6018/    1F5A : 0E 2A               	ld	c, 2Ah
    6019/    1F5C : ED 5B 26 BF         	ld	de, (opr_num35)
    6020/    1F60 : 18 D8               	jr	ld_bc_n42
    6021/    1F62 :                     
    6022/    1F62 :                     ; LD IX, nnnn; LD IX, (nnnn)
    6023/    1F62 :                     ld_ix_n4:
    6024/    1F62 : 16 DD               	ld	d, 0DDh		; 1st MC
    6025/    1F64 :                     
    6026/    1F64 :                     ld_ix_n40:
    6027/    1F64 : 0E 21               	ld	c, 21h
    6028/    1F66 : 21 24 BF            	ld	hl, opr_num25
    6029/    1F69 :                     
    6030/    1F69 : 3A 23 BF            	ld	a, (opr2_cd)
    6031/    1F6C : FE 19               	cp	25
    6032/    1F6E : 28 05               	jr	z, ld_ix_n42
    6033/    1F70 :                     
    6034/    1F70 : 0E 2A               	ld	c, 2Ah
    6035/    1F72 : 21 26 BF            	ld	hl, opr_num35
    6036/    1F75 :                     
    6037/    1F75 :                     ld_ix_n42:
    6038/    1F75 : 79                  	ld	a, c		; 2nd MC
    6039/    1F76 : 4E                  	ld	c, (hl)		; 3rd MC
    6040/    1F77 : 23                  	inc	hl
    6041/    1F78 : 5E                  	ld	e, (hl)		; 4th MC
    6042/    1F79 : C3 39 24            	jp	mc_end41
    6043/    1F7C :                     
    6044/    1F7C :                     ; LD IY, nnnn; LD IY, (nnnn)
    6045/    1F7C :                     ld_iy_n4:
    6046/    1F7C : 16 FD               	ld	d, 0FDh		; 1st MC
    6047/    1F7E : 18 E4               	jr	ld_ix_n40
    6048/    1F80 :                     
    6049/    1F80 :                     ;
    6050/    1F80 :                     ; LD ([IX|IY][+|-]nn), [r|nn]
    6051/    1F80 :                     ;
    6052/    1F80 :                     ;ld_e2_tbl2:	db	33, 36, 34, 37
    6053/    1F80 :                     ; LD (IX | IY +|- nn), r | nn
    6054/    1F80 :                     el3_1_2:
    6055/    1F80 :                     ;	hl = ld_e2_tbl2
    6056/    1F80 : 01 04 00            	ld	bc, ld_en3
    6057/    1F83 : ED B1               	cpir
    6058/    1F85 : 20 3F               	jr	nz, el3_13
    6059/    1F87 :                     	
    6060/    1F87 : 21 28 BF            	ld	hl, opr_num37
    6061/    1F8A : 09                  	add	hl, bc
    6062/    1F8B : 56                  	ld	d, (hl)		; get 3rd MC
    6063/    1F8C :                     
    6064/    1F8C : 79                  	ld	a, c
    6065/    1F8D : 1E FD               	ld	e, 0FDh		; 1st MC
    6066/    1F8F : FE 02               	cp	2
    6067/    1F91 : 38 02               	jr	c, el3_121
    6068/    1F93 : 1E DD               	ld	e, 0DDh		; 1st MC
    6069/    1F95 :                     
    6070/    1F95 :                     ; reg_A = (opr2_cd)
    6071/    1F95 :                     ; if (reg_A = 25) 2nd_MC = 36h
    6072/    1F95 :                     ; else {
    6073/    1F95 :                     ;     if (Reg_C = 6) 2nd_MC =77h
    6074/    1F95 :                     ;     else 2nd_MC = 75h - reg_C
    6075/    1F95 :                     ; }
    6076/    1F95 :                     el3_121: ; check element No.3
    6077/    1F95 : 3A 23 BF            	ld	a, (opr2_cd)
    6078/    1F98 : FE 19               	cp	25
    6079/    1F9A : 28 1A               	jr	z, ld_xynln
    6080/    1F9C :                     
    6081/    1F9C : 21 23 1E            	ld	hl, ld_e2_tbl
    6082/    1F9F : 01 07 00            	ld	bc, ld_en1
    6083/    1FA2 : ED B1               	cpir
    6084/    1FA4 : C2 92 1A            	jp	nz, asm_err
    6085/    1FA7 :                     
    6086/    1FA7 : 79                  	ld	a, c
    6087/    1FA8 : FE 06               	cp	6
    6088/    1FAA : 3E 77               	ld	a, 077h		; a : 2nd MC
    6089/    1FAC : 28 03               	jr	z, mc2_77
    6090/    1FAE :                     
    6091/    1FAE : 3E 75               	ld	a, 75h
    6092/    1FB0 : 91                  	sub	c	; a : 2nd MC
    6093/    1FB1 :                     
    6094/    1FB1 :                      ; adjust 1: c, 2: e, 3: d
    6095/    1FB1 :                     mc2_77:
    6096/    1FB1 : 4B                  	ld	c, e		; adjust I/F
    6097/    1FB2 : 5F                  	ld	e, a		; adjust I/F
    6098/    1FB3 : C3 3A 1F            	jp	ld_bc_n42
    6099/    1FB6 :                     
    6100/    1FB6 :                     ld_xynln: ; 4byte MC 
    6101/    1FB6 :                     	  ; LD ([IX|IY] [+|-]), nn
    6102/    1FB6 :                     	  ; 2nd MC = 36h
    6103/    1FB6 :                     
    6104/    1FB6 : 2A 24 BF            	ld	hl, (opr_num25)
    6105/    1FB9 : 7C                  	ld	a, h
    6106/    1FBA : B7                  	or	a
    6107/    1FBB : C2 92 1A            	jp	nz, asm_err
    6108/    1FBE :                     
    6109/    1FBE :                     ; adjust I/F
    6110/    1FBE :                     ; d: 1st MC, a: 2nd MC, c: 3rd MC, e: 4th MC
    6111/    1FBE :                     
    6112/    1FBE : 3E 36               	ld	a, 36h		; 2nd MC
    6113/    1FC0 : 4A                  	ld	c, d		; 3rd MC
    6114/    1FC1 : 53                  	ld	d, e		; 1st MC
    6115/    1FC2 : 5D                  	ld	e, l		; 4th MC
    6116/    1FC3 : C3 39 24            	jp	mc_end41
    6117/    1FC6 :                     
    6118/    1FC6 :                     ;
    6119/    1FC6 :                     ; 35 : ld (nnnn), reg
    6120/    1FC6 :                     ; 28 : ld (hl), r | nn
    6121/    1FC6 :                     ; 16 : ld SP, hl | ix | iy | nnnn | (nnnn)
    6122/    1FC6 :                     ; 27 : LD (DE), A
    6123/    1FC6 :                     ; 26 : LD (BC), A
    6124/    1FC6 :                     ; 17 : LD R, A
    6125/    1FC6 :                     ; 13 : LD I, A
    6126/    1FC6 :                     ;
    6127/    1FC6 :                     el3_13:
    6128/    1FC6 :                     ;	hl = ld_e2_tbl3
    6129/    1FC6 : 01 07 00            	ld	bc, ld_en4
    6130/    1FC9 : ED B1               	cpir
    6131/    1FCB : C2 92 1A            	jp	nz, asm_err
    6132/    1FCE : 21 D4 1F            	ld	hl, el3_14
    6133/    1FD1 : C3 34 1B            	jp	jp_each
    6134/    1FD4 :                     
    6135/    1FD4 :                     ; jump table
    6136/    1FD4 : F0 1F               el3_14:		dw	el3_s35
    6137/    1FD6 : 25 20               		dw	el3_s28
    6138/    1FD8 : 92 20               		dw	el3_s27
    6139/    1FDA : 96 20               		dw	el3_s26
    6140/    1FDC : 9B 20               		dw	el3_s17
    6141/    1FDE : 54 20               		dw	el3_s16
    6142/    1FE0 : A0 20               		dw	el3_s13
    6143/    1FE2 :                     
    6144/    1FE2 : =7H                  ldnr_n	equ	ldnr_c - ldnr_t
    6145/    1FE2 :                     
    6146/    1FE2 : 01 0B 05 08 10 0E   ldnr_t:		db	1, 11, 5, 8, 16, 14, 15
             1FE8 : 0F                
    6147/    1FE9 : 22 22 73 53 43 22   ldnr_c:		db	22h, 22h, 73h, 53h, 43h, 22h, 32h
             1FEF : 32                
    6148/    1FF0 :                     
    6149/    1FF0 :                     el3_s35: ; ld (nnnn), reg
    6150/    1FF0 :                     
    6151/    1FF0 : 3A 23 BF            	ld	a, (opr2_cd)
    6152/    1FF3 :                     
    6153/    1FF3 : 21 E2 1F            	ld	hl, ldnr_t
    6154/    1FF6 : 01 07 00            	ld	bc, ldnr_n
    6155/    1FF9 : ED B1               	cpir
    6156/    1FFB : C2 92 1A            	jp	nz, asm_err
    6157/    1FFE :                     
    6158/    1FFE : 21 E9 1F            	ld	hl, ldnr_c
    6159/    2001 : 09                  	add	hl, bc
    6160/    2002 : 79                  	ld	a, c
    6161/    2003 : 4E                  	ld	c, (hl)		; 1st MC
    6162/    2004 :                     
    6163/    2004 : 2A 26 BF            	ld	hl, (opr_num35)
    6164/    2007 : FE 05               	cp	5
    6165/    2009 : 38 05               	jr	c, el3_s351
    6166/    200B :                     
    6167/    200B :                      ; adjust 1: c, 2: e, 3: d
    6168/    200B :                     
    6169/    200B : 5D                  	ld	e, l			; 2nd MC
    6170/    200C : 54                  	ld	d, h			; 3rd MC
    6171/    200D : C3 3A 1F            	jp	ld_bc_n42
    6172/    2010 :                     
    6173/    2010 :                     el3_s351:
    6174/    2010 : FE 02               	cp	2
    6175/    2012 : 38 08               	jr	c, el3_s352
    6176/    2014 :                      ; ED
    6177/    2014 :                     ; d: 1st MC, a: 2nd MC, c: 3rd MC, e: 4th MC
    6178/    2014 :                     
    6179/    2014 : 16 ED               	ld	d, 0EDH			; 1st MC
    6180/    2016 :                     el3_s353:
    6181/    2016 : 79                  	ld	a, c			; 2nd MC
    6182/    2017 : 4D                  	ld	c, l			; 3rd MC
    6183/    2018 : 5C                  	ld	e, h			; 4th mc
    6184/    2019 : C3 39 24            	jp	mc_end41
    6185/    201C :                     
    6186/    201C :                     el3_s352: ; DD, FD
    6187/    201C : 16 FD               	ld	d, 0FDh			; 1st MC
    6188/    201E : B7                  	or	a
    6189/    201F : 28 F5               	jr	z, el3_s353
    6190/    2021 : 16 DD               	ld	d, 0DDh			; 1st MC
    6191/    2023 : 18 F1               	jr	el3_s353
    6192/    2025 :                     
    6193/    2025 :                     ; ld (hl), r | nn
    6194/    2025 :                     el3_s28:
    6195/    2025 : 3A 23 BF            	ld	a, (opr2_cd)
    6196/    2028 : FE 19               	cp	25
    6197/    202A : 28 19               	jr	z, el3_s281
    6198/    202C : FE 01               	cp	1
    6199/    202E : 28 11               	jr	z, el3_s282
    6200/    2030 : 21 24 1E            	ld	hl, ld_e2_tbl + 1
    6201/    2033 : 01 06 00            	ld	bc, ld_en1 - 1
    6202/    2036 : ED B1               	cpir
    6203/    2038 : C2 92 1A            	jp	nz, asm_err
    6204/    203B : 3E 75               	ld	a, 75h
    6205/    203D : 91                  	sub	c
    6206/    203E :                     el3_s283:
    6207/    203E : C3 FE 20            	jp	st_mc11
    6208/    2041 :                     
    6209/    2041 :                     el3_s282: ; LD (HL), A
    6210/    2041 : 3E 77               	ld	a, 77h
    6211/    2043 : 18 F9               	jr	el3_s283
    6212/    2045 :                     
    6213/    2045 :                     el3_s281: ; LD (HL), nn
    6214/    2045 : 2A 24 BF            	ld	hl, (opr_num25)
    6215/    2048 : 7C                  	ld	a, h
    6216/    2049 : B7                  	or	a
    6217/    204A : C2 92 1A            	jp	nz, asm_err
    6218/    204D :                     
    6219/    204D : 7D                  	ld	a, l
    6220/    204E : F5                  	push	af		; adjust I/F
    6221/    204F : 3E 36               	ld	a, 36h		; 1st MC
    6222/    2051 : C3 2C 22            	jp	el2_441
    6223/    2054 :                     
    6224/    2054 :                     el3_s16: ; ld SP, hl | ix | iy | nnnn | (nnnn)
    6225/    2054 :                     
    6226/    2054 : 3A 23 BF            	ld	a, (opr2_cd)
    6227/    2057 : FE 0B               	cp	11
    6228/    2059 : 28 1D               	jr	z, el3_s161
    6229/    205B : FE 0E               	cp	14
    6230/    205D : 28 1D               	jr	z, el3_s162
    6231/    205F : FE 0F               	cp	15
    6232/    2061 : 28 1D               	jr	z, el3_s163
    6233/    2063 : FE 19               	cp	25
    6234/    2065 : 28 22               	jr	z, el3_s164
    6235/    2067 : FE 23               	cp	35
    6236/    2069 : C2 92 1A            	jp	nz, asm_err
    6237/    206C :                     
    6238/    206C :                     ; LD SP, (nnnn)
    6239/    206C :                     ; d: 1st MC, a: 2nd MC, c: 3rd MC, e: 4th MC
    6240/    206C :                     
    6241/    206C : 16 ED               	ld	d, 0edh		; 1st MC
    6242/    206E : 3E 7B               	ld	a, 7bh		; 2nd MC
    6243/    2070 : 2A 26 BF            	ld	hl, (opr_num35)
    6244/    2073 : 4D                  	ld	c, l		; 3rd MC
    6245/    2074 : 5C                  	ld	e, h		; 4th MC
    6246/    2075 : C3 39 24            	jp	mc_end41
    6247/    2078 :                     	
    6248/    2078 :                     
    6249/    2078 :                     el3_s161: ; LD SP, HL
    6250/    2078 : 3E F9               	ld	a, 0f9h
    6251/    207A : 18 1C               	jr	el3_s261
    6252/    207C :                     
    6253/    207C :                     el3_s162: ; LD SP, IX
    6254/    207C : 16 DD               	ld	d, 0DDh
    6255/    207E : 18 02               	jr	el3_s1631
    6256/    2080 :                     	
    6257/    2080 :                     el3_s163: ; LD SP, IY
    6258/    2080 : 16 FD               	ld	d, 0FDh
    6259/    2082 :                     el3_s1631:
    6260/    2082 : 3E F9               	ld	a, 0f9h
    6261/    2084 : F5                  	push	af		; adjust I/F
    6262/    2085 : 7A                  	ld	a, d
    6263/    2086 : C3 2C 22            	jp	el2_441
    6264/    2089 :                     
    6265/    2089 :                     el3_s164: ; LD SP, nnnn
    6266/    2089 :                     ; adjust 1: c, 2: e, 3: d
    6267/    2089 :                     
    6268/    2089 : 0E 31               	ld	c, 31h		; 1st MC
    6269/    208B : ED 5B 24 BF         	ld	de, (opr_num25)	; e: 2nd MC, d: 3rd MC
    6270/    208F : C3 3A 1F            	jp	ld_bc_n42
    6271/    2092 :                     
    6272/    2092 :                     el3_s27: ; LD (DE), A
    6273/    2092 : 3E 12               	ld	a, 12h		; set MC
    6274/    2094 : 18 02               	jr	el3_s261
    6275/    2096 :                     	
    6276/    2096 :                     el3_s26: ; LD (BC), A
    6277/    2096 : 3E 02               	ld	a, 2h		; set MC
    6278/    2098 :                     el3_s261:
    6279/    2098 : C3 FE 20            	jp	st_mc11
    6280/    209B :                     	
    6281/    209B :                     el3_s17: ; LD R, A
    6282/    209B : 3E 4F               	ld	a, 4fh		; set 2nd MC
    6283/    209D : C3 64 24            	jp	el2_5411
    6284/    20A0 :                     
    6285/    20A0 :                     el3_s13: ; LD I, A
    6286/    20A0 : 3E 47               	ld	a, 47h		; set 2nd MC
    6287/    20A2 : C3 64 24            	jp	el2_5411
    6288/    20A5 :                     
    6289/    20A5 :                     ;1111111111111111111111111111111111
    6290/    20A5 :                     ;
    6291/    20A5 :                     ; element count = 1 
    6292/    20A5 :                     ;
    6293/    20A5 :                     ;1111111111111111111111111111111111
    6294/    20A5 :                     
    6295/    20A5 : =0EH                 e1s	equ	e1_e - e1_s
    6296/    20A5 : =15H                 e1s1	equ	e1_e1 - e1_s1
    6297/    20A5 :                     
    6298/    20A5 :                     e1_s: ;------------------------------------------------
    6299/    20A5 : 07 0A 0B 0E 0F 1E   elem1_cd:	db	7, 10, 11, 14, 15, 30, 32
             20AB : 20                
    6300/    20AC : 21 2E 32 33 34 35   		db	33, 46, 50, 51, 52, 53, 65
             20B2 : 41                
    6301/    20B3 :                     e1_e: ;------------------------------------------------
    6302/    20B3 :                     
    6303/    20B3 : 27 FB F3 76 00 C9   elem1_opcd:	db	27H, 0FBH, 0F3H, 76H, 00H, 0C9H, 37H
             20B9 : 37                
    6304/    20BA : 3F 2F 1F 0F 17 07   		db	3FH, 2FH, 1FH, 0FH, 17H, 07H, 0D9H
             20C0 : D9                
    6305/    20C1 :                     
    6306/    20C1 :                     e1_s1: ; ----------------------------------------------
    6307/    20C1 : 27 28 25 26 3A 3B   elem1_cd1:	db	39, 40, 37, 38, 58, 59, 56
             20C7 : 38                
    6308/    20C8 : 39 04 05 02 03 1F   		db	57, 4,  5,  2,  3,  31, 64
             20CE : 40                
    6309/    20CF : 3E 3F 3D 2F 30 42   		db	62, 63, 61, 47, 48, 66, 67
             20D5 : 43                
    6310/    20D6 :                     e1_e1: ; ----------------------------------------------
    6311/    20D6 :                     
    6312/    20D6 : 67 6F 45 4D A3 AB   elem1_opcd1:	db	 67h,  6Fh,  45h,  4Dh, 0A3h, 0ABh, 0B3h
             20DC : B3                
    6313/    20DD : BB 44 B0 A0 B8 A8   		db	0BBh,  44h, 0B0h, 0A0h, 0B8h, 0A8h, 0B2h
             20E3 : B2                
    6314/    20E4 : A2 BA AA B1 A1 B9   		db	0A2h, 0BAh, 0AAh, 0B1h, 0A1h, 0B9h, 0A9h
             20EA : A9                
    6315/    20EB :                     
    6316/    20EB :                     ;
    6317/    20EB :                     ; make machine code,
    6318/    20EB :                     ; element_cnt = 1 (ex. NOP)
    6319/    20EB :                     ; output : 1 byte Machine code
    6320/    20EB :                     ;
    6321/    20EB :                     mk_e1:	; 1byte MC
    6322/    20EB : 3A 21 BF            	ld	a, (opc_cd)
    6323/    20EE : 01 0E 00            	ld	bc, e1s
    6324/    20F1 : 21 A5 20            	ld	hl, elem1_cd
    6325/    20F4 : ED B1               	cpir
    6326/    20F6 : C2 0A 21            	jp	nz, mk_e11
    6327/    20F9 :                     	
    6328/    20F9 : 21 B3 20            	ld	hl, elem1_opcd
    6329/    20FC :                     
    6330/    20FC :                     st_mc1:
    6331/    20FC : 09                  	add	hl, bc
    6332/    20FD :                     	; get MC
    6333/    20FD : 7E                  	ld	a, (hl)
    6334/    20FE :                     st_mc11:
    6335/    20FE : 2A 1D BF            	ld	hl, (tasm_adr)
    6336/    2101 : 77                  	ld	(hl), a
    6337/    2102 : 3E 01               	ld	a, 1
    6338/    2104 :                     
    6339/    2104 :                     mc_end:
    6340/    2104 : 32 20 BF            	ld	(byte_count), a	; set MC bytes
    6341/    2107 : C3 A3 1A            	jp	cout_sp
    6342/    210A :                     
    6343/    210A :                     mk_e11: ; 2byte MC (0EDh, XX)
    6344/    210A : 01 15 00            	ld	bc, e1s1
    6345/    210D : 21 C1 20            	ld	hl, elem1_cd1
    6346/    2110 : ED B1               	cpir
    6347/    2112 : C2 92 1A            	jp	nz, asm_err
    6348/    2115 :                     	
    6349/    2115 : 2A 1D BF            	ld	hl, (tasm_adr)
    6350/    2118 : 3E ED               	ld	a, 0EDH
    6351/    211A : 77                  	ld	(hl), a		; set MC No.1
    6352/    211B : 23                  	inc	hl
    6353/    211C : EB                  	ex	de, hl
    6354/    211D :                     
    6355/    211D : 21 D6 20            	ld	hl, elem1_opcd1
    6356/    2120 : 09                  	add	hl, bc
    6357/    2121 :                     	; get MC
    6358/    2121 : 7E                  	ld	a, (hl)
    6359/    2122 : 12                  	ld	(de), a		; set MC No.2
    6360/    2123 :                     
    6361/    2123 :                     mc_end2:
    6362/    2123 : 3E 02               	ld	a, 2
    6363/    2125 : 18 DD               	jr	mc_end
    6364/    2127 :                     
    6365/    2127 :                     ;2222222222222222222222222222222222222222222222
    6366/    2127 :                     ;
    6367/    2127 :                     ; element count = 2 
    6368/    2127 :                     ;
    6369/    2127 :                     ;2222222222222222222222222222222222222222222222
    6370/    2127 :                     
    6371/    2127 : =1AH                 e2s	equ	e2_e - e2_s
    6372/    2127 :                     
    6373/    2127 :                     e2_s:
    6374/    2127 :                     elem2_cd:
    6375/    2127 : 08 09               	db	8, 9			; DD, FD
    6376/    2129 : 17 1A               	db	23, 26			; DD, FD
    6377/    212B : 18 1B 1C 1D 29      	db	24, 27, 28 ,29, 41	; DD, FD
    6378/    2130 : 2A                  	db	42			; DD, FD
    6379/    2131 : 2E                  	db	46
    6380/    2132 : 31                  	db	49
    6381/    2133 : 2B                  	db	43
    6382/    2134 : 2C                  	db	44
    6383/    2135 : 2D                  	db	45
    6384/    2136 :                     ; CB
    6385/    2136 : 0C                  	db	12			; DD, FD
    6386/    2137 : 10                  	db	16			; DD, FD
    6387/    2138 : 0D                  	db	13			; DD, FD
    6388/    2139 : 11                  	db	17			; DD, FD
    6389/    213A : 12                  	db	18			; DD, FD
    6390/    213B : 13                  	db	19			; DD, FD
    6391/    213C : 14                  	db	20			; DD, FD
    6392/    213D :                     ; ED
    6393/    213D : 36                  	db	54			; ED
    6394/    213E : 44                  	db	68			; ORG
    6395/    213F : 45                  	db	69			; DB
    6396/    2140 : 46                  	db	70			; DW
    6397/    2141 :                     e2_e:
    6398/    2141 :                     
    6399/    2141 :                     ent_el2:
    6400/    2141 : 89 21               	dw	el2_70		; DW
    6401/    2143 : 9E 21               	dw	el2_69		; DB
    6402/    2145 : D7 21               	dw	el2_68		; ORG
    6403/    2147 : 48 24               	dw	el2_54		; IM
    6404/    2149 : E2 23               	dw	el2_20		; SRL
    6405/    214B : E7 23               	dw	el2_19		; SRA
    6406/    214D : EC 23               	dw	el2_18		; SLA
    6407/    214F : F1 23               	dw	el2_17		; RR
    6408/    2151 : F6 23               	dw	el2_13		; RL
    6409/    2153 : FB 23               	dw	el2_16		; RRC
    6410/    2155 : 00 24               	dw	el2_12		; RLC
    6411/    2157 :                     
    6412/    2157 : 00 22               	dw	el2_45		; CALL nnnn
    6413/    2159 : 1B 22               	dw	el2_44		; DJNZ e
    6414/    215B : 36 22               	dw	el2_43		; jR e
    6415/    215D : 49 22               	dw	el2_49		; RST nn
    6416/    215F : 73 22               	dw	el2_46		; RET CC
    6417/    2161 : 97 22               	dw	el2_42		; JP (HL), JP nnnn
    6418/    2163 :                     
    6419/    2163 :                     ; code base 0a0h, or 00h, 08h, 10h, 18h
    6420/    2163 : D1 22               	dw	el2_41		; CP
    6421/    2165 : D5 22               	dw	el2_29		; XOR
    6422/    2167 : D9 22               	dw	el2_28		; OR
    6423/    2169 : DD 22               	dw	el2_27		; AND
    6424/    216B :                     
    6425/    216B : E1 22               	dw	el2_24		; SUB
    6426/    216D :                     
    6427/    216D : 63 23               	dw	el2_26		; DEC
    6428/    216F : 68 23               	dw	el2_23		; INC
    6429/    2171 :                     
    6430/    2171 : AA 23               	dw	el2_9		; POP
    6431/    2173 : AE 23               	dw	el2_8		; PUSH
    6432/    2175 :                     
    6433/    2175 :                     ;
    6434/    2175 :                     ; make machine code,
    6435/    2175 :                     ; element_cnt = 2 (ex. PUSH AF)
    6436/    2175 :                     ; output : 1 to 3 bytes Machine code
    6437/    2175 :                     ;
    6438/    2175 :                     
    6439/    2175 :                     mk_e2:
    6440/    2175 : 3A 21 BF            	ld	a, (opc_cd)
    6441/    2178 : 01 1A 00            	ld	bc, e2s
    6442/    217B : 21 27 21            	ld	hl, elem2_cd
    6443/    217E : ED B1               	cpir
    6444/    2180 : C2 92 1A            	jp	nz, asm_err
    6445/    2183 :                     	
    6446/    2183 : 21 41 21            	ld	hl, ent_el2
    6447/    2186 : C3 34 1B            	jp	jp_each
    6448/    2189 :                     
    6449/    2189 :                     el2_70: ; DW
    6450/    2189 : 3A 22 BF            	ld	a, (opr1_cd)
    6451/    218C : FE 19               	cp	25
    6452/    218E : C2 92 1A            	jp	nz, asm_err
    6453/    2191 :                     
    6454/    2191 : 2A 1D BF            	ld	hl, (tasm_adr)
    6455/    2194 : ED 4B 24 BF         	ld	bc, (opr_num25)
    6456/    2198 : 71                  	ld	(hl), c
    6457/    2199 : 23                  	inc	hl
    6458/    219A : 70                  	ld	(hl), b
    6459/    219B : C3 23 21            	jp	mc_end2
    6460/    219E :                     
    6461/    219E :                     el2_69: ; DB
    6462/    219E : 3A 22 BF            	ld	a, (opr1_cd)
    6463/    21A1 : FE 19               	cp	25
    6464/    21A3 : 28 20               	jr	z, el2_691
    6465/    21A5 : FE 26               	cp	38
    6466/    21A7 : C2 92 1A            	jp	nz, asm_err
    6467/    21AA :                     	
    6468/    21AA : 2A 24 BF            	ld	hl, (opr_num25)
    6469/    21AD :                     
    6470/    21AD : AF                  	xor	a
    6471/    21AE : 4F                  	ld	c, a
    6472/    21AF : ED 5B 1D BF         	ld	de, (tasm_adr)
    6473/    21B3 :                     
    6474/    21B3 :                     el2_692:
    6475/    21B3 : 7E                  	ld	a, (hl)
    6476/    21B4 : FE 22               	cp	'"'
    6477/    21B6 : 28 09               	jr	z, cpstrend
    6478/    21B8 : B7                  	or	a
    6479/    21B9 : 28 06               	jr	z, cpstrend
    6480/    21BB :                     
    6481/    21BB : 12                  	ld	(de), a
    6482/    21BC : 23                  	inc	hl
    6483/    21BD : 13                  	inc	de
    6484/    21BE : 0C                  	inc	c
    6485/    21BF : 18 F2               	jr	el2_692
    6486/    21C1 :                     
    6487/    21C1 :                     cpstrend:
    6488/    21C1 : 79                  	ld	a, c
    6489/    21C2 : C3 04 21            	jp	mc_end
    6490/    21C5 :                     
    6491/    21C5 :                     el2_691:
    6492/    21C5 : ED 4B 24 BF         	ld	bc, (opr_num25)
    6493/    21C9 : 78                  	ld	a, b
    6494/    21CA : B7                  	or	a
    6495/    21CB : C2 92 1A            	jp	nz, asm_err
    6496/    21CE :                     
    6497/    21CE : 2A 1D BF            	ld	hl, (tasm_adr)
    6498/    21D1 : 71                  	ld	(hl), c
    6499/    21D2 : 3E 01               	ld	a, 1
    6500/    21D4 : C3 04 21            	jp	mc_end
    6501/    21D7 :                     
    6502/    21D7 :                     el2_68: ; ORG
    6503/    21D7 : 3A 22 BF            	ld	a, (opr1_cd)
    6504/    21DA : FE 19               	cp	25
    6505/    21DC : C2 92 1A            	jp	nz, asm_err
    6506/    21DF :                     
    6507/    21DF : AF                  	xor	a
    6508/    21E0 : 2A 24 BF            	ld	hl, (opr_num25)
    6509/    21E3 : 01 00 80            	ld	bc, RAM_B
    6510/    21E6 : ED 42               	sbc	hl, bc
    6511/    21E8 : DA 92 1A            	jp	c, asm_err
    6512/    21EB :                     
    6513/    21EB : 01 00 C0            	ld	bc, RAM_E + 1
    6514/    21EE : 2A 24 BF            	ld	hl, (opr_num25)
    6515/    21F1 : ED 42               	sbc	hl, bc
    6516/    21F3 : DA 92 1A            	jp	c, asm_err
    6517/    21F6 :                     
    6518/    21F6 :                     okram:
    6519/    21F6 : 2A 24 BF            	ld	hl, (opr_num25)
    6520/    21F9 : 22 1D BF            	ld	(tasm_adr), hl
    6521/    21FC : AF                  	xor	a
    6522/    21FD : C3 04 21            	jp	mc_end
    6523/    2200 :                     
    6524/    2200 :                     ; CALL nnnn
    6525/    2200 :                     el2_45:
    6526/    2200 : 3A 22 BF            	ld	a, (opr1_cd)
    6527/    2203 : FE 19               	cp	25
    6528/    2205 : C2 92 1A            	jp	nz, asm_err
    6529/    2208 :                     
    6530/    2208 : 3E CD               	ld	a, 0CDH
    6531/    220A :                     
    6532/    220A :                     el2_451:
    6533/    220A : 2A 1D BF            	ld	hl, (tasm_adr)
    6534/    220D : 77                  	ld	(hl), a		; save op_code
    6535/    220E : 23                  	inc	hl
    6536/    220F : ED 5B 24 BF         	ld	de, (opr_num25)
    6537/    2213 : 73                  	ld	(hl), e
    6538/    2214 : 23                  	inc	hl
    6539/    2215 : 72                  	ld	(hl), d
    6540/    2216 :                     
    6541/    2216 :                     mc_end3:
    6542/    2216 : 3E 03               	ld	a, 3
    6543/    2218 : C3 04 21            	jp	mc_end
    6544/    221B :                     
    6545/    221B :                     ; DJNZ relative number
    6546/    221B :                     el2_44:
    6547/    221B : 3A 22 BF            	ld	a, (opr1_cd)
    6548/    221E : FE 19               	cp	25
    6549/    2220 : C2 92 1A            	jp	nz, asm_err
    6550/    2223 :                     
    6551/    2223 : CD B3 25            	call	calc_reladr
    6552/    2226 : DA 92 1A            	jp	c, asm_err
    6553/    2229 : F5                  	push	af
    6554/    222A : 3E 10               	ld	a, 10H
    6555/    222C :                     el2_441:
    6556/    222C : 2A 1D BF            	ld	hl, (tasm_adr)
    6557/    222F : 77                  	ld	(hl), a		; save op_code
    6558/    2230 : 23                  	inc	hl
    6559/    2231 : F1                  	pop	af
    6560/    2232 : 77                  	ld	(hl), a
    6561/    2233 : C3 23 21            	jp	mc_end2
    6562/    2236 :                     
    6563/    2236 :                     ;ovr_msg:
    6564/    2236 :                     ;	db	"Over. ", 0
    6565/    2236 :                     
    6566/    2236 :                     ; JR e
    6567/    2236 :                     el2_43:
    6568/    2236 : 3A 22 BF            	ld	a, (opr1_cd)
    6569/    2239 : FE 19               	cp	25
    6570/    223B : C2 92 1A            	jp	nz, asm_err
    6571/    223E : CD B3 25            	call	calc_reladr
    6572/    2241 : DA 92 1A            	jp	c, asm_err
    6573/    2244 : F5                  	push	af
    6574/    2245 : 3E 18               	ld	a, 18H
    6575/    2247 : 18 E3               	jr	el2_441
    6576/    2249 :                     
    6577/    2249 :                     ; RST
    6578/    2249 :                     el2_49:
    6579/    2249 : 2A 24 BF            	ld	hl, (opr_num25)
    6580/    224C : 7C                  	ld	a, h
    6581/    224D : B7                  	or	a
    6582/    224E : C2 92 1A            	jp	nz, asm_err
    6583/    2251 : 7D                  	ld	a, l
    6584/    2252 : 21 63 22            	ld	hl, rst_no
    6585/    2255 : 01 08 00            	ld	bc, 8
    6586/    2258 : ED B1               	cpir
    6587/    225A : C2 92 1A            	jp	nz, asm_err
    6588/    225D :                     
    6589/    225D : 21 6B 22            	ld	hl, rst_cd
    6590/    2260 : C3 FC 20            	jp	st_mc1		; get and store MC code
    6591/    2263 :                     
    6592/    2263 : 00 08 10 18 20 28   rst_no:	db	0, 8, 10H, 18H, 20H, 28H, 30H, 38H
             2269 : 30 38             
    6593/    226B : FF F7 EF E7 DF D7   rst_cd:	db	0FFH, 0F7H, 0EFH, 0E7H, 0DFH, 0D7H, 0CFH, 0C7H
             2271 : CF C7             
    6594/    2273 :                     
    6595/    2273 :                     ;ill_num:	db	"Ill-No. ", 0
    6596/    2273 :                     
    6597/    2273 :                     ; RET CC
    6598/    2273 :                     el2_46:
    6599/    2273 : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6600/    2276 : 21 87 22            	ld	hl, ret_no
    6601/    2279 : 01 08 00            	ld	bc, 8
    6602/    227C : ED B1               	cpir
    6603/    227E : C2 92 1A            	jp	nz, asm_err
    6604/    2281 :                     
    6605/    2281 : 21 8F 22            	ld	hl, ret_cd
    6606/    2284 : C3 FC 20            	jp	st_mc1		; get and store MC code
    6607/    2287 :                     
    6608/    2287 : 06 12 13 14 15 16   ret_no:	db	6, 18, 19, 20, 21, 22, 23, 24
             228D : 17 18             
    6609/    228F : E8 E0 F0 D0 C0 F8   ret_cd:	db	0E8H, 0E0H, 0F0H, 0D0H, 0C0H, 0F8H, 0C8H, 0D8H
             2295 : C8 D8             
    6610/    2297 :                     
    6611/    2297 :                     ; JP (HL), JP nnnn, JP (IX), JP (IY)
    6612/    2297 :                     el2_42:
    6613/    2297 : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6614/    229A : FE 19               	cp	25
    6615/    229C : 28 21               	jr	z, jpnnnn	; JP nnnn
    6616/    229E : 2E E9               	ld	l, 0E9H
    6617/    22A0 : FE 1C               	cp	28		; (HL)?
    6618/    22A2 : 28 17               	jr	z, jphl
    6619/    22A4 : FE 1D               	cp	29		; (IX)?
    6620/    22A6 : 28 0C               	jr	z, jpix
    6621/    22A8 : FE 1E               	cp	30		; (IY)?
    6622/    22AA : C2 92 1A            	jp	nz, asm_err
    6623/    22AD :                     
    6624/    22AD :                     ; JP (IY)
    6625/    22AD : 7D                  	ld	a, l
    6626/    22AE : F5                  	push	af
    6627/    22AF : 3E FD               	ld	a, 0FDH
    6628/    22B1 : C3 2C 22            	jp	el2_441
    6629/    22B4 :                     
    6630/    22B4 :                     ; JP (IX)
    6631/    22B4 :                     jpix:
    6632/    22B4 : 7D                  	ld	a, l
    6633/    22B5 : F5                  	push	af
    6634/    22B6 : 3E DD               	ld	a, 0DDH
    6635/    22B8 : C3 2C 22            	jp	el2_441
    6636/    22BB :                     
    6637/    22BB :                     ; JP (HL)
    6638/    22BB :                     jphl:
    6639/    22BB : 7D                  	ld	a, l
    6640/    22BC : C3 FE 20            	jp	st_mc11		; set JP (HL) MC code
    6641/    22BF :                     
    6642/    22BF :                     ; JP nnnn
    6643/    22BF :                     jpnnnn:
    6644/    22BF : 3E C3               	ld	a, 0c3h
    6645/    22C1 : C3 0A 22            	jp	el2_451		; save OP and jmp address
    6646/    22C4 :                     
    6647/    22C4 :                     ;
    6648/    22C4 :                     ; CP, XOR, OR, AND, SUB section
    6649/    22C4 :                     ;
    6650/    22C4 :                     ; (defined already)
    6651/    22C4 :                     ;rhlnnxy	equ	r_hl_nne - r_hl_nn
    6652/    22C4 :                     ;m_num		equ	5	; except No.0 - 4  (IX+,IY+,IX-,IY-,nnnn)
    6653/    22C4 :                     ;r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    6654/    22C4 :                     ;		db	25
    6655/    22C4 :                     ;ex_sr_:	db	33, 36, 34, 37
    6656/    22C4 :                     ;r_hl_nne:
    6657/    22C4 :                     ;
    6658/    22C4 : 06 06 06 06 46      base1:		db	06H, 06H, 06H, 06H, 46h
    6659/    22C9 : 06 05 04 03 02 01   		db	06H, 05H, 04H, 03H, 02H, 01H, 00H, 07H
             22CF : 00 07             
    6660/    22D1 :                     
    6661/    22D1 :                     el2_41: ; CP
    6662/    22D1 : 16 B8               	ld	d, 0b8h
    6663/    22D3 : 18 0E               	jr	and_cp
    6664/    22D5 :                     
    6665/    22D5 :                     el2_29: ; XOR
    6666/    22D5 : 16 A8               	ld	d, 0a8h
    6667/    22D7 : 18 0A               	jr	and_cp
    6668/    22D9 :                     
    6669/    22D9 :                     el2_28: ; OR
    6670/    22D9 : 16 B0               	ld	d, 0b0h
    6671/    22DB : 18 06               	jr	and_cp
    6672/    22DD :                     
    6673/    22DD :                     el2_27: ; AND
    6674/    22DD : 16 A0               	ld	d, 0a0h
    6675/    22DF : 18 02               	jr	and_cp
    6676/    22E1 :                     
    6677/    22E1 :                     el2_24: ; SUB
    6678/    22E1 : 16 90               	ld	d, 090h
    6679/    22E3 :                     
    6680/    22E3 :                     and_cp:
    6681/    22E3 : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6682/    22E6 : 21 3A 1E            	ld	hl, r_hl_nn
    6683/    22E9 : 01 0D 00            	ld	bc, rhlnnxy
    6684/    22EC : ED B1               	cpir
    6685/    22EE : C2 92 1A            	jp	nz, asm_err
    6686/    22F1 :                     
    6687/    22F1 : 21 C4 22            	ld	hl, base1
    6688/    22F4 : 09                  	add	hl, bc
    6689/    22F5 : 7E                  	ld	a, (hl)
    6690/    22F6 : B2                  	or	a, d		; make code operand1
    6691/    22F7 : 57                  	ld	d, a		; save operand1
    6692/    22F8 : 79                  	ld	a, c
    6693/    22F9 : FE 05               	cp	m_num		; check IX+,IY+,IX-,IY-,nnnn
    6694/    22FB : DA 02 23            	jp	c, el2_410
    6695/    22FE : 7A                  	ld	a, d		; restore
    6696/    22FF : C3 FE 20            	jp	st_mc11
    6697/    2302 :                     	
    6698/    2302 :                     ; IX+,IY+,IX-,IY-,nnnn
    6699/    2302 :                     el2_410:
    6700/    2302 : FE 04               	cp	4 		; cp nn ?
    6701/    2304 : 38 0E               	jr	c, cp_ixiy	; no, IX+,IY+,IX-,IY-
    6702/    2306 :                     
    6703/    2306 :                     ; CP nn
    6704/    2306 : 2A 24 BF            	ld	hl, (opr_num25)
    6705/    2309 : 7C                  	ld	a, h
    6706/    230A : B7                  	or	a
    6707/    230B : C2 92 1A            	jp	nz, asm_err
    6708/    230E :                     
    6709/    230E : 7D                  	ld	a, l
    6710/    230F :                     el2_411:
    6711/    230F : F5                  	push	af		; adjust save I/F
    6712/    2310 : 7A                  	ld	a, d		; restore cp opecode
    6713/    2311 : C3 2C 22            	jp	el2_441
    6714/    2314 :                     	
    6715/    2314 :                     ; CP (IX+nn), CP (IY+nn), CP (IX-nn), CP (IY-nn)
    6716/    2314 :                     
    6717/    2314 :                     cp_ixiy:
    6718/    2314 : FE 02               	cp	2
    6719/    2316 : 3E FD               	ld	a, 0FDH
    6720/    2318 : 38 02               	jr	c, cp_iy
    6721/    231A : 3E DD               	ld	a, 0DDH
    6722/    231C :                     cp_iy:
    6723/    231C : 21 28 BF            	ld	hl, opr_num37
    6724/    231F : 09                  	add	hl, bc
    6725/    2320 : 4E                  	ld	c, (hl)
    6726/    2321 :                     cp_xy1:	
    6727/    2321 : 2A 1D BF            	ld	hl, (tasm_adr)
    6728/    2324 : 77                  	ld	(hl), a		; save op_code
    6729/    2325 : 7A                  	ld	a, d		; restore 2nd operand
    6730/    2326 : 23                  	inc	hl
    6731/    2327 : 77                  	ld	(hl), a
    6732/    2328 : 23                  	inc	hl
    6733/    2329 : 71                  	ld	(hl), c
    6734/    232A : C3 16 22            	jp	mc_end3
    6735/    232D :                     
    6736/    232D :                     ;
    6737/    232D :                     ; DEC, INC section
    6738/    232D :                     ;
    6739/    232D :                     
    6740/    232D : =12H                 di_nbs		equ	d_i_tbe - d_i_tb
    6741/    232D : =6H                  di_ixynum	equ	d_i_tbe - dix_tbl
    6742/    232D : =4H                  di_ixnnum	equ	d_i_tbe - dixn_tbl
    6743/    232D : =2H                  di_iynnum	equ	d_i_tbe - diyn_tbl
    6744/    232D :                     
    6745/    232D : 01 04 05 06 07 08   d_i_tb:		db	1, 4, 5, 6, 7, 8
    6746/    2333 : 09 0A 0B 0C 10 1C   		db	9, 10, 11, 12, 16, 28
    6747/    2339 : 0E 0F               dix_tbl:	db	14, 15		; IX, IY
    6748/    233B : 21 24               dixn_tbl:	db	33, 36		; IX+nn, IX-nn
    6749/    233D : 22 25               diyn_tbl:	db	34, 37		; IY+nn, IY-nn
    6750/    233F :                     d_i_tbe:
    6751/    233F :                     
    6752/    233F : 35 35               DEC_opr:	db	35h, 35h	; IY-, IY+
    6753/    2341 : 35 35               		db	35h, 35h	; IX-, IX+
    6754/    2343 : 2B 2B               		db	2bh, 2bh 	; IY, IX
    6755/    2345 : 35 3B 2D 2B 25 1D   		db	35h, 3Bh, 2Dh, 2Bh, 25h, 1Dh
    6756/    234B : 1B 15 0D 0B 05 3D   		db	1Bh, 15h, 0Dh, 0Bh, 05h, 3Dh
    6757/    2351 :                     
    6758/    2351 : 34 34               INC_opr:	db	34h, 34h	; IY-, IY+
    6759/    2353 : 34 34               		db	34h, 34h	; IX-, IX+
    6760/    2355 : 23 23               		db	23h, 23h	; IY,  IX
    6761/    2357 : 34 33 2C 23 24 1C   		db	34h, 33h, 2Ch, 23h, 24h, 1Ch
    6762/    235D : 13 14 0C 03 04 3C   		db	13h, 14h, 0Ch, 03h, 04h, 3Ch
    6763/    2363 :                     
    6764/    2363 :                     el2_26: ; DEC
    6765/    2363 : 11 3F 23            	ld	de, DEC_opr
    6766/    2366 : 18 03               	jr	el2_di
    6767/    2368 :                     
    6768/    2368 :                     el2_23: ; INC
    6769/    2368 : 11 51 23            	ld	de, INC_opr
    6770/    236B :                     
    6771/    236B :                     el2_di:
    6772/    236B : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6773/    236E : 21 2D 23            	ld	hl, d_i_tb
    6774/    2371 : 01 12 00            	ld	bc, di_nbs
    6775/    2374 : ED B1               	cpir
    6776/    2376 : 62                  	ld	h, d
    6777/    2377 : 6B                  	ld	l, e
    6778/    2378 : C2 92 1A            	jp	nz, asm_err
    6779/    237B :                     
    6780/    237B : 79                  	ld	a, c
    6781/    237C : 16 FD               	ld	d, 0FDH		; set IY extended OP
    6782/    237E : FE 06               	cp	di_ixynum
    6783/    2380 : D2 FC 20            	jp	nc, st_mc1	; 1 MC code
    6784/    2383 :                     
    6785/    2383 : 09                  	add	hl, bc
    6786/    2384 : 7E                  	ld	a, (hl)		; get 2nd operand
    6787/    2385 : 5F                  	ld	e, a		; save
    6788/    2386 : 79                  	ld	a, c
    6789/    2387 : FE 04               	cp	di_ixnnum
    6790/    2389 : 38 08               	jr	c, di_3mc
    6791/    238B :                     	
    6792/    238B :                     	; 2 MC. : INC IX, IY, DEC IX, IY
    6793/    238B :                     	
    6794/    238B : 28 02               	jr	z, di_iy
    6795/    238D : 16 DD               	ld	d, 0DDH		; set IX extended OP
    6796/    238F :                     di_iy:
    6797/    238F : 7B                  	ld	a, e		; restoe 2nd operand
    6798/    2390 : C3 0F 23            	jp	el2_411		; 2 MC (IX, IY)
    6799/    2393 :                     
    6800/    2393 :                     	; 3 MC. : INC (IX+nn) etc,.
    6801/    2393 :                     di_3mc:
    6802/    2393 : FE 02               	cp	di_iynnum	; IY+-nn?
    6803/    2395 : 38 02               	jr	c, di_3mc1
    6804/    2397 : 16 DD               	ld	d, 0DDH		; set IX extended OP
    6805/    2399 :                     di_3mc1:
    6806/    2399 : 7A                  	ld	a, d		; adjust I/F
    6807/    239A : 53                  	ld	d, e		; adjust I/F
    6808/    239B : C3 1C 23            	jp	cp_iy		; make 3 MC
    6809/    239E :                     	
    6810/    239E :                     ;
    6811/    239E :                     ; PUSH, POP section
    6812/    239E :                     ;
    6813/    239E :                     
    6814/    239E : =6H                  pp_no		equ	pp_tble - pp_tbl
    6815/    239E : =2H                  pp_ixiy		equ	pp_tble - pp_ixy
    6816/    239E :                     
    6817/    239E : 02 05 08 0B         pp_tbl:		db	2, 5, 8, 11
    6818/    23A2 : 0E 0F               pp_ixy:		db	14, 15
    6819/    23A4 :                     pp_tble:	
    6820/    23A4 :                     
    6821/    23A4 : E0 E0               pp_base:	db	0E0h, 0E0h ; IY, IX
    6822/    23A6 : E0 D0 C0 F0         		db	0E0h, 0D0h, 0C0h, 0f0h
    6823/    23AA :                     
    6824/    23AA :                     el2_9:  ; POP
    6825/    23AA : 16 01               	ld	d, 01h		; base code for pop operand
    6826/    23AC : 18 02               	jr	el2_81
    6827/    23AE :                     
    6828/    23AE :                     el2_8:  ; PUSH
    6829/    23AE : 16 05               	ld	d, 05h
    6830/    23B0 :                     
    6831/    23B0 :                     el2_81:
    6832/    23B0 : 21 9E 23            	ld	hl, pp_tbl
    6833/    23B3 : 01 06 00            	ld	bc, pp_no
    6834/    23B6 : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6835/    23B9 : ED B1               	cpir
    6836/    23BB : C2 92 1A            	jp	nz, asm_err
    6837/    23BE :                     
    6838/    23BE : 21 A4 23            	ld	hl, pp_base
    6839/    23C1 : 09                  	add	hl, bc
    6840/    23C2 : 7E                  	ld	a, (hl)
    6841/    23C3 : B2                  	or	d		; make opecode
    6842/    23C4 : 57                  	ld	d, a		; save
    6843/    23C5 :                     
    6844/    23C5 : 79                  	ld	a, c
    6845/    23C6 : FE 02               	cp	pp_ixiy
    6846/    23C8 : 7A                  	ld	a, d		; restore
    6847/    23C9 : D2 FE 20            	jp	nc, st_mc11	; 1 MC code
    6848/    23CC :                     
    6849/    23CC : 1E FD               	ld	e, 0FDH		; set IY extended OP
    6850/    23CE : 79                  	ld	a, c
    6851/    23CF : B7                  	or	a		; IY
    6852/    23D0 : 28 02               	jr	z, el2_82
    6853/    23D2 : 1E DD               	ld	e, 0DDH		; set IX code
    6854/    23D4 :                     el2_82:
    6855/    23D4 : 7A                  	ld	a, d
    6856/    23D5 : F5                  	push	af		; adjust I/F
    6857/    23D6 : 7B                  	ld	a, e		; adjust I/F
    6858/    23D7 : C3 2C 22            	jp	el2_441		; make 2 MC
    6859/    23DA :                     
    6860/    23DA :                     ;
    6861/    23DA :                     ; SRL, SRA, SLA, RR, RL, RRC, RLC section
    6862/    23DA :                     ;
    6863/    23DA :                     
    6864/    23DA :                     
    6865/    23DA :                     ; already defined
    6866/    23DA :                     ; r_hl_nn:	db	1, 4, 6, 7, 9, 10, 12, 28
    6867/    23DA :                     ;		db	25
    6868/    23DA :                     ; ex_sr_:		db	33, 36, 34, 37
    6869/    23DA :                     
    6870/    23DA : =8H                  sr_num		equ	8
    6871/    23DA : =4H                  ex_sr_num	equ	ld_en3
    6872/    23DA :                     
    6873/    23DA :                     ;SRL_cd:	db	3Eh, 3Dh, 3Ch, 3Bh, 3Ah, 39h, 38h, 3Fh
    6874/    23DA :                     ;SRA_cd:	db	2Eh, 2Dh, 2Ch, 2Bh, 2Ah, 29h, 28h, 2Fh
    6875/    23DA :                     ;RR_cd:		db	1Eh, 1Dh, 1Ch, 1Bh, 1Ah, 19h, 18h, 1Fh
    6876/    23DA :                     ;RRC_cd:	db	0Eh, 0Dh, 0Ch, 0Bh, 0Ah, 09h, 08h, 0Fh
    6877/    23DA :                     ;SLA_cd:	db	26h, 25h, 24h, 23h, 22h, 21h, 20h, 27h
    6878/    23DA :                     ;RL_cd:		db	16h, 15h, 14h, 13h, 12h, 11h, 10h, 17h
    6879/    23DA :                     ;RLC_cd:	db	06h, 05h, 04h, 03h, 02h, 01h, 00h, 07h
    6880/    23DA :                     ;RLC_cd:	db	06h, 05h, 04h, 03h, 02h, 01h, 00h, 07h
    6881/    23DA :                     
    6882/    23DA : =0H                  RLC_or	equ	0
    6883/    23DA : =10H                 RL_or	equ	10h
    6884/    23DA : =20H                 SLA_or	equ	20h
    6885/    23DA : =8H                  RRC_or	equ	08h
    6886/    23DA : =18H                 RR_or	equ	18h
    6887/    23DA : =28H                 SRA_or	equ	28h
    6888/    23DA : =38H                 SRL_or	equ	38h
    6889/    23DA :                     
    6890/    23DA : 06 05 04 03 02 01   SR_base:	db	06h, 05h, 04h, 03h, 02h, 01h, 00h, 07h
             23E0 : 00 07             
    6891/    23E2 :                     
    6892/    23E2 :                     
    6893/    23E2 :                     
    6894/    23E2 :                     el2_20:	; SRL
    6895/    23E2 : 11 3E 38            	ld	de, (SRL_or << 8) | 3Eh
    6896/    23E5 : 18 1C               	jr	sr_lookfor
    6897/    23E7 :                     el2_19:	; SRA
    6898/    23E7 : 11 2E 28            	ld	de, (SRA_or << 8) | 2Eh
    6899/    23EA : 18 17               	jr	sr_lookfor
    6900/    23EC :                     el2_18:	; SLA
    6901/    23EC : 11 26 20            	ld	de, (SLA_or << 8) | 26h
    6902/    23EF : 18 12               	jr	sr_lookfor
    6903/    23F1 :                     el2_17:	; RR
    6904/    23F1 : 11 1E 18            	ld	de, (RR_or << 8) | 1Eh
    6905/    23F4 : 18 0D               	jr	sr_lookfor
    6906/    23F6 :                     el2_13:	; RL
    6907/    23F6 : 11 16 10            	ld	de, (RL_or << 8) | 16h
    6908/    23F9 : 18 08               	jr	sr_lookfor
    6909/    23FB :                     el2_16:	; RRC
    6910/    23FB : 11 0E 08            	ld	de, (RRC_or << 8) | 0Eh
    6911/    23FE : 18 03               	jr	sr_lookfor
    6912/    2400 :                     el2_12:	; RLC
    6913/    2400 : 11 06 00            	ld	de, (RLC_or << 8) | 06h
    6914/    2403 :                     
    6915/    2403 :                     sr_lookfor:
    6916/    2403 : 3A 22 BF            	ld	a, (opr1_cd)	; get code number of operand No.1
    6917/    2406 : 21 3A 1E            	ld	hl, r_hl_nn
    6918/    2409 : 01 08 00            	ld	bc, sr_num
    6919/    240C : ED B1               	cpir
    6920/    240E : 20 0C               	jr	nz, nxt_sr
    6921/    2410 :                     
    6922/    2410 : 21 DA 23            	ld	hl, SR_base
    6923/    2413 : 09                  	add	hl, bc
    6924/    2414 : 7E                  	ld	a, (hl)
    6925/    2415 : B2                  	or	d		; make 2nd opcode
    6926/    2416 :                     
    6927/    2416 :                     el2_130:
    6928/    2416 : F5                  	push	af		; adjust I/F
    6929/    2417 : 3E CB               	ld	a, 0cbh		; set OP code
    6930/    2419 : C3 2C 22            	jp	el2_441
    6931/    241C :                     
    6932/    241C :                     nxt_sr:
    6933/    241C : 21 43 1E            	ld	hl, ex_sr_
    6934/    241F : 01 04 00            	ld	bc, ex_sr_num
    6935/    2422 : ED B1               	cpir
    6936/    2424 : C2 92 1A            	jp	nz, asm_err
    6937/    2427 :                     
    6938/    2427 : 16 FD               	ld	d, 0FDh		; for IY
    6939/    2429 : 79                  	ld	a, c
    6940/    242A : FE 02               	cp	2
    6941/    242C : 38 02               	jr	c, sr_iy1
    6942/    242E : 16 DD               	ld	d, 0DDh		; for IX
    6943/    2430 :                     
    6944/    2430 :                     sr_iy1:	; D: opecode, E : code operand4
    6945/    2430 :                     
    6946/    2430 : 21 28 BF            	ld	hl, opr_num37
    6947/    2433 : 09                  	add	hl, bc
    6948/    2434 : 4E                  	ld	c, (hl)
    6949/    2435 : 23                  	inc	hl
    6950/    2436 : 46                  	ld	b, (hl)
    6951/    2437 : 3E CB               	ld	a, 0CBH
    6952/    2439 :                     
    6953/    2439 :                     mc_end41:
    6954/    2439 : 2A 1D BF            	ld	hl, (tasm_adr)
    6955/    243C : 72                  	ld	(hl), d		; save 1st MC
    6956/    243D : 23                  	inc	hl
    6957/    243E : 77                  	ld	(hl), a		; save 2nd MC 
    6958/    243F : 23                  	inc	hl
    6959/    2440 : 71                  	ld	(hl), c		; save 3rd MC (8bit litelal)
    6960/    2441 : 23                  	inc	hl
    6961/    2442 : 73                  	ld	(hl), e		; save 4th MC
    6962/    2443 :                     mc_end4:
    6963/    2443 : 3E 04               	ld	a, 4
    6964/    2445 : C3 04 21            	jp	mc_end
    6965/    2448 :                     
    6966/    2448 :                     ;
    6967/    2448 :                     ; IM section
    6968/    2448 :                     ;
    6969/    2448 :                     el2_54:	; IM
    6970/    2448 : 3A 25 BF            	ld	a, (opr_num25+1)	; get high byte
    6971/    244B : B7                  	or	a
    6972/    244C : C2 92 1A            	jp	nz, asm_err
    6973/    244F : 3A 24 BF            	ld	a, (opr_num25)		; get low byte
    6974/    2452 : FE 03               	cp	3
    6975/    2454 : D2 92 1A            	jp	nc, asm_err
    6976/    2457 :                     
    6977/    2457 : 0E 46               	ld	c, 046h		; IM 0
    6978/    2459 : B7                  	or	a
    6979/    245A : 28 07               	jr	z, el2_541
    6980/    245C :                     
    6981/    245C : 0E 56               	ld	c, 056h		; IM 1
    6982/    245E : 3D                  	dec	a
    6983/    245F : 28 02               	jr	z, el2_541
    6984/    2461 : 0E 5E               	ld	c, 05Eh		; IM 2
    6985/    2463 :                     
    6986/    2463 :                     el2_541:
    6987/    2463 : 79                  	ld	a, c
    6988/    2464 :                     
    6989/    2464 :                     el2_5411:
    6990/    2464 : F5                  	push	af		; adjust I/F
    6991/    2465 : 3E ED               	ld	a, 0EDh		; set MC 1
    6992/    2467 : C3 2C 22            	jp	el2_441
    6993/    246A :                     
    6994/    246A :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    6995/    246A :                     ; get opecode
    6996/    246A :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    6997/    246A :                     analize_input:
    6998/    246A : CD 2D 25            	call	sch_opecode
    6999/    246D : D8                  	ret	c		; error return
    7000/    246E : 32 21 BF            	ld	(opc_cd), a	; save code number of opecode
    7001/    2471 : CD A4 24            	call	inc_element
    7002/    2474 :                     
    7003/    2474 : 7E                  	ld	a, (hl)
    7004/    2475 : B7                  	or	a
    7005/    2476 : C8                  	ret	z		; no operand
    7006/    2477 : FE 20               	cp	a, ' '		; check opecode delimiter
    7007/    2479 : C2 A2 24            	jp	nz, sx_err	; not space then syntax error
    7008/    247C :                     
    7009/    247C :                     	; get code of operand 1
    7010/    247C :                     
    7011/    247C : CD AC 24            	call	analize_opr
    7012/    247F : D8                  	ret	c		; error
    7013/    2480 : 32 22 BF            	ld	(opr1_cd), a	; save operand code to opr1
    7014/    2483 : 08                  	ex	af, af'
    7015/    2484 : CD A4 24            	call	inc_element
    7016/    2487 : 08                  	ex	af, af'
    7017/    2488 : FE 26               	cp	38		; check operand code 38:='"'
    7018/    248A : C8                  	ret	z
    7019/    248B : 7E                  	ld	a, (hl)
    7020/    248C : B7                  	or	a
    7021/    248D : C8                  	ret	z		; no operand2
    7022/    248E : FE 2C               	cp	a, ','		; check opecode delimiter
    7023/    2490 : 20 10               	jr	nz, sx_err
    7024/    2492 :                     
    7025/    2492 :                     	; get code of operand 2
    7026/    2492 :                     
    7027/    2492 : CD AC 24            	call	analize_opr
    7028/    2495 : D8                  	ret	c		; error
    7029/    2496 : 32 23 BF            	ld	(opr2_cd), a	; save operand code to opr1
    7030/    2499 : CD A4 24            	call	inc_element
    7031/    249C :                     
    7032/    249C : 7E                  	ld	a, (hl)
    7033/    249D : B7                  	or	a
    7034/    249E : 20 02               	jr	nz, sx_err	; error end
    7035/    24A0 : C9                  	ret
    7036/    24A1 :                     
    7037/    24A1 :                     an_err:
    7038/    24A1 : F1                  	pop	af
    7039/    24A2 :                     sx_err:
    7040/    24A2 : 37                  	scf
    7041/    24A3 : C9                  	ret
    7042/    24A4 :                     
    7043/    24A4 :                     inc_element:
    7044/    24A4 : 3A 1F BF            	ld	a, (element_cnt)
    7045/    24A7 : 3C                  	inc	a
    7046/    24A8 : 32 1F BF            	ld	(element_cnt), a
    7047/    24AB : C9                  	ret
    7048/    24AC :                     
    7049/    24AC :                     ;------------------------
    7050/    24AC :                     ; HL : input buffer
    7051/    24AC :                     ;------------------------
    7052/    24AC :                     analize_opr:
    7053/    24AC : 23                  	inc	hl		; HL : top of operand strings point
    7054/    24AD : CD 23 25            	call	sch_operand1
    7055/    24B0 : D0                  	ret	nc		; match, then retrun
    7056/    24B1 :                     	
    7057/    24B1 :                     	; search (IX+, (IY+, (IX-, (IY-
    7058/    24B1 :                     
    7059/    24B1 : CD 28 25            	call	sch_operand1_1
    7060/    24B4 : 38 40               	jr	c, nxt_a1	; jump, in not match
    7061/    24B6 :                     
    7062/    24B6 :                     	; analize "nn)"
    7063/    24B6 :                     
    7064/    24B6 : F5                  	push	af		; save operand code
    7065/    24B7 : CD 56 25            	call	get_number	; DE : binary
    7066/    24BA : DA A1 24            	jp	c, an_err
    7067/    24BD :                     	
    7068/    24BD : 7A                  	ld	a, d
    7069/    24BE : B7                  	or	a
    7070/    24BF : 20 E0               	jr	nz, an_err	; over 255
    7071/    24C1 :                     	
    7072/    24C1 : 7E                  	ld	a, (hl)
    7073/    24C2 : FE 29               	cp	')'
    7074/    24C4 : 20 DB               	jr	nz, an_err
    7075/    24C6 :                     
    7076/    24C6 : 23                  	inc	hl
    7077/    24C7 : F1                  	pop	af		; restore operand code
    7078/    24C8 :                     
    7079/    24C8 : F5                  	push	af
    7080/    24C9 : FE 21               	cp 	33		; IX+?
    7081/    24CB : 20 05               	jr	nz, nxt_a2
    7082/    24CD : 01 2B BF            	ld	bc, opr_num33
    7083/    24D0 : 18 07               	jr	nxt_a21
    7084/    24D2 :                     
    7085/    24D2 :                     nxt_a2:
    7086/    24D2 : FE 22               	cp 	34		; IY+?
    7087/    24D4 : 20 0B               	jr	nz, nxt_a3
    7088/    24D6 : 01 29 BF            	ld	bc, opr_num34
    7089/    24D9 :                     
    7090/    24D9 :                     nxt_a21:
    7091/    24D9 : 7B                  	ld	a, e
    7092/    24DA : FE 80               	cp	80H
    7093/    24DC : 30 C3               	jr	nc, an_err
    7094/    24DE :                     
    7095/    24DE :                     nxt_a22:
    7096/    24DE : 02                  	ld	(bc),a		; save binary
    7097/    24DF : F1                  	pop	af
    7098/    24E0 : C9                  	ret
    7099/    24E1 :                     	
    7100/    24E1 :                     nxt_a3:
    7101/    24E1 : FE 24               	cp 	36		; IX-?
    7102/    24E3 : 20 0C               	jr	nz, nxt_a4
    7103/    24E5 : 01 2A BF            	ld	bc, opr_num36
    7104/    24E8 :                     
    7105/    24E8 :                     nxt_a31:
    7106/    24E8 : 7B                  	ld	a, e
    7107/    24E9 : FE 81               	cp	81H
    7108/    24EB : 30 B4               	jr	nc, an_err
    7109/    24ED : ED 44               	neg
    7110/    24EF : 18 ED               	jr	nxt_a22
    7111/    24F1 :                     	
    7112/    24F1 :                     nxt_a4:	; IY-
    7113/    24F1 : 01 28 BF            	ld	bc, opr_num37
    7114/    24F4 : 18 F2               	jr	nxt_a31
    7115/    24F6 :                     
    7116/    24F6 :                     ; check '('
    7117/    24F6 :                     nxt_a1:
    7118/    24F6 : 7E                  	ld	a, (hl)
    7119/    24F7 : FE 28               	cp	'('
    7120/    24F9 : 20 12               	jr	nz, chk_strings
    7121/    24FB :                     	
    7122/    24FB :                     	; get number
    7123/    24FB :                     	
    7124/    24FB : 23                  	inc	hl
    7125/    24FC : CD 56 25            	call	get_number
    7126/    24FF : D8                  	ret	c		; error number
    7127/    2500 :                     
    7128/    2500 : 7E                  	ld	a, (hl)
    7129/    2501 : FE 29               	cp	')'
    7130/    2503 : 20 9D               	jr	nz, sx_err
    7131/    2505 :                     
    7132/    2505 : 23                  	inc	hl
    7133/    2506 : ED 53 26 BF         	ld	(opr_num35),de	; save binary
    7134/    250A : 3E 23               	ld	a, 35		; set operand code
    7135/    250C : C9                  	ret			; normal end
    7136/    250D :                     
    7137/    250D :                     chk_strings:
    7138/    250D : FE 22               	cp	'"'
    7139/    250F : 20 07               	jr	nz, only_num
    7140/    2511 : 23                  	inc	hl
    7141/    2512 : 22 24 BF            	ld	(opr_num25), hl
    7142/    2515 : 3E 26               	ld	a, 38
    7143/    2517 : C9                  	ret
    7144/    2518 :                     
    7145/    2518 :                     only_num:
    7146/    2518 : CD 56 25            	call	get_number
    7147/    251B : D8                  	ret	c		; error number
    7148/    251C : ED 53 24 BF         	ld	(opr_num25),de	; save binary
    7149/    2520 : 3E 19               	ld	a, 25		; set operand code
    7150/    2522 : C9                  	ret			; normal end
    7151/    2523 :                     
    7152/    2523 :                     ;------------------
    7153/    2523 :                     ; HL : input buffer
    7154/    2523 :                     ;------------------
    7155/    2523 :                     sch_operand1:
    7156/    2523 : 11 B1 19            	ld	de, operand_cds
    7157/    2526 : 18 0B               	jr	sh_0
    7158/    2528 :                     
    7159/    2528 :                     ;------------------
    7160/    2528 :                     ; HL : input buffer
    7161/    2528 :                     ; search (IX+, (IY+, (IX-, (IY-
    7162/    2528 :                     ;------------------
    7163/    2528 :                     sch_operand1_1:
    7164/    2528 : 11 11 1A            	ld	de, opr_cd1
    7165/    252B : 18 06               	jr	sh_0
    7166/    252D :                     
    7167/    252D :                     ;----------------------------------------------------------
    7168/    252D :                     ; Search code number of opecode from input strings
    7169/    252D :                     ; 
    7170/    252D :                     ; output:
    7171/    252D :                     ; if mach opecode ; HL : next point of input strings
    7172/    252D :                     ;		    A  : a code number of opecode
    7173/    252D :                     ; not mach	  ; CF = 1
    7174/    252D :                     ;----------------------------------------------------------
    7175/    252D :                     sch_opecode:
    7176/    252D : 21 CE BF            	ld	hl, line_buf
    7177/    2530 : 11 94 18            	ld	de, ope_cds
    7178/    2533 :                     
    7179/    2533 :                     sh_0:
    7180/    2533 : E5                  	push	hl
    7181/    2534 :                     sh_1:
    7182/    2534 : 1A                  	ld	a, (de)
    7183/    2535 : BE                  	cp	(hl)
    7184/    2536 : 20 04               	jr	nz, sch_next
    7185/    2538 :                     	
    7186/    2538 :                     	; match
    7187/    2538 : 23                  	inc	hl
    7188/    2539 : 13                  	inc	de
    7189/    253A : 18 F8               	jr	sh_1
    7190/    253C :                     
    7191/    253C :                     sch_next:
    7192/    253C : E6 80               	and	dm_bit		; delimiter?
    7193/    253E : 20 0E               	jr	nz, ok_match
    7194/    2540 :                     	
    7195/    2540 :                     skip_next:
    7196/    2540 : 13                  	inc	de
    7197/    2541 : 1A                  	ld	a, (de)
    7198/    2542 : E6 80               	and	dm_bit
    7199/    2544 : 28 FA               	jr	z, skip_next
    7200/    2546 :                     
    7201/    2546 :                     	; detect delimiter string
    7202/    2546 :                     
    7203/    2546 : 13                  	inc	de		; next search strings
    7204/    2547 :                     	
    7205/    2547 : 1A                  	ld	a, (de)
    7206/    2548 : B7                  	or	a		; tabel end?
    7207/    2549 : 28 08               	jr	z, n_end	; yes, no match return
    7208/    254B :                     
    7209/    254B : E1                  	pop	hl
    7210/    254C : 18 E5               	jr	sh_0		; search again
    7211/    254E :                     
    7212/    254E :                     	; match opecode strings
    7213/    254E :                     	; a : opecode number
    7214/    254E :                     
    7215/    254E :                     ok_match:
    7216/    254E : 1A                  	ld	a, (de)
    7217/    254F : E6 7F               	and	a, 7Fh		; mask dm_bit, get code of opecode
    7218/    2551 : D1                  	pop	de		; discard top string address
    7219/    2552 : C9                  	ret
    7220/    2553 :                     	
    7221/    2553 :                     ; no opecode strings maching
    7222/    2553 :                     n_end:
    7223/    2553 : E1                  	pop	hl
    7224/    2554 : 37                  	scf
    7225/    2555 : C9                  	ret
    7226/    2556 :                     
    7227/    2556 :                     ;---------------------
    7228/    2556 :                     ; HL : string buffer
    7229/    2556 :                     ;
    7230/    2556 :                     ; output : de or CF
    7231/    2556 :                     ;----------------------
    7232/    2556 :                     get_number:
    7233/    2556 :                     
    7234/    2556 : 11 F1 BF            	ld	de, num_string
    7235/    2559 : 0E 00               	ld	c, 0
    7236/    255B :                     	
    7237/    255B :                     ; check first character
    7238/    255B :                     
    7239/    255B : CD 98 25            	call	dec_chr		; check decimal chrarcter
    7240/    255E : D8                  	ret	c		; no number inputs detect
    7241/    255F :                     
    7242/    255F :                     ;  detect 1st number( only 0 to 9 )
    7243/    255F :                     
    7244/    255F : 12                  	ld	(de), a		; save to buffer
    7245/    2560 : 13                  	inc	de
    7246/    2561 : 23                  	inc	hl
    7247/    2562 : 0C                  	inc	c
    7248/    2563 :                     
    7249/    2563 :                     ; check 2nd, 3rd, 4th, 5th number string
    7250/    2563 :                     
    7251/    2563 :                     lop_gnum:
    7252/    2563 : CD A2 25            	call	hex_chr
    7253/    2566 : 38 0B               	jr	c, ck_endmk	; no number inputs detect
    7254/    2568 :                     
    7255/    2568 :                     ; detect 2nd, 3rd, 4th, 5th number (include A to F)
    7256/    2568 :                     
    7257/    2568 : 12                  	ld	(de), a		; save to buffer
    7258/    2569 : 13                  	inc	de
    7259/    256A : 23                  	inc	hl
    7260/    256B : 0C                  	inc	c
    7261/    256C : 79                  	ld	a, c
    7262/    256D : FE 07               	cp	NUMLEN		; buffer check
    7263/    256F : 28 2F               	jr	z, no_num	; overfllow. error return
    7264/    2571 : 18 F0               	jr	lop_gnum
    7265/    2573 :                     
    7266/    2573 :                     ck_endmk:
    7267/    2573 : 08                  	ex	af, af'
    7268/    2574 : AF                  	xor	a
    7269/    2575 : 12                  	ld	(de), a		; set delimiter
    7270/    2576 : 08                  	ex	af, af'
    7271/    2577 : FE 48               	cp	'H'		; check hex?
    7272/    2579 : 28 0B               	jr	z, bi_hex
    7273/    257B :                     
    7274/    257B :                     ;	get binary from decimal string
    7275/    257B :                     ;bi_dec:
    7276/    257B : E5                  	push	hl
    7277/    257C : 21 F1 BF            	ld	hl, num_string
    7278/    257F : CD 00 03            	call	GET_dNUM	; return bc
    7279/    2582 : E1                  	pop	hl
    7280/    2583 : 50                  	ld	d, b		; set binary to DE
    7281/    2584 : 59                  	ld	e, c		; set binary to DE
    7282/    2585 : C9                  	ret
    7283/    2586 :                     
    7284/    2586 :                     ;	ret	nc		; if CF =1, try hex to bin
    7285/    2586 :                     ;	dec	hl		; adjust hl pointer
    7286/    2586 :                     
    7287/    2586 :                     	;hex to binary
    7288/    2586 :                     bi_hex:
    7289/    2586 : 23                  	inc	hl
    7290/    2587 : E5                  	push	hl
    7291/    2588 : 21 F1 BF            	ld	hl, num_string
    7292/    258B : CD 1D 27            	call	RDHEX		; get binary to DE
    7293/    258E : E1                  	pop	hl
    7294/    258F : B7                  	or	a		; clear CF
    7295/    2590 : C9                  	ret
    7296/    2591 :                     
    7297/    2591 :                     ;--------------------------
    7298/    2591 :                     ; skip sp
    7299/    2591 :                     ;--------------------------
    7300/    2591 :                     skp_sp:
    7301/    2591 : 7E                  	ld	a, (hl)
    7302/    2592 : FE 20               	cp	' '
    7303/    2594 : C0                  	ret	nz
    7304/    2595 : 23                  	inc	hl
    7305/    2596 : 18 F9               	jr	skp_sp
    7306/    2598 :                     
    7307/    2598 :                     ;--------------------------
    7308/    2598 :                     ; check decimal char
    7309/    2598 :                     ;--------------------------
    7310/    2598 :                     dec_chr:
    7311/    2598 : 7E                  	ld	a, (hl)
    7312/    2599 : FE 3A               	cp	':'
    7313/    259B : 30 03               	jr	nc, no_num
    7314/    259D : FE 30               	cp	'0'
    7315/    259F : D0                  	ret	nc
    7316/    25A0 :                     	
    7317/    25A0 : 37                  no_num:	scf
    7318/    25A1 : C9                  	ret
    7319/    25A2 :                     
    7320/    25A2 :                     ;--------------------------
    7321/    25A2 :                     ; check HEX char
    7322/    25A2 :                     ;--------------------------
    7323/    25A2 :                     hex_chr:
    7324/    25A2 : 7E                  	ld	a, (hl)
    7325/    25A3 : FE 30               	cp	'0'
    7326/    25A5 : D8                  	ret	c	; error return
    7327/    25A6 : FE 3A               	cp	'9'+1
    7328/    25A8 : 38 07               	jr	c, dec_num
    7329/    25AA : FE 41               	cp	'A'
    7330/    25AC : D8                  	ret	c	; error return
    7331/    25AD : FE 47               	cp	'F'+1
    7332/    25AF : 30 EF               	jr	nc, no_num
    7333/    25B1 :                     dec_num:
    7334/    25B1 : B7                  	or	a	; clear carry
    7335/    25B2 : C9                  	ret
    7336/    25B3 :                     
    7337/    25B3 :                     ;--------------------------------------
    7338/    25B3 :                     ; 2 byte machine code branch
    7339/    25B3 :                     ; - 2nd byte is Relative address
    7340/    25B3 :                     ; - output a = (e-2) relative number
    7341/    25B3 :                     ;          CF=1 : target address error
    7342/    25B3 :                     ;--------------------------------------
    7343/    25B3 :                     calc_reladr:
    7344/    25B3 : E5                  	push	hl
    7345/    25B4 : D5                  	push	de
    7346/    25B5 :                     
    7347/    25B5 : ED 5B 1D BF         	ld	de, (tasm_adr)	; base address
    7348/    25B9 : 13                  	inc	de
    7349/    25BA : 13                  	inc	de
    7350/    25BB : 2A 24 BF            	ld	hl, (opr_num25)	; target address
    7351/    25BE : AF                  	xor	a
    7352/    25BF : ED 52               	sbc	hl, de
    7353/    25C1 : 7D                  	ld	a, l
    7354/    25C2 : 38 08               	jr	c, cal_1	; CF=1 :target address is lower
    7355/    25C4 :                     
    7356/    25C4 : FE 80               	cp	80H
    7357/    25C6 : 30 12               	jr	nc, adr_ovr
    7358/    25C8 : B7                  	or	a
    7359/    25C9 :                     
    7360/    25C9 :                     cal_01:
    7361/    25C9 : D1                  	pop	de
    7362/    25CA : E1                  	pop	hl
    7363/    25CB : C9                  	ret
    7364/    25CC :                     
    7365/    25CC :                     cal_1:
    7366/    25CC : 7C                  	ld	a, h
    7367/    25CD : FE FF               	cp	0ffh
    7368/    25CF : 20 09               	jr	nz, adr_ovr
    7369/    25D1 : 7D                  	ld	a, l
    7370/    25D2 : ED 44               	neg
    7371/    25D4 : FE 81               	cp	81h
    7372/    25D6 : 7D                  	ld	a, l
    7373/    25D7 : 3F                  	ccf
    7374/    25D8 : 18 EF               	jr	cal_01
    7375/    25DA :                     
    7376/    25DA :                     adr_ovr:
    7377/    25DA : 37                  	scf
    7378/    25DB : 18 EC               	jr	cal_01
    7379/    25DD :                     
    7380/    25DD :                     ;-----------------------------
    7381/    25DD :                     ;
    7382/    25DD :                     ; Recorrect input strings
    7383/    25DD :                     ;
    7384/    25DD :                     ;-----------------------------
    7385/    25DD :                     recorrect:
    7386/    25DD : E5                  	push	hl
    7387/    25DE : D5                  	push	de
    7388/    25DF : C5                  	push	bc
    7389/    25E0 :                     
    7390/    25E0 : 21 CE BF            	ld	hl, line_buf
    7391/    25E3 : 54                  	ld	d, h
    7392/    25E4 : 5D                  	ld	e, l
    7393/    25E5 :                     
    7394/    25E5 : 0E 20               	ld	c, ' '		; space delimitor. (opecode and operand)
    7395/    25E7 : CD 91 25            	call	skp_sp
    7396/    25EA : CD 02 26            	call	recorr
    7397/    25ED : B7                  	or	a
    7398/    25EE : 28 0E               	jr	z, gle_end
    7399/    25F0 :                     
    7400/    25F0 : 0E 00               	ld	c, 0		; end delimitor. (end strings)
    7401/    25F2 : 23                  	inc	hl
    7402/    25F3 : CD 91 25            	call	skp_sp
    7403/    25F6 : B7                  	or	a
    7404/    25F7 : 28 03               	jr	z, gle_end1
    7405/    25F9 : CD 02 26            	call	recorr
    7406/    25FC :                     
    7407/    25FC :                     gle_end1:
    7408/    25FC : 1B                  	dec	de
    7409/    25FD : 12                  	ld	(de), a		; replace space to 0
    7410/    25FE :                     gle_end:
    7411/    25FE : C1                  	pop	bc
    7412/    25FF : D1                  	pop	de
    7413/    2600 : E1                  	pop	hl
    7414/    2601 : C9                  	ret
    7415/    2602 :                     
    7416/    2602 :                     ; extract space from input buffer
    7417/    2602 :                     recorr:
    7418/    2602 : 06 00               	ld	b, 0
    7419/    2604 :                     recorr1:
    7420/    2604 : 12                  	ld	(de), a
    7421/    2605 : 13                  	inc	de
    7422/    2606 : B7                  	or	a
    7423/    2607 : C8                  	ret	z
    7424/    2608 : B9                  	cp	c
    7425/    2609 : C8                  	ret	z
    7426/    260A :                     
    7427/    260A :                     next_char:
    7428/    260A : FE 22               	cp	'"'
    7429/    260C : 20 06               	jr	nz, nxchr
    7430/    260E :                     
    7431/    260E : 08                  	ex	af, af'		;'
    7432/    260F : 78                  	ld	a, b
    7433/    2610 : EE 01               	xor	a, 1
    7434/    2612 : 47                  	ld	b, a		; toggle '"' flag
    7435/    2613 : 08                  	ex	af, af'		;'
    7436/    2614 :                     ;"	
    7437/    2614 :                     nxchr:
    7438/    2614 : 23                  	inc	hl
    7439/    2615 : 7E                  	ld	a, (hl)
    7440/    2616 : B9                  	cp	c
    7441/    2617 : 28 EB               	jr	z, recorr1
    7442/    2619 : CB 40               	bit	0, b
    7443/    261B : 20 E7               	jr	nz, recorr1
    7444/    261D :                     
    7445/    261D : FE 20               	cp	' '
    7446/    261F : 28 E9               	jr	z, next_char
    7447/    2621 : 18 E1               	jr	recorr1
    7448/    2623 :                     	
    7449/    2623 :                     ;;;
    7450/    2623 :                     ;;; Other support routines
    7451/    2623 :                     ;;;
    7452/    2623 :                     
    7453/    2623 :                     STROUT:
    7454/    2623 : 7E                  	LD	A,(HL)
    7455/    2624 : A7                  	AND	A
    7456/    2625 : C8                  	RET	Z
    7457/    2626 : CD 8F 2E            	CALL	CONOUT
    7458/    2629 : 23                  	INC	HL
    7459/    262A : 18 F7               	JR	STROUT
    7460/    262C :                     
    7461/    262C :                     ; input:  HL
    7462/    262C :                     ; output: 4 hex_char output console
    7463/    262C :                     
    7464/    262C :                     HEXOUT4:
    7465/    262C : 7C                  	LD	A,H
    7466/    262D : CD 31 26            	CALL	HEXOUT2
    7467/    2630 : 7D                  	LD	A,L
    7468/    2631 :                     
    7469/    2631 :                     ; input:  A
    7470/    2631 :                     ; output: 2 hex_char output console
    7471/    2631 :                     HEXOUT2:
    7472/    2631 : F5                  	PUSH	AF
    7473/    2632 : 1F                  	RRA
    7474/    2633 : 1F                  	RRA
    7475/    2634 : 1F                  	RRA
    7476/    2635 : 1F                  	RRA
    7477/    2636 : CD 3A 26            	CALL	HEXOUT1
    7478/    2639 : F1                  	POP	AF
    7479/    263A :                     
    7480/    263A :                     ; input:  A
    7481/    263A :                     ; output: 1 hex_char output console
    7482/    263A :                     HEXOUT1:
    7483/    263A : E6 0F               	AND	0FH
    7484/    263C : C6 30               	ADD	A,'0'
    7485/    263E : FE 3A               	CP	'9'+1
    7486/    2640 : DA 8F 2E            	JP	C,CONOUT
    7487/    2643 : C6 07               	ADD	A,'A'-'9'-1
    7488/    2645 : C3 8F 2E            	JP	CONOUT
    7489/    2648 :                     
    7490/    2648 :                     HEXIN:
    7491/    2648 : AF                  	XOR	A
    7492/    2649 : CD 50 26            	CALL	HI0
    7493/    264C : 07                  	RLCA
    7494/    264D : 07                  	RLCA
    7495/    264E : 07                  	RLCA
    7496/    264F : 07                  	RLCA
    7497/    2650 :                     HI0:
    7498/    2650 : C5                  	PUSH	BC
    7499/    2651 : 4F                  	LD	C,A
    7500/    2652 : CD 40 2E            	CALL	CONIN
    7501/    2655 : FE 30               	CP	'0'
    7502/    2657 : 38 11               	JR	C,HIR
    7503/    2659 : FE 3A               	CP	'9'+1
    7504/    265B : 38 0A               	JR	C,HI1
    7505/    265D : FE 41               	CP	'A'
    7506/    265F : 38 09               	JR	C,HIR
    7507/    2661 : FE 47               	CP	'F'+1
    7508/    2663 : 30 05               	JR	NC,HIR
    7509/    2665 : D6 07               	SUB	'A'-'9'-1
    7510/    2667 :                     HI1:
    7511/    2667 : D6 30               	SUB	'0'
    7512/    2669 : B1                  	OR	C
    7513/    266A :                     HIR:
    7514/    266A : C1                  	POP	BC
    7515/    266B : C9                  	RET
    7516/    266C :                     	
    7517/    266C :                     CRLF:
    7518/    266C : 3E 0D               	LD	A,CR
    7519/    266E : CD 8F 2E            	CALL	CONOUT
    7520/    2671 : 3E 0A               	LD	A,LF
    7521/    2673 : C3 8F 2E            	JP	CONOUT
    7522/    2676 :                     
    7523/    2676 :                     CLR_CRT:
    7524/    2676 : E5                  	PUSH	HL
    7525/    2677 : 21 7F 26            	LD	HL, ESC_CRT_CLR
    7526/    267A : CD 23 26            	CALL	STROUT
    7527/    267D : E1                  	POP	HL
    7528/    267E : C9                  	RET
    7529/    267F :                     	
    7530/    267F :                     ESC_CRT_CLR:
    7531/    267F : 1B                  	db	01BH
    7532/    2680 : 5B 32               	db	"[2"
    7533/    2682 : 00                  	db	0
    7534/    2683 :                     
    7535/    2683 :                     GETLIN:
    7536/    2683 : 21 CE BF            	LD	HL,INBUF
    7537/    2686 : 06 28               	ld	b, BUFLEN
    7538/    2688 :                     
    7539/    2688 :                     GL0:	; input hl
    7540/    2688 :                     
    7541/    2688 : D5                  	PUSH	de
    7542/    2689 : E5                  	push	hl
    7543/    268A : 58                  	ld	e, b	; E: buffer length
    7544/    268B : 1D                  	dec	e	; buffer lenght -1
    7545/    268C : 06 00               	LD	B,0
    7546/    268E :                     
    7547/    268E :                     GL00:
    7548/    268E : CD 40 2E            	CALL	CONIN
    7549/    2691 : FE 0D               	CP	CR
    7550/    2693 : 28 5A               	JR	Z,GLE
    7551/    2695 : FE 0A               	CP	LF
    7552/    2697 : 28 56               	JR	Z,GLE
    7553/    2699 : FE 08               	CP	BS
    7554/    269B : 28 3B               	JR	Z,GLB
    7555/    269D : FE 7F               	CP	DEL
    7556/    269F : 28 37               	JR	Z,GLB
    7557/    26A1 : FE 22               	cp	'"'
    7558/    26A3 : 20 0A               	jr	nz, GL001
    7559/    26A5 : F5                  	push	af
    7560/    26A6 : 3A 39 BF            	ld	a, (ky_flg)
    7561/    26A9 : EE 04               	xor	NO_UPPER	; toggle UPPER or NO UPPER
    7562/    26AB : 32 39 BF            	ld	(ky_flg), a
    7563/    26AE : F1                  	pop	af
    7564/    26AF :                     
    7565/    26AF : FE 20               GL001:	CP	' '
    7566/    26B1 : 38 DB               	JR	C,GL00
    7567/    26B3 : FE 80               	CP	80H
    7568/    26B5 : 30 D7               	JR	NC,GL00
    7569/    26B7 : 4F                  	LD	C,A
    7570/    26B8 : 78                  	LD	A,B
    7571/    26B9 : BB                  	CP	e	; buffer full check
    7572/    26BA : 30 D2               	JR	NC,GL00	; Too long
    7573/    26BC : 04                  	INC	B
    7574/    26BD : 79                  	LD	A,C
    7575/    26BE : CD 8F 2E            	CALL	CONOUT
    7576/    26C1 : FE 61               	cp	'a'
    7577/    26C3 : 38 0F               	jr	c, GL1
    7578/    26C5 : FE 7B               	cp	'z'+1
    7579/    26C7 : 30 0B               	jr	nc, GL1
    7580/    26C9 :                     
    7581/    26C9 : E5                  	push	hl
    7582/    26CA : 21 39 BF            	ld	hl, ky_flg
    7583/    26CD : CB 56               	bit	NO_UPPER>>1, (hl)
    7584/    26CF : 20 02               	jr	nz, skip_upper
    7585/    26D1 : E6 DF               	and	0DFH	; make upper code
    7586/    26D3 :                     skip_upper:
    7587/    26D3 : E1                  	pop	hl
    7588/    26D4 :                     GL1:
    7589/    26D4 : 77                  	LD	(HL),A
    7590/    26D5 : 23                  	INC	HL
    7591/    26D6 : 18 B6               	JR	GL00
    7592/    26D8 :                     GLB:
    7593/    26D8 : 78                  	LD	A,B
    7594/    26D9 : A7                  	AND	A
    7595/    26DA : 28 B2               	JR	Z,GL00
    7596/    26DC : 05                  	DEC	B
    7597/    26DD : 2B                  	DEC	HL
    7598/    26DE : 3E 08               	LD	A,08H
    7599/    26E0 : CD 8F 2E            	CALL	CONOUT
    7600/    26E3 : 3E 20               	LD	A,' '
    7601/    26E5 : CD 8F 2E            	CALL	CONOUT
    7602/    26E8 : 3E 08               	LD	A,08H
    7603/    26EA : CD 8F 2E            	CALL	CONOUT
    7604/    26ED : 18 9F               	JR	GL00
    7605/    26EF :                     GLE:
    7606/    26EF : E5                  	push	hl
    7607/    26F0 : 21 39 BF            	ld	hl, ky_flg
    7608/    26F3 : CB 46               	bit	NO_CR>>1, (hl)
    7609/    26F5 : 20 05               	jr	nz, skip_cr
    7610/    26F7 : 3E 0D               	ld	a, CR
    7611/    26F9 : CD 8F 2E            	call	CONOUT
    7612/    26FC :                     skip_cr:
    7613/    26FC : CB 4E               	bit	NO_LF>>1, (hl)
    7614/    26FE : 20 05               	jr	nz, skip_lf
    7615/    2700 : 3E 0A               	ld	a, LF
    7616/    2702 : CD 8F 2E            	call	CONOUT
    7617/    2705 :                     skip_lf:
    7618/    2705 : CB 96               	res	NO_UPPER>>1,(HL)	; set upper flag
    7619/    2707 : E1                  	pop	hl
    7620/    2708 : 36 00               	LD	(HL),00H
    7621/    270A :                     
    7622/    270A : E1                  	pop	hl
    7623/    270B : D1                  	POP	de
    7624/    270C : C9                  	RET
    7625/    270D :                     
    7626/    270D :                     SKIPSP:
    7627/    270D : 7E                  	LD	A,(HL)
    7628/    270E : FE 20               	CP	' '
    7629/    2710 : C0                  	RET	NZ
    7630/    2711 : 23                  	INC	HL
    7631/    2712 : 18 F9               	JR	SKIPSP
    7632/    2714 :                     
    7633/    2714 :                     UPPER:
    7634/    2714 : FE 61               	CP	'a'
    7635/    2716 : D8                  	RET	C
    7636/    2717 : FE 7B               	CP	'z'+1
    7637/    2719 : D0                  	RET	NC
    7638/    271A : C6 E0               	ADD	A,'A'-'a'
    7639/    271C : C9                  	RET
    7640/    271D :                     
    7641/    271D :                     RDHEX:
    7642/    271D : 0E 00               	LD	C,0
    7643/    271F : 11 00 00            	LD	DE,0
    7644/    2722 :                     RH0:
    7645/    2722 : 7E                  	LD	A,(HL)
    7646/    2723 : FE 30               	CP	'0'
    7647/    2725 : 38 2C               	JR	C,RHE
    7648/    2727 : FE 3A               	CP	'9'+1
    7649/    2729 : 38 0A               	JR	C,RH1
    7650/    272B : FE 41               	CP	'A'
    7651/    272D : 38 24               	JR	C,RHE
    7652/    272F : FE 47               	CP	'F'+1
    7653/    2731 : 30 20               	JR	NC,RHE
    7654/    2733 : D6 07               	SUB	'A'-'9'-1
    7655/    2735 :                     RH1:
    7656/    2735 : D6 30               	SUB	'0'
    7657/    2737 : 17                  	RLA
    7658/    2738 : 17                  	RLA
    7659/    2739 : 17                  	RLA
    7660/    273A : 17                  	RLA
    7661/    273B : 17                  	RLA
    7662/    273C : CB 13               	RL	E
    7663/    273E : CB 12               	RL	D
    7664/    2740 : 17                  	RLA
    7665/    2741 : CB 13               	RL	E
    7666/    2743 : CB 12               	RL	D
    7667/    2745 : 17                  	RLA
    7668/    2746 : CB 13               	RL	E
    7669/    2748 : CB 12               	RL	D
    7670/    274A : 17                  	RLA
    7671/    274B : CB 13               	RL	E
    7672/    274D : CB 12               	RL	D
    7673/    274F : 23                  	INC	HL
    7674/    2750 : 0C                  	INC	C
    7675/    2751 : 18 CF               	JR	RH0
    7676/    2753 :                     RHE:
    7677/    2753 : 79                  	ld	a, c
    7678/    2754 : B7                  	or	a
    7679/    2755 : 28 06               	jr	z, rhe1
    7680/    2757 : FE 05               	cp	5
    7681/    2759 : 30 02               	jr	nc, rhe1
    7682/    275B : B7                  	or	a	; clear carry
    7683/    275C : C9                  	ret
    7684/    275D :                     	
    7685/    275D :                     rhe1:
    7686/    275D : 37                  	scf	; set carry
    7687/    275E : C9                  	RET
    7688/    275F :                     
    7689/    275F :                     ;;;
    7690/    275F :                     ;;; API Handler
    7691/    275F :                     ;;:   C : API entory NO.
    7692/    275F :                     ;;;
    7693/    275F :                     
    7694/    275F :                     RST30H_IN:
    7695/    275F :                     
    7696/    275F : E5                  	PUSH	HL
    7697/    2760 : C5                  	PUSH	BC
    7698/    2761 : 21 7C 27            	LD	HL,APITBL
    7699/    2764 : 06 00               	LD	B,0
    7700/    2766 : 09                  	ADD	HL,BC
    7701/    2767 : 09                  	ADD	HL,BC
    7702/    2768 :                     
    7703/    2768 : 01 A8 27            	ld	bc, APITBL_E
    7704/    276B : B7                  	or	a
    7705/    276C : E5                  	push	hl
    7706/    276D : ED 42               	sbc	hl, bc
    7707/    276F : E1                  	pop	hl
    7708/    2770 : 30 07               	jr	nc, no_api	; request No. is not exist
    7709/    2772 :                     
    7710/    2772 : 46                  	LD	B,(HL)
    7711/    2773 : 23                  	INC	HL
    7712/    2774 : 66                  	LD	H,(HL)
    7713/    2775 : 68                  	LD	L,B
    7714/    2776 :                     
    7715/    2776 : C1                  	POP	BC
    7716/    2777 : E3                  	EX	(SP),HL		; Restore HL, jump address on stack top
    7717/    2778 :                     no_operate:
    7718/    2778 : C9                  	RET
    7719/    2779 :                     
    7720/    2779 :                     no_api:
    7721/    2779 : C1                  	pop	bc
    7722/    277A : E1                  	pop	hl
    7723/    277B : C9                  	ret
    7724/    277C :                     
    7725/    277C :                     APITBL:
    7726/    277C : DA 00               	DW	SINIT		; 00: SINIT
    7727/    277E : A8 27               	DW	API01		; 01: WSTART
    7728/    2780 : 8F 2E               	DW	CONOUT		; 02: CONOUT
    7729/    2782 : 23 26               	DW	STROUT		; 03: STROUT
    7730/    2784 : 40 2E               	DW	CONIN		; 04: CONIN
    7731/    2786 : 8A 2E               	DW	CONST		; 05: CONST
    7732/    2788 : EA 27               	DW	API06		; 06: PSPEC
    7733/    278A : 2C 26               	DW	HEXOUT4		; 07: CONOUT HEX4bytes: input HL
    7734/    278C : 31 26               	DW	HEXOUT2		; 08: CONOUT HEX2bytes: input A
    7735/    278E : 3A 26               	DW	HEXOUT1		; 09: CONOUT HEX1byte : input A
    7736/    2790 : 76 26               	DW	CLR_CRT		; 10: Clear screen (ESC+[2)
    7737/    2792 : 88 26               	DW	GL0		; 11: GET a line.  input HL : input buffer address)
    7738/    2794 :                     				;                         B : buffer length
    7739/    2794 :                     				;                  output B : length of strings
    7740/    2794 : 0D 27               	DW	SKIPSP		; 12: SKIP Spase
    7741/    2796 : 6C 26               	DW	CRLF		; 13: CONOUT CRLF
    7742/    2798 : 14 27               	DW	UPPER		; 14: Lower to UPPER
    7743/    279A : 1D 27               	DW	RDHEX		; 15: get hex number from chr buffer
    7744/    279C :                     				;     input  HL : hex string buffer
    7745/    279C :                     				;     output DE : hex number
    7746/    279C :                     				;            CF=1 : error, C, A = hex counts(1-4)
    7747/    279C : 21 29               	DW	DEC_STR		; 16: get decimal srtings
    7748/    279E :                     				; input hl : return strings buffer addr.
    7749/    279E :                     				;       de : 16bit binary
    7750/    279E : 57 29               	DW	DIV16_8		; 17; division 16bit / 8bit
    7751/    27A0 : CD 29               	DW	MUL_8		; 18: multiply 8bit * 8bit
    7752/    27A2 : 78 27               	DW	no_operate	; 19: no operation
    7753/    27A4 : 3D 09               	dw	get_disasm_st	; 20: dis assemble string
    7754/    27A6 :                     				;     input: HL buffer. need 42bytes
    7755/    27A6 :                     				;     output : DE : next MC address
    7756/    27A6 :                     				;              A  : disassembled MC size
    7757/    27A6 : 00 03               	dw	GET_dNUM	; 21: get number from decimal strings
    7758/    27A8 :                     				;     input HL : string buffer
    7759/    27A8 :                     				;     Return
    7760/    27A8 :                     				;        CF =1 : Error
    7761/    27A8 :                     				;        BC: Calculation result
    7762/    27A8 :                     APITBL_E:
    7763/    27A8 :                     
    7764/    27A8 :                     	;; WSTART from API
    7765/    27A8 :                     API01:
    7766/    27A8 : 31 D0 BE            	LD	SP,STACKM	; reset SP for monitor
    7767/    27AB :                     
    7768/    27AB :                     ; check stop by bp and trace operation
    7769/    27AB :                     
    7770/    27AB : 3A 06 BF            	ld	a, (tmpb_f)
    7771/    27AE : B7                  	or	a
    7772/    27AF : 28 06               	jr	z, ws_chk1
    7773/    27B1 : 21 07 BF            	ld	hl, tmpb_op
    7774/    27B4 : CD D9 28            	call	rstr_tpt
    7775/    27B7 :                     ws_chk1:
    7776/    27B7 : 3A F6 BE            	ld	a, (tpt1_f)
    7777/    27BA : B7                  	or	a
    7778/    27BB : 28 06               	jr	z, ws_chk2
    7779/    27BD : 21 F7 BE            	ld	hl, tpt1_op
    7780/    27C0 : CD D9 28            	call	rstr_tpt
    7781/    27C3 :                     
    7782/    27C3 :                     ws_chk2:
    7783/    27C3 : 3A FA BE            	ld	a, (tpt2_f)
    7784/    27C6 : B7                  	or	a
    7785/    27C7 : 28 06               	jr	z, ws_chk3
    7786/    27C9 : 21 FB BE            	ld	hl, tpt2_op
    7787/    27CC : CD D9 28            	call	rstr_tpt
    7788/    27CF :                     ws_chk3:
    7789/    27CF : 3A 02 BF            	ld	a, (bpt2_f)
    7790/    27D2 : B7                  	or	a
    7791/    27D3 : 28 06               	jr	z, ws_chk4
    7792/    27D5 : 21 03 BF            	ld	hl, bpt2_op
    7793/    27D8 : CD E5 28            	call	rstr_bpt
    7794/    27DB :                     ws_chk4:
    7795/    27DB : 3A FE BE            	ld	a, (bpt1_f)
    7796/    27DE : B7                  	or	a
    7797/    27DF : 28 06               	jr	z, ws_chk5
    7798/    27E1 : 21 FF BE            	ld	hl, bpt1_op
    7799/    27E4 : CD E5 28            	call	rstr_bpt
    7800/    27E7 :                     ws_chk5:
    7801/    27E7 : C3 AF 28            	JP	backTomon
    7802/    27EA :                     
    7803/    27EA :                     	;; PSPEC
    7804/    27EA :                     API06:
    7805/    27EA : AF                  	XOR	A
    7806/    27EB : C9                  	RET
    7807/    27EC :                     
    7808/    27EC :                     ;;;
    7809/    27EC :                     ;;; Break Point
    7810/    27EC :                     ;;; trace Point
    7811/    27EC :                     ;;; go, stop point
    7812/    27EC :                     ;;; operation handler
    7813/    27EC :                     ;;
    7814/    27EC :                     RST38H_IN:
    7815/    27EC : F5                  	PUSH	AF
    7816/    27ED : ED 5F               	LD	A,R
    7817/    27EF : 32 F5 BE            	LD	(REGR),A
    7818/    27F2 : ED 57               	LD	A,I
    7819/    27F4 : 32 F4 BE            	LD	(REGI),A
    7820/    27F7 : 22 E2 BE            	LD	(REGHL),HL
    7821/    27FA : ED 53 E0 BE         	LD	(REGDE),DE
    7822/    27FE : ED 43 DE BE         	LD	(REGBC),BC
    7823/    2802 : E1                  	POP	HL
    7824/    2803 : 22 DC BE            	LD	(REGAF),HL
    7825/    2806 : 08                  	EX	AF,AF'		;'
    7826/    2807 : F5                  	PUSH	AF
    7827/    2808 : D9                  	EXX
    7828/    2809 : 22 EA BE            	LD	(REGHLX),HL
    7829/    280C : ED 53 E8 BE         	LD	(REGDEX),DE
    7830/    2810 : ED 43 E6 BE         	LD	(REGBCX),BC
    7831/    2814 : E1                  	POP	HL
    7832/    2815 : 22 E4 BE            	LD	(REGAFX),HL
    7833/    2818 : DD 22 EC BE         	LD	(REGIX),IX
    7834/    281C : FD 22 EE BE         	LD	(REGIY),IY
    7835/    2820 : E1                  	POP	HL
    7836/    2821 : 2B                  	DEC	HL
    7837/    2822 : 22 F2 BE            	LD	(REGPC),HL
    7838/    2825 : ED 73 F0 BE         	LD	(REGSP),SP
    7839/    2829 :                     
    7840/    2829 :                     ; check bp and trace operation
    7841/    2829 :                     
    7842/    2829 : 31 D0 BE            	LD	SP,STACKM	; reset SP for monitor
    7843/    282C : AF                  	xor	a
    7844/    282D : 57                  	ld	d, a
    7845/    282E : 5F                  	ld	e, a		;clear msg pointer
    7846/    282F :                     
    7847/    282F :                     
    7848/    282F :                     ; check go, end operation
    7849/    282F : 3A 06 BF            	ld	a, (tmpb_f)
    7850/    2832 : B7                  	or	a
    7851/    2833 : 28 09               	jr	z, chk_bp
    7852/    2835 : 11 0F 29            	ld	de, stpBrk_msg
    7853/    2838 : 21 07 BF            	ld	hl, tmpb_op
    7854/    283B : CD D9 28            	call	rstr_tpt
    7855/    283E :                     
    7856/    283E :                     ; check set break point
    7857/    283E :                     
    7858/    283E :                     chk_bp:
    7859/    283E : 3A 02 BF            	ld	a, (bpt2_f)
    7860/    2841 : B7                  	or	a
    7861/    2842 : 28 09               	jr	z, bp_chk1
    7862/    2844 : 11 0F 29            	ld	de, stpBrk_msg
    7863/    2847 : 21 03 BF            	ld	hl, bpt2_op
    7864/    284A : CD E5 28            	call	rstr_bpt
    7865/    284D :                     
    7866/    284D :                     bp_chk1:
    7867/    284D : 3A FE BE            	ld	a, (bpt1_f)
    7868/    2850 : B7                  	or	a
    7869/    2851 : 28 09               	jr	z, tp_chk1
    7870/    2853 : 11 0F 29            	ld	de, stpBrk_msg
    7871/    2856 : 21 FF BE            	ld	hl, bpt1_op
    7872/    2859 : CD E5 28            	call	rstr_bpt
    7873/    285C :                     
    7874/    285C :                     ; check trace operation
    7875/    285C :                     tp_chk1:
    7876/    285C : 3A F6 BE            	ld	a, (tpt1_f)
    7877/    285F : B7                  	or	a
    7878/    2860 : 28 09               	jr	z, tp_chk2
    7879/    2862 : 11 18 29            	ld	de, trace_msg
    7880/    2865 : 21 F7 BE            	ld	hl, tpt1_op
    7881/    2868 : CD D9 28            	call	rstr_tpt
    7882/    286B :                     
    7883/    286B :                     tp_chk2:
    7884/    286B : 3A FA BE            	ld	a, (tpt2_f)
    7885/    286E : B7                  	or	a
    7886/    286F : 28 09               	jr	z, bp_chk_end
    7887/    2871 :                     
    7888/    2871 : 11 18 29            	ld	de, trace_msg
    7889/    2874 : 21 FB BE            	ld	hl, tpt2_op
    7890/    2877 : CD D9 28            	call	rstr_tpt
    7891/    287A :                     
    7892/    287A :                     bp_chk_end:
    7893/    287A : 7A                  	ld	a, d
    7894/    287B : B3                  	or	e
    7895/    287C : 20 03               	jr	nz, no_rst38_msg
    7896/    287E :                     
    7897/    287E :                     	; set RST 38H message
    7898/    287E : 11 05 29            	LD	de,RST38MSG
    7899/    2881 :                     
    7900/    2881 :                     no_rst38_msg:
    7901/    2881 : 1A                  	ld	a, (de)		; get first char of message
    7902/    2882 : FE 54               	cp	'T'		; trace ?
    7903/    2884 : 28 0C               	jr	z, chk_ntrace
    7904/    2886 :                     	
    7905/    2886 : EB                  	ex	de, hl
    7906/    2887 : CD 23 26            	CALL	STROUT
    7907/    288A :                     
    7908/    288A :                     	;; R register adjustment
    7909/    288A :                     
    7910/    288A : CD 08 18            	CALL	RDUMP
    7911/    288D : CD EC 28            	call	dis_call	; list disassemble
    7912/    2890 : 18 1D               	jr	backTomon	; goto WBOOT
    7913/    2892 :                     
    7914/    2892 :                     ;
    7915/    2892 :                     ; check continue trace operation
    7916/    2892 :                     ;
    7917/    2892 :                     chk_ntrace:
    7918/    2892 : 3A 14 BF            	ld	a, (TP_mode)
    7919/    2895 : FE 46               	cp	'F'		; chk
    7920/    2897 : 28 0A               	jr	z, skp_rmsg
    7921/    2899 :                     
    7922/    2899 :                     ;no_trace:
    7923/    2899 : EB                  	ex	de, hl
    7924/    289A : CD 23 26            	CALL	STROUT
    7925/    289D :                     
    7926/    289D :                     	;; R register adjustment
    7927/    289D :                     
    7928/    289D : CD 08 18            	CALL	RDUMP
    7929/    28A0 : CD EC 28            	call	dis_call	; list disassemble
    7930/    28A3 :                     
    7931/    28A3 :                     skp_rmsg:
    7932/    28A3 : CD 8A 2E            	call	CONST
    7933/    28A6 : 28 13               	jr	z, t_no_ky		; no key in
    7934/    28A8 : CD 40 2E            	call	CONIN
    7935/    28AB : FE 03               	cp	03h	; chk CTL+C
    7936/    28AD : 20 0C               	jr	nz, t_no_ky
    7937/    28AF :                     
    7938/    28AF :                     	; stop_trace
    7939/    28AF :                     backTomon:
    7940/    28AF : AF                  	xor	a
    7941/    28B0 : 32 1A BF            	ld	(fever_t), a	; clear forever flag
    7942/    28B3 : 67                  	ld	h, a
    7943/    28B4 : 6F                  	ld	l, a
    7944/    28B5 : 22 16 BF            	ld	(TC_cnt), hl
    7945/    28B8 : C3 BD 01            	JP	WSTART
    7946/    28BB :                     	
    7947/    28BB :                     	; check trace forever
    7948/    28BB :                     t_no_ky:
    7949/    28BB : 3A 1A BF            	ld	a, (fever_t)
    7950/    28BE : B7                  	or	a
    7951/    28BF : C2 D0 28            	jp	nz, repeat_trace
    7952/    28C2 :                     
    7953/    28C2 : 2A 16 BF            	ld	hl, (TC_cnt)
    7954/    28C5 : 2B                  	dec	hl
    7955/    28C6 : 22 16 BF            	ld	(TC_cnt), hl
    7956/    28C9 : 7D                  	ld	a, l
    7957/    28CA : B4                  	or	h
    7958/    28CB : 20 03               	jr	nz, repeat_trace
    7959/    28CD : C3 BD 01            	JP	WSTART
    7960/    28D0 :                     
    7961/    28D0 :                     repeat_trace:
    7962/    28D0 : 2A F2 BE            	ld	hl, (REGPC)
    7963/    28D3 : 22 18 BF            	ld	(tmpT), hl
    7964/    28D6 : C3 2C 05            	jp	t_op_chk
    7965/    28D9 :                     
    7966/    28D9 :                     rstr_tpt:	; HL=buffer point
    7967/    28D9 : E5                  	push	hl
    7968/    28DA : 7E                  	ld	a, (hl)
    7969/    28DB : 23                  	inc	hl
    7970/    28DC : 4E                  	ld	c, (hl)
    7971/    28DD : 23                  	inc	hl
    7972/    28DE : 46                  	ld	b, (hl)
    7973/    28DF :                     
    7974/    28DF : 02                  	ld	(bc), a		; restor OP CODE
    7975/    28E0 : E1                  	pop	hl
    7976/    28E1 : AF                  	xor	a
    7977/    28E2 : 2B                  	dec	hl
    7978/    28E3 : 77                  	ld	(hl), a		; clear trace flag
    7979/    28E4 : C9                  	ret
    7980/    28E5 :                     
    7981/    28E5 :                     rstr_bpt:	; HL=buffer point
    7982/    28E5 : 7E                  	ld	a, (hl)
    7983/    28E6 : 23                  	inc	hl
    7984/    28E7 : 4E                  	ld	c, (hl)
    7985/    28E8 : 23                  	inc	hl
    7986/    28E9 : 46                  	ld	b, (hl)
    7987/    28EA :                     
    7988/    28EA : 02                  	ld	(bc), a		; restor OP CODE
    7989/    28EB : C9                  	ret
    7990/    28EC :                     
    7991/    28EC :                     dis_call:
    7992/    28EC : 2A F2 BE            	ld	hl, (REGPC)
    7993/    28EF : 22 3D BF            	ld	(dasm_adr), hl	; set disasm address
    7994/    28F2 : CD 93 09            	call	dis_analysis
    7995/    28F5 : CD 58 09            	call	mk_adr_str	; conout address and machine code
    7996/    28F8 : 21 CE BF            	ld	hl, adr_mc_buf
    7997/    28FB : CD 23 26            	call	STROUT		; conout disassemble strings
    7998/    28FE : 2A F2 BE            	ld	hl, (REGPC)
    7999/    2901 : 22 3D BF            	ld	(dasm_adr), hl	; restrore disasm address
    8000/    2904 : C9                  	ret
    8001/    2905 :                     
    8002/    2905 :                     RST38MSG:
    8003/    2905 : 52 53 54 20 33 38   	DB	"RST 38H",CR,LF,00H
             290B : 48 0D 0A 00       
    8004/    290F :                     stpBrk_msg:	
    8005/    290F : 42 72 65 61 6B 21   	db	"Break!",CR,LF,00H
             2915 : 0D 0A 00          
    8006/    2918 :                     trace_msg:	
    8007/    2918 : 54 72 61 63 65 21   	db	"Trace!",CR,LF,00H
             291E : 0D 0A 00          
    8008/    2921 :                     
    8009/    2921 :                     ;
    8010/    2921 :                     ; make decimal string
    8011/    2921 :                     ;
    8012/    2921 :                     ; input HL : output string buffer
    8013/    2921 :                     ;       DE : 16bit binary
    8014/    2921 :                     ;
    8015/    2921 :                     ; output (HL) : decimal strings
    8016/    2921 :                     
    8017/    2921 :                     DEC_STR:
    8018/    2921 : F5                  	PUSH	AF
    8019/    2922 : C5                  	PUSH	BC
    8020/    2923 : D5                  	PUSH	DE
    8021/    2924 : E5                  	push	hl
    8022/    2925 : DD E5               	push	ix
    8023/    2927 :                     
    8024/    2927 : E5                  	push	hl
    8025/    2928 : DD E1               	pop	ix		; ix: save buffer top address
    8026/    292A :                     
    8027/    292A : EB                  	ex	de, hl		; hl: 16bit binary, de: buffer
    8028/    292B : E5                  	push	hl		; save 16bit binary
    8029/    292C : 21 05 00            	ld	hl, 5
    8030/    292F : 19                  	add	hl, de		; hl = buffer + 5
    8031/    2930 : AF                  	xor	a
    8032/    2931 : 77                  	ld	(hl), A
    8033/    2932 : EB                  	ex	de, hl		; de: buffer + 5, hl : buffer
    8034/    2933 : E1                  	pop	hl		; hl : 16bit binary
    8035/    2934 : 01 01 00            	LD	BC, 1
    8036/    2937 :                     
    8037/    2937 :                     LOOP_DEC:
    8038/    2937 : 3E 0A               	LD	A, 10
    8039/    2939 : CD 57 29            	CALL	DIV16_8
    8040/    293C : F6 30               	OR	30H
    8041/    293E : 1B                  	DEC	DE
    8042/    293F : 12                  	LD	(DE), A
    8043/    2940 : 0C                  	INC	C
    8044/    2941 : 7C                  	LD	A, H
    8045/    2942 : B5                  	OR	L
    8046/    2943 : 20 F2               	JR	NZ, LOOP_DEC
    8047/    2945 :                     
    8048/    2945 : 79                  	LD	A, C
    8049/    2946 : FE 06               	CP	6
    8050/    2948 : 28 06               	JR	Z, END_DEC
    8051/    294A :                     
    8052/    294A : DD E5               	push	ix
    8053/    294C : E1                  	pop	hl		; hl : buffer top address
    8054/    294D : EB                  	EX	DE, HL
    8055/    294E : ED B0               	LDIR
    8056/    2950 :                     
    8057/    2950 :                     END_DEC:
    8058/    2950 : DD E1               	pop	ix
    8059/    2952 : E1                  	pop	hl
    8060/    2953 : D1                  	POP	DE
    8061/    2954 : C1                  	POP	BC
    8062/    2955 : F1                  	POP	AF
    8063/    2956 : C9                  	RET
    8064/    2957 :                     
    8065/    2957 :                     
    8066/    2957 :                     ; DIV 16bit / 8 bit
    8067/    2957 :                     ; input
    8068/    2957 :                     ;	HL, A
    8069/    2957 :                     ; output
    8070/    2957 :                     ;	result = HL, mod = A
    8071/    2957 :                     
    8072/    2957 :                     DIV16_8:
    8073/    2957 : C5                  	PUSH	BC
    8074/    2958 : D5                  	PUSH	DE
    8075/    2959 :                     
    8076/    2959 : 4F                  	LD	C, A
    8077/    295A : 06 0F               	LD	B, 15
    8078/    295C : AF                  	XOR	A
    8079/    295D : 29                  	ADD	HL, HL
    8080/    295E : 17                  	RLA
    8081/    295F : 91                  	SUB	C
    8082/    2960 : 38 0D               	JR	C, D16_MINUS_BEFORE
    8083/    2962 : 29                  	ADD	HL, HL
    8084/    2963 : 2C                  	INC	L
    8085/    2964 :                     
    8086/    2964 :                     D16_PLUS:
    8087/    2964 : 17                  	RLA
    8088/    2965 : 91                  	SUB	C
    8089/    2966 : 38 0C               	JR	C, D16_MINUS_AFTER
    8090/    2968 :                     
    8091/    2968 :                     D16_PLUS_AFTER:
    8092/    2968 : 29                  	ADD	HL, HL
    8093/    2969 : 2C                  	INC	L
    8094/    296A : 10 F8               	DJNZ	D16_PLUS
    8095/    296C : C3 78 29            	JP	D16_END
    8096/    296F :                     
    8097/    296F :                     D16_MINUS_BEFORE:
    8098/    296F : 29                  	ADD	HL, HL
    8099/    2970 :                     
    8100/    2970 :                     D16_MINUS:
    8101/    2970 : 17                  	RLA
    8102/    2971 : 81                  	ADD	A, C
    8103/    2972 : 38 F4               	JR	C, D16_PLUS_AFTER
    8104/    2974 :                     
    8105/    2974 :                     D16_MINUS_AFTER:
    8106/    2974 : 29                  	ADD	HL, HL
    8107/    2975 : 10 F9               	DJNZ	D16_MINUS
    8108/    2977 : 81                  	ADD	A,C
    8109/    2978 :                     D16_END:
    8110/    2978 : D1                  	POP	DE
    8111/    2979 : C1                  	POP	BC
    8112/    297A : C9                  	RET
    8113/    297B :                     
    8114/    297B :                     ;
    8115/    297B :                     ; input : HL / DE
    8116/    297B :                     ; output : quotient HL
    8117/    297B :                     ;	   remainder DE
    8118/    297B :                     
    8119/    297B :                     DIV16:
    8120/    297B : 22 0A BF            	LD	(DIV16_NA), HL
    8121/    297E : ED 53 0C BF         	LD	(DIV16_NB), DE
    8122/    2982 :                     
    8123/    2982 : AF                  	XOR	A
    8124/    2983 : 32 0E BF            	LD	(DIV16_NC), A
    8125/    2986 : 32 0F BF            	LD	(DIV16_NC+1), A
    8126/    2989 : 32 10 BF            	LD	(DIV16_ND), A
    8127/    298C : 32 11 BF            	LD	(DIV16_ND+1), A
    8128/    298F : 06 10               	LD	B, 16
    8129/    2991 :                     
    8130/    2991 :                     DIV16_X2:
    8131/    2991 : 21 0E BF            	LD	HL, DIV16_NC
    8132/    2994 : CB 26               	SLA	(HL)
    8133/    2996 : 23                  	INC	HL
    8134/    2997 : CB 16               	RL	(HL)
    8135/    2999 :                     
    8136/    2999 : 21 0A BF            	LD	HL, DIV16_NA
    8137/    299C : CB 26               	SLA	(HL)
    8138/    299E : 23                  	INC	HL
    8139/    299F : CB 16               	RL	(HL)
    8140/    29A1 : 21 10 BF            	LD	HL, DIV16_ND
    8141/    29A4 : CB 16               	RL	(HL)
    8142/    29A6 : 23                  	INC	HL
    8143/    29A7 : CB 16               	RL	(HL)
    8144/    29A9 :                     
    8145/    29A9 : 2A 0C BF            	LD	HL, (DIV16_NB)
    8146/    29AC : 5D                  	LD	E, L
    8147/    29AD : 54                  	LD	D, H
    8148/    29AE : 2A 10 BF            	LD	HL, (DIV16_ND)
    8149/    29B1 : AF                  	XOR	A
    8150/    29B2 : ED 52               	SBC	HL, DE
    8151/    29B4 : 30 02               	JR	NC, DIV16_X0
    8152/    29B6 : 18 0B               	JR	DIV16_X1
    8153/    29B8 :                     
    8154/    29B8 :                     DIV16_X0:
    8155/    29B8 : 22 10 BF            	LD	(DIV16_ND), HL
    8156/    29BB :                     
    8157/    29BB : 3A 0E BF            	LD	A, (DIV16_NC)
    8158/    29BE : F6 01               	OR	1
    8159/    29C0 : 32 0E BF            	LD	(DIV16_NC), A
    8160/    29C3 :                     
    8161/    29C3 :                     DIV16_X1:
    8162/    29C3 : 10 CC               	DJNZ	DIV16_X2
    8163/    29C5 :                     
    8164/    29C5 : 2A 0E BF            	LD	HL,(DIV16_NC)
    8165/    29C8 : ED 5B 10 BF         	LD	DE,(DIV16_ND)
    8166/    29CC : C9                  	RET
    8167/    29CD :                     
    8168/    29CD :                     ; 8bit * 8bit : ans = 16bit
    8169/    29CD :                     ; input A , BC
    8170/    29CD :                     ; output HL
    8171/    29CD :                     
    8172/    29CD :                     MUL_8:
    8173/    29CD : F5                  	PUSH	AF
    8174/    29CE : C5                  	PUSH	BC
    8175/    29CF : B7                  	OR	A	; clear carry
    8176/    29D0 : 18 04               	JR	ST_MUL8
    8177/    29D2 :                     
    8178/    29D2 :                     LOOP_M8:
    8179/    29D2 : CB 21               	SLA	C
    8180/    29D4 : CB 10               	RL	B
    8181/    29D6 :                     
    8182/    29D6 :                     ST_MUL8:
    8183/    29D6 : 1F                  	RRA
    8184/    29D7 : 30 F9               	JR	NC, LOOP_M8
    8185/    29D9 : 09                  	ADD	HL, BC
    8186/    29DA : 20 F6               	JR	NZ, LOOP_M8
    8187/    29DC : C1                  	POP	BC
    8188/    29DD : F1                  	POP	AF
    8189/    29DE : C9                  	RET
    8190/    29DF :                     ;;;
    8191/    29DF :                     ;;; Messages
    8192/    29DF :                     ;;;
    8193/    29DF :                     
    8194/    29DF : 3F 20 3A 43 6F 6D   cmd_hlp:	db	"? :Command Help", CR, LF
             29E5 : 6D 61 6E 64 20 48 
             29EB : 65 6C 70 0D 0A    
    8195/    29F0 : 23 4C 7C 3C 6E 75   		db	"#L|<num> :Launch program", CR, LF
             29F6 : 6D 3E 20 3A 4C 61 
             29FC : 75 6E 63 68 20 70 
             2A02 : 72 6F 67 72 61 6D 
             2A08 : 0D 0A             
    8196/    2A0A : 41 5B 3C 61 64 64   		db	"A[<address>] : Mini Assemble mode", CR, LF
             2A10 : 72 65 73 73 3E 5D 
             2A16 : 20 3A 20 4D 69 6E 
             2A1C : 69 20 41 73 73 65 
             2A22 : 6D 62 6C 65 20 6D 
             2A28 : 6F 64 65 0D 0A    
    8197/    2A2D : 42 5B 31 7C 32 5B   		db	"B[1|2[,<adr>]] :Set or List Break Point", CR, LF
             2A33 : 2C 3C 61 64 72 3E 
             2A39 : 5D 5D 20 3A 53 65 
             2A3F : 74 20 6F 72 20 4C 
             2A45 : 69 73 74 20 42 72 
             2A4B : 65 61 6B 20 50 6F 
             2A51 : 69 6E 74 0D 0A    
    8198/    2A56 : 42 43 5B 31 7C 32   		db	"BC[1|2] :Clear Break Point", CR, LF
             2A5C : 5D 20 3A 43 6C 65 
             2A62 : 61 72 20 42 72 65 
             2A68 : 61 6B 20 50 6F 69 
             2A6E : 6E 74 0D 0A       
    8199/    2A72 : 44 5B 3C 61 64 72   		db	"D[<adr>] :Dump Memory", CR, LF
             2A78 : 3E 5D 20 3A 44 75 
             2A7E : 6D 70 20 4D 65 6D 
             2A84 : 6F 72 79 0D 0A    
    8200/    2A89 : 44 49 5B 3C 61 64   		db	"DI[<adr>][,s<steps>|<adr>] :Disassemble", CR, LF
             2A8F : 72 3E 5D 5B 2C 73 
             2A95 : 3C 73 74 65 70 73 
             2A9B : 3E 7C 3C 61 64 72 
             2AA1 : 3E 5D 20 3A 44 69 
             2AA7 : 73 61 73 73 65 6D 
             2AAD : 62 6C 65 0D 0A    
    8201/    2AB2 : 47 5B 3C 61 64 72   		db	"G[<adr>][,<stop adr>] :Go and Stop", CR, LF
             2AB8 : 3E 5D 5B 2C 3C 73 
             2ABE : 74 6F 70 20 61 64 
             2AC4 : 72 3E 5D 20 3A 47 
             2ACA : 6F 20 61 6E 64 20 
             2AD0 : 53 74 6F 70 0D 0A 
    8202/    2AD6 : 4C 20 3A 4C 6F 61   		db	"L :Load HexFile", CR, LF
             2ADC : 64 20 48 65 78 46 
             2AE2 : 69 6C 65 0D 0A    
    8203/    2AE7 : 50 5B 49 7C 53 5D   		db	"P[I|S] :Save HexFile(I:Intel,S:Motorola)", CR, LF
             2AED : 20 3A 53 61 76 65 
             2AF3 : 20 48 65 78 46 69 
             2AF9 : 6C 65 28 49 3A 49 
             2AFF : 6E 74 65 6C 2C 53 
             2B05 : 3A 4D 6F 74 6F 72 
             2B0B : 6F 6C 61 29 0D 0A 
    8204/    2B11 : 52 5B 3C 72 65 67   		db	"R[<reg>] :Set or Dump register", CR, LF
             2B17 : 3E 5D 20 3A 53 65 
             2B1D : 74 20 6F 72 20 44 
             2B23 : 75 6D 70 20 72 65 
             2B29 : 67 69 73 74 65 72 
             2B2F : 0D 0A             
    8205/    2B31 : 53 5B 3C 61 64 72   		db	"S[<adr>] :Set Memory", CR, LF
             2B37 : 3E 5D 20 3A 53 65 
             2B3D : 74 20 4D 65 6D 6F 
             2B43 : 72 79 0D 0A       
    8206/    2B47 : 54 5B 3C 61 64 72   		db	"T[<adr>][,<steps>|-1] : Trace command", CR, LF
             2B4D : 3E 5D 5B 2C 3C 73 
             2B53 : 74 65 70 73 3E 7C 
             2B59 : 2D 31 5D 20 3A 20 
             2B5F : 54 72 61 63 65 20 
             2B65 : 63 6F 6D 6D 61 6E 
             2B6B : 64 0D 0A          
    8207/    2B6E : 54 4D 5B 49 7C 53   		db	"TM[I|S] :Trace Option for CALL", CR, LF
             2B74 : 5D 20 3A 54 72 61 
             2B7A : 63 65 20 4F 70 74 
             2B80 : 69 6F 6E 20 66 6F 
             2B86 : 72 20 43 41 4C 4C 
             2B8C : 0D 0A             
    8208/    2B8E : 54 50 5B 4F 4E 7C   		db	"TP[ON|OFF] :Trace Print Mode", CR, LF, 00h
             2B94 : 4F 46 46 5D 20 3A 
             2B9A : 54 72 61 63 65 20 
             2BA0 : 50 72 69 6E 74 20 
             2BA6 : 4D 6F 64 65 0D 0A 
             2BAC : 00                
    8209/    2BAD :                     
    8210/    2BAD :                     OPNMSG:
    8211/    2BAD : 0D 0A               	DB	CR,LF
    8212/    2BAF : 53 42 43 5A 38 30   	db	"SBCZ80-MON Rev.B04",CR,LF
             2BB5 : 2D 4D 4F 4E 20 52 
             2BBB : 65 76 2E 42 30 34 
             2BC1 : 0D 0A             
    8213/    2BC3 : 54 68 69 73 20 6D   	db	"This monitor is based on unimon.",CR,LF,00H
             2BC9 : 6F 6E 69 74 6F 72 
             2BCF : 20 69 73 20 62 61 
             2BD5 : 73 65 64 20 6F 6E 
             2BDB : 20 75 6E 69 6D 6F 
             2BE1 : 6E 2E 0D 0A 00    
    8214/    2BE6 :                     
    8215/    2BE6 :                     PROMPT:
    8216/    2BE6 : 5D 20 00            	DB	"] ",00H
    8217/    2BE9 :                     
    8218/    2BE9 :                     IHEMSG:
    8219/    2BE9 : 45 72 72 6F 72 20   	DB	"Error ihex",CR,LF,00H
             2BEF : 69 68 65 78 0D 0A 
             2BF5 : 00                
    8220/    2BF6 :                     SHEMSG:
    8221/    2BF6 : 45 72 72 6F 72 20   	DB	"Error srec",CR,LF,00H
             2BFC : 73 72 65 63 0D 0A 
             2C02 : 00                
    8222/    2C03 :                     ERRMSG:
    8223/    2C03 : 45 72 72 6F 72 0D   	DB	"Error",CR,LF,00H
             2C09 : 0A 00             
    8224/    2C0B :                     
    8225/    2C0B :                     DSEP0:
    8226/    2C0B : 20 3A 00            	DB	" :",00H
    8227/    2C0E :                     DSEP1:
    8228/    2C0E : 20 7C 20 00         	DB	" | ",00H
    8229/    2C12 :                     
    8230/    2C12 : 20 20 00            dsap	db	"  ", 00
    8231/    2C15 :                     
    8232/    2C15 :                     IHEXER:
    8233/    2C15 : 3A 30 30 30 30 30           DB	":00000001FF",CR,LF,00H
             2C1B : 30 30 31 46 46 0D 
             2C21 : 0A 00             
    8234/    2C23 :                     SRECER:
    8235/    2C23 : 53 39 30 33 30 30           DB	"S9030000FC",CR,LF,00H
             2C29 : 30 30 46 43 0D 0A 
             2C2F : 00                
    8236/    2C30 :                     
    8237/    2C30 :                     	;; Register dump table
    8238/    2C30 : 85 2C DD BE         RDTAB:	DW	RDSA,   REGAF+1
    8239/    2C34 : 01                  	DB	1
    8240/    2C35 : 89 2C DE BE         	DW	RDSBC,  REGBC
    8241/    2C39 : 02                  	DB	2
    8242/    2C3A : 8F 2C E0 BE         	DW	RDSDE,  REGDE
    8243/    2C3E : 02                  	DB	2
    8244/    2C3F : 95 2C E2 BE         	DW	RDSHL,  REGHL
    8245/    2C43 : 02                  	DB	2
    8246/    2C44 : 9B 2C DC BE         	DW	RDSF,   REGAF
    8247/    2C48 : 01                  	DB	1
    8248/    2C49 :                     
    8249/    2C49 : A0 2C EC BE         	DW	RDSIX,  REGIX
    8250/    2C4D : 02                  	DB	2
    8251/    2C4E : A5 2C EE BE         	DW	RDSIY,  REGIY
    8252/    2C52 : 02                  	DB	2
    8253/    2C53 :                     
    8254/    2C53 : AA 2C E5 BE         	DW	RDSAX,  REGAFX+1
    8255/    2C57 : 01                  	DB	1
    8256/    2C58 : B0 2C E6 BE         	DW	RDSBCX, REGBCX
    8257/    2C5C : 02                  	DB	2
    8258/    2C5D : B6 2C E8 BE         	DW	RDSDEX, REGDEX
    8259/    2C61 : 02                  	DB	2
    8260/    2C62 : BC 2C EA BE         	DW	RDSHLX, REGHLX
    8261/    2C66 : 02                  	DB	2
    8262/    2C67 : C2 2C E4 BE         	DW	RDSFX,  REGAFX
    8263/    2C6B : 01                  	DB	1
    8264/    2C6C :                     
    8265/    2C6C : C7 2C F0 BE         	DW	RDSSP,  REGSP
    8266/    2C70 : 02                  	DB	2
    8267/    2C71 : CC 2C F2 BE         	DW	RDSPC,  REGPC
    8268/    2C75 : 02                  	DB	2
    8269/    2C76 : D1 2C F4 BE         	DW	RDSI,   REGI
    8270/    2C7A : 01                  	DB	1
    8271/    2C7B : D5 2C F5 BE         	DW	RDSR,   REGR
    8272/    2C7F : 01                  	DB	1
    8273/    2C80 :                     
    8274/    2C80 : 00 00 00 00         	DW	0000H,  0000H
    8275/    2C84 : 00                  	DB	0
    8276/    2C85 :                     
    8277/    2C85 : 41 20 3D 00         RDSA:	DB	"A =",00H
    8278/    2C89 : 20 42 43 20 3D 00   RDSBC:	DB	" BC =",00H
    8279/    2C8F : 20 44 45 20 3D 00   RDSDE:	DB	" DE =",00H
    8280/    2C95 : 20 48 4C 20 3D 00   RDSHL:	DB	" HL =",00H
    8281/    2C9B :                     
    8282/    2C9B : 20 46 20 3D 00      RDSF:	DB	" F =",00H
    8283/    2CA0 :                     
    8284/    2CA0 : =2CH                 RDSF_H	equ	RDSF >> 8
    8285/    2CA0 : =9BH                 RDSF_L	equ	RDSF & 0FFh
    8286/    2CA0 :                     
    8287/    2CA0 :                     
    8288/    2CA0 : 20 49 58 3D 00      RDSIX:	DB	" IX=",00H
    8289/    2CA5 : 20 49 59 3D 00      RDSIY:	DB	" IY=",00H
    8290/    2CAA : 0D 0A 41 27 3D 00   RDSAX:	DB	CR,LF,"A'=",00H
    8291/    2CB0 : 20 42 43 27 3D 00   RDSBCX:	DB	" BC'=",00H
    8292/    2CB6 : 20 44 45 27 3D 00   RDSDEX:	DB	" DE'=",00H
    8293/    2CBC : 20 48 4C 27 3D 00   RDSHLX:	DB	" HL'=",00H
    8294/    2CC2 :                     
    8295/    2CC2 : 20 46 27 3D 00      RDSFX:	DB	" F'=",00H
    8296/    2CC7 :                     
    8297/    2CC7 : =2CH                 RDSFX_H	equ	RDSFX >> 8
    8298/    2CC7 : =0C2H                RDSFX_L	equ	RDSFX & 0FFh
    8299/    2CC7 :                     
    8300/    2CC7 : 20 53 50 3D 00      RDSSP:	DB	" SP=",00H
    8301/    2CCC : 20 50 43 3D 00      RDSPC:	DB	" PC=",00H
    8302/    2CD1 : 20 49 3D 00         RDSI:	DB	" I=",00H
    8303/    2CD5 : 20 52 3D 00         RDSR:	DB	" R=",00H
    8304/    2CD9 :                     
    8305/    2CD9 :                     RNTAB:
    8306/    2CD9 : 41 0F               	DB	'A',0FH		; "A?"
    8307/    2CDB : 23 2D 00 00         	DW	RNTABA,0
    8308/    2CDF : 42 0F               	DB	'B',0FH		; "B?"
    8309/    2CE1 : 31 2D 00 00         	DW	RNTABB,0
    8310/    2CE5 : 43 0F               	DB	'C',0FH		; "C?"
    8311/    2CE7 : 53 2D 00 00         	DW	RNTABC,0
    8312/    2CEB : 44 0F               	DB	'D',0FH		; "D?"
    8313/    2CED : 61 2D 00 00         	DW	RNTABD,0
    8314/    2CF1 : 45 0F               	DB	'E',0FH		; "E?"
    8315/    2CF3 : 83 2D 00 00         	DW	RNTABE,0
    8316/    2CF7 : 46 0F               	DB	'F',0FH		; "F?"
    8317/    2CF9 : 91 2D 00 00         	DW	RNTABF,0
    8318/    2CFD : 48 0F               	DB	'H',0FH		; "H?"
    8319/    2CFF : 9F 2D 00 00         	DW	RNTABH,0
    8320/    2D03 : 49 0F               	DB	'I',0FH		; "I?"
    8321/    2D05 : CF 2D 00 00         	DW	RNTABI,0
    8322/    2D09 : 4C 0F               	DB	'L',0FH		; "L?"
    8323/    2D0B : C1 2D 00 00         	DW	RNTABL,0
    8324/    2D0F : 50 0F               	DB	'P',0FH		; "P?"
    8325/    2D11 : E3 2D 00 00         	DW	RNTABP,0
    8326/    2D15 : 52 01               	DB	'R',1		; "R"
    8327/    2D17 : F5 BE 3E 2E         	DW	REGR,RNR
    8328/    2D1B : 53 0F               	DB	'S',0FH		; "S?"
    8329/    2D1D : EB 2D 00 00         	DW	RNTABS,0
    8330/    2D21 :                     
    8331/    2D21 : 00 00               	DB	00H,0		; End mark
    8332/    2D23 :                     
    8333/    2D23 :                     RNTABA:
    8334/    2D23 : 00 01               	DB	00H,1		; "A"
    8335/    2D25 : DD BE F3 2D         	DW	REGAF+1,RNA
    8336/    2D29 : 27 01               	DB	27H,1		; "A'"
    8337/    2D2B :                     ;;	DB	'\'',1		; "A'"
    8338/    2D2B : E5 BE 0C 2E         	DW	REGAFX+1,RNAX
    8339/    2D2F :                     
    8340/    2D2F : 00 00               	DB	00H,0
    8341/    2D31 :                     	
    8342/    2D31 :                     RNTABB:
    8343/    2D31 : 00 01               	DB	00H,1		; "B"
    8344/    2D33 : DF BE F8 2D         	DW	REGBC+1,RNB
    8345/    2D37 : 27 01               	DB	27H,1		; "B'"
    8346/    2D39 :                     ;;	DB	'\'',1		; "B'"
    8347/    2D39 : E7 BE 13 2E         	DW	REGBCX+1,RNBX
    8348/    2D3D : 43 0F               	DB	'C',0FH		; "BC?"
    8349/    2D3F : 45 2D 00 00         	DW	RNTABBC,0
    8350/    2D43 :                     
    8351/    2D43 : 00 00               	DB	00H,0		; End mark
    8352/    2D45 :                     
    8353/    2D45 :                     RNTABBC:
    8354/    2D45 : 00 02               	DB	00H,2		; "BC"
    8355/    2D47 : DE BE F5 2D         	DW	REGBC,RNBC
    8356/    2D4B : 27 02               	DB	27H,2		; "BC'"
    8357/    2D4D :                     ;;	DB	'\'',2		; "BC'"
    8358/    2D4D : E6 BE 0F 2E         	DW	REGBCX,RNBCX
    8359/    2D51 :                     
    8360/    2D51 : 00 00               	DB	00H,0
    8361/    2D53 :                     	
    8362/    2D53 :                     RNTABC:
    8363/    2D53 : 00 01               	DB	00H,1		; "C"
    8364/    2D55 : DE BE FA 2D         	DW	REGBC,RNC
    8365/    2D59 : 27 01               	DB	27H,1		; "C'"
    8366/    2D5B :                     ;;	DB	'\'',1		; "C'"
    8367/    2D5B : E6 BE 16 2E         	DW	REGBCX,RNCX
    8368/    2D5F :                     
    8369/    2D5F : 00 00               	DB	00H,0
    8370/    2D61 :                     	
    8371/    2D61 :                     RNTABD:
    8372/    2D61 : 00 01               	DB	00H,1		; "D"
    8373/    2D63 : E1 BE FF 2D         	DW	REGDE+1,RND
    8374/    2D67 : 27 01               	DB	27H,1		; "D'"
    8375/    2D69 :                     ;;	DB	'\'',1		; "D'"
    8376/    2D69 : E9 BE 1D 2E         	DW	REGDEX+1,RNDX
    8377/    2D6D : 45 0F               	DB	'E',0FH		; "DE?"
    8378/    2D6F : 75 2D 00 00         	DW	RNTABDE,0
    8379/    2D73 :                     
    8380/    2D73 : 00 00               	DB	00H,0
    8381/    2D75 :                     
    8382/    2D75 :                     RNTABDE:
    8383/    2D75 : 00 02               	DB	00H,2		; "DE"
    8384/    2D77 : E0 BE FC 2D         	DW	REGDE,RNDE
    8385/    2D7B : 27 02               	DB	27H,2		; "DE'"
    8386/    2D7D :                     ;;	DB	'\'',2		; "DE'"
    8387/    2D7D : E8 BE 19 2E         	DW	REGDEX,RNDEX
    8388/    2D81 :                     
    8389/    2D81 : 00 00               	DB	00H,0
    8390/    2D83 :                     	
    8391/    2D83 :                     RNTABE:
    8392/    2D83 : 00 01               	DB	00H,1		; "E"
    8393/    2D85 : E0 BE 01 2E         	DW	REGDE,RNE
    8394/    2D89 : 27 01               	DB	27H,1		; "E'"
    8395/    2D8B :                     ;;	DB	'\'',1		; "E'"
    8396/    2D8B : E8 BE 20 2E         	DW	REGDEX,RNEX
    8397/    2D8F :                     
    8398/    2D8F : 00 00               	DB	00H,0
    8399/    2D91 :                     	
    8400/    2D91 :                     RNTABF:
    8401/    2D91 : 00 01               	DB	00H,1		; "F"
    8402/    2D93 : DC BE 0A 2E         	DW	REGAF,RNF
    8403/    2D97 : 27 01               	DB	27H,1		; "F'"
    8404/    2D99 :                     ;;	DB	'\'',1		; "F'"
    8405/    2D99 : E4 BE 2D 2E         	DW	REGAFX,RNFX
    8406/    2D9D :                     
    8407/    2D9D : 00 00               	DB	00H,0
    8408/    2D9F :                     	
    8409/    2D9F :                     RNTABH:
    8410/    2D9F : 00 01               	DB	00H,1		; "H"
    8411/    2DA1 : E3 BE 06 2E         	DW	REGHL+1,RNH
    8412/    2DA5 : 27 01               	DB	27H,1		; "H'"
    8413/    2DA7 :                     ;;	DB	'\'',1		; "H'"
    8414/    2DA7 : EB BE 27 2E         	DW	REGHLX+1,RNHX
    8415/    2DAB : 4C 0F               	DB	'L',0FH		; "HL?"
    8416/    2DAD : B3 2D 00 00         	DW	RNTABHL,0
    8417/    2DB1 :                     
    8418/    2DB1 : 00 00               	DB	00H,0
    8419/    2DB3 :                     
    8420/    2DB3 :                     RNTABHL:
    8421/    2DB3 : 00 02               	DB	00H,2		; "HL"
    8422/    2DB5 : E2 BE 03 2E         	DW	REGHL,RNHL
    8423/    2DB9 : 27 02               	DB	27H,2		; "HL'"
    8424/    2DBB :                     ;;	DB	'\'',2		; "HL'"
    8425/    2DBB : EA BE 23 2E         	DW	REGHLX,RNHLX
    8426/    2DBF :                     
    8427/    2DBF : 00 00               	DB	00H,0
    8428/    2DC1 :                     	
    8429/    2DC1 :                     RNTABL:
    8430/    2DC1 : 00 01               	DB	00H,1		; "L"
    8431/    2DC3 : E2 BE 08 2E         	DW	REGHL,RNL
    8432/    2DC7 : 27 01               	DB	27H,1		; "L'"
    8433/    2DC9 :                     ;;	DB	'\'',1		; "L'"
    8434/    2DC9 : EA BE 2A 2E         	DW	REGHLX,RNLX
    8435/    2DCD :                     
    8436/    2DCD : 00 00               	DB	00H,0
    8437/    2DCF :                     	
    8438/    2DCF :                     RNTABI:
    8439/    2DCF : 00 01               	DB	00H,1		; "I"
    8440/    2DD1 : F4 BE 3C 2E         	DW	REGI,RNI
    8441/    2DD5 : 58 02               	DB	'X',2		; "IX"
    8442/    2DD7 : EC BE 30 2E         	DW	REGIX,RNIX
    8443/    2DDB : 59 02               	DB	'Y',2		; "IY"
    8444/    2DDD : EE BE 33 2E         	DW	REGIY,RNIY
    8445/    2DE1 :                     	
    8446/    2DE1 : 00 00               	DB	00H,0
    8447/    2DE3 :                     
    8448/    2DE3 :                     RNTABP:
    8449/    2DE3 : 43 02               	DB	'C',2		; "PC"
    8450/    2DE5 : F2 BE 39 2E         	DW	REGPC,RNPC
    8451/    2DE9 :                     
    8452/    2DE9 : 00 00               	DB	00H,0
    8453/    2DEB :                     
    8454/    2DEB :                     RNTABS:
    8455/    2DEB : 50 02               	DB	'P',2		; "SP"
    8456/    2DED : F0 BE 36 2E         	DW	REGSP,RNSP
    8457/    2DF1 :                     
    8458/    2DF1 : 00 00               	DB	00H,0
    8459/    2DF3 :                     
    8460/    2DF3 : 41 00               RNA:	DB	"A",00H
    8461/    2DF5 : 42 43 00            RNBC:	DB	"BC",00H
    8462/    2DF8 : 42 00               RNB:	DB	"B",00H
    8463/    2DFA : 43 00               RNC:	DB	"C",00H
    8464/    2DFC : 44 45 00            RNDE:	DB	"DE",00H
    8465/    2DFF : 44 00               RND:	DB	"D",00H
    8466/    2E01 : 45 00               RNE:	DB	"E",00H
    8467/    2E03 : 48 4C 00            RNHL:	DB	"HL",00H
    8468/    2E06 : 48 00               RNH:	DB	"H",00H
    8469/    2E08 : 4C 00               RNL:	DB	"L",00H
    8470/    2E0A : 46 00               RNF:	DB	"F",00H
    8471/    2E0C : 41 27 00            RNAX:	DB	"A'",00H
    8472/    2E0F : 42 43 27 00         RNBCX:	DB	"BC'",00H
    8473/    2E13 : 42 27 00            RNBX:	DB	"B'",00H
    8474/    2E16 : 43 27 00            RNCX:	DB	"C'",00H
    8475/    2E19 : 44 45 27 00         RNDEX:	DB	"DE'",00H
    8476/    2E1D : 44 27 00            RNDX:	DB	"D'",00H
    8477/    2E20 : 45 27 00            RNEX:	DB	"E'",00H
    8478/    2E23 : 48 4C 27 00         RNHLX:	DB	"HL'",00H
    8479/    2E27 : 48 27 00            RNHX:	DB	"H'",00H
    8480/    2E2A : 4C 27 00            RNLX:	DB	"L'",00H
    8481/    2E2D : 46 27 00            RNFX:	DB	"F'",00H
    8482/    2E30 : 49 58 00            RNIX:	DB	"IX",00H
    8483/    2E33 : 49 59 00            RNIY:	DB	"IY",00H
    8484/    2E36 : 53 50 00            RNSP:	DB	"SP",00H
    8485/    2E39 : 50 43 00            RNPC:	DB	"PC",00H
    8486/    2E3C : 49 00               RNI:	DB	"I",00H
    8487/    2E3E : 52 00               RNR:	DB	"R",00H
    8488/    2E40 :                     
    8489/    2E40 :                     ;;;
    8490/    2E40 :                     ;;; Console drivers
    8491/    2E40 :                     ;;;
    8492/    2E40 :                     
    8493/    2E40 :                     ;	BUFER -> A
    8494/    2E40 :                     ;
    8495/    2E40 :                     ;	SAVE REGISTERS
    8496/    2E40 :                     CONIN: ; RXA
    8497/    2E40 : C5                  	PUSH	BC
    8498/    2E41 : D5                  	PUSH	DE
    8499/    2E42 : E5                  	PUSH	HL
    8500/    2E43 :                     ;
    8501/    2E43 :                     ;	WAIT FOR NOT EMPTY
    8502/    2E43 : 3A 44 BF            RXWAIT:	LD	A,(Rx_BCNT)
    8503/    2E46 : B7                  	or	a
    8504/    2E47 : 28 FA               	JR	Z,RXWAIT
    8505/    2E49 :                     ;
    8506/    2E49 :                     ;	READ DATA
    8507/    2E49 : F3                  	DI
    8508/    2E4A : 3A 44 BF            	LD	A,(Rx_BCNT)
    8509/    2E4D : 3D                  	DEC	A
    8510/    2E4E : 32 44 BF            	LD	(Rx_BCNT),A
    8511/    2E51 :                     
    8512/    2E51 : FE 0A               	cp	a, 10
    8513/    2E53 : 20 1E               	jr	nz, cont_rcv
    8514/    2E55 : 3A CB BF            	ld	a, (rx_xflg)
    8515/    2E58 : FE 13               	cp	XOFF
    8516/    2E5A : 20 17               	jr	nz, cont_rcv
    8517/    2E5C :                     	
    8518/    2E5C : 3E 11               	ld	a, XON
    8519/    2E5E : 32 CD BF            	ld	(rx_xreq), a	; set XON request
    8520/    2E61 : 3A CA BF            	ld	a, (tx_pend)
    8521/    2E64 : B7                  	or	a
    8522/    2E65 : 20 0C               	jr	nz, cont_rcv
    8523/    2E67 :                     
    8524/    2E67 : 3E 11               	ld	a, XON
    8525/    2E69 : 32 CB BF            	ld	(rx_xflg), a	; save XON condition
    8526/    2E6C : CD EB 2E            	call	Tx_direct
    8527/    2E6F : AF                  	xor	a
    8528/    2E70 : 32 CD BF            	ld	(rx_xreq), a	; clear XON request
    8529/    2E73 :                     
    8530/    2E73 :                     cont_rcv:
    8531/    2E73 : 3A 45 BF            	LD	A,(Rx_BRP)
    8532/    2E76 : 4F                  	LD	C,A
    8533/    2E77 : 06 00               	LD	B,00H
    8534/    2E79 : 21 47 BF            	LD	HL,Rx_BUF
    8535/    2E7C : 09                  	ADD	HL,BC
    8536/    2E7D : 56                  	LD	D,(HL)
    8537/    2E7E : 3C                  	INC	A
    8538/    2E7F : E6 3F               	AND	Rx_BFSIZ-1
    8539/    2E81 : 32 45 BF            	LD	(Rx_BRP),A
    8540/    2E84 : 7A                  	LD	A,D
    8541/    2E85 : FB                  	EI
    8542/    2E86 :                     ;
    8543/    2E86 :                     ;	RESTORE REGISTERS
    8544/    2E86 : E1                  	POP	HL
    8545/    2E87 : D1                  	POP	DE
    8546/    2E88 : C1                  	POP	BC
    8547/    2E89 : C9                  	RET
    8548/    2E8A :                     
    8549/    2E8A :                     ;
    8550/    2E8A :                     ;	CHECK RECEIVE STATUS
    8551/    2E8A :                     CONST: ; KBHIT
    8552/    2E8A : 3A 44 BF            	LD	A,(Rx_BCNT)
    8553/    2E8D : B7                  	or	a
    8554/    2E8E : C9                  	RET
    8555/    2E8F :                     
    8556/    2E8F :                     ;
    8557/    2E8F :                     ; A -> Tx buffer;
    8558/    2E8F :                     ;
    8559/    2E8F :                     CONOUT:	; TXA
    8560/    2E8F :                     
    8561/    2E8F : F5                  	push	af
    8562/    2E90 : E5                  	push	hl
    8563/    2E91 : C5                  	push	bc
    8564/    2E92 : D5                  	push	de
    8565/    2E93 :                     
    8566/    2E93 : 57                  	ld	d, a
    8567/    2E94 :                     CONOUT1:
    8568/    2E94 : 3A CC BF            	ld	a, (tx_xflg)
    8569/    2E97 : FE 13               	cp	XOFF
    8570/    2E99 : 28 F9               	jr	z, CONOUT1
    8571/    2E9B :                     
    8572/    2E9B : 3A 87 BF            	ld	a, (Tx_BCNT)
    8573/    2E9E : FE 40               	cp	Tx_BFSIZ	; check buffer full
    8574/    2EA0 : 28 F2               	jr	z, CONOUT1
    8575/    2EA2 :                     
    8576/    2EA2 :                     ; save tx data to tx buffer
    8577/    2EA2 : F3                  	di
    8578/    2EA3 : 3A 87 BF            	ld	a, (Tx_BCNT)
    8579/    2EA6 : 3C                  	inc	a
    8580/    2EA7 : 32 87 BF            	ld	(Tx_BCNT), a
    8581/    2EAA :                     
    8582/    2EAA : 21 8A BF            	ld	hl, Tx_BUF
    8583/    2EAD : 3A 89 BF            	ld	a, (Tx_BWP)
    8584/    2EB0 : 4F                  	ld	c, a
    8585/    2EB1 : 06 00               	ld	b, 0
    8586/    2EB3 : 09                  	add	hl, bc
    8587/    2EB4 : 72                  	ld	(hl), d		; save tx data
    8588/    2EB5 : 3C                  	inc	a
    8589/    2EB6 : E6 3F               	and	Tx_BFSIZ-1
    8590/    2EB8 : 32 89 BF            	ld	(Tx_BWP), a	; save write buffer pointer
    8591/    2EBB :                     
    8592/    2EBB :                     ; check tx buffer empty
    8593/    2EBB :                     
    8594/    2EBB : 3A CA BF            	ld	a, (tx_pend)
    8595/    2EBE : B7                  	or	a
    8596/    2EBF : 28 06               	JR	z, end_tx
    8597/    2EC1 : CD CD 2E            	call	get_TxDat
    8598/    2EC4 : CD EB 2E            	call	Tx_direct
    8599/    2EC7 :                     
    8600/    2EC7 :                     end_tx:
    8601/    2EC7 : FB                  	ei
    8602/    2EC8 : D1                  	pop	de
    8603/    2EC9 : C1                  	pop	bc
    8604/    2ECA : E1                  	pop	hl
    8605/    2ECB : F1                  	pop	af
    8606/    2ECC : C9                  	RET
    8607/    2ECD :                     ;
    8608/    2ECD :                     ; control Tx buffer
    8609/    2ECD :                     ;
    8610/    2ECD :                     get_TxDat:
    8611/    2ECD : 3A 87 BF            	LD	A,(Tx_BCNT)
    8612/    2ED0 : B7                  	or	a
    8613/    2ED1 : 28 16               	jr	z, tx_nodat
    8614/    2ED3 :                     
    8615/    2ED3 : 3D                  	DEC	A
    8616/    2ED4 : 32 87 BF            	LD	(Tx_BCNT),A
    8617/    2ED7 :                     
    8618/    2ED7 : 21 8A BF            	ld	hl, Tx_BUF
    8619/    2EDA : 3A 88 BF            	ld	a, (Tx_BRP)
    8620/    2EDD : 4F                  	ld	c, a
    8621/    2EDE : 06 00               	ld	b, 0
    8622/    2EE0 : 09                  	add	hl, bc
    8623/    2EE1 : 3C                  	inc	a
    8624/    2EE2 : E6 3F               	and	Tx_BFSIZ -1	; CF=0
    8625/    2EE4 : 32 88 BF            	ld	(Tx_BRP), a
    8626/    2EE7 : 7E                  	ld	a, (hl)		; get Tx data
    8627/    2EE8 : C9                  	ret
    8628/    2EE9 :                     
    8629/    2EE9 :                     tx_nodat:
    8630/    2EE9 : 37                  	scf
    8631/    2EEA : C9                  	ret
    8632/    2EEB :                     
    8633/    2EEB :                     ;---------------------
    8634/    2EEB :                     ; Tx send data direct
    8635/    2EEB :                     ;---------------------
    8636/    2EEB :                     Tx_direct:
    8637/    2EEB : F5                  	push	af
    8638/    2EEC : D5                  	push	de
    8639/    2EED :                     
    8640/    2EED : 57                  	ld	d, a
    8641/    2EEE : DB 01               TX_WT:	IN	A,(PSIOAC)
    8642/    2EF0 : E6 04               	and	TXEMPTY
    8643/    2EF2 : 28 FA               	JR	Z,TX_WT
    8644/    2EF4 :                     
    8645/    2EF4 : 7A                  	ld	a, d
    8646/    2EF5 : D3 00               	OUT	(PSIOAD), a
    8647/    2EF7 :                     
    8648/    2EF7 : AF                  	xor	a
    8649/    2EF8 : 32 CA BF            	ld	(tx_pend), a
    8650/    2EFB :                     
    8651/    2EFB : D1                  	pop	de
    8652/    2EFC : F1                  	pop	af
    8653/    2EFD : C9                  	ret
    8654/    2EFE :                     
    8655/    2EFE : FF FF               	db	BASIC_TOP - $ dup(0ffH)
    8656/    2F00 :                     ;	ORG	BASIC_TOP
    8657/    2F00 :                     
    8658/    2F00 :                     ;;;
    8659/    2F00 :                     ;;; RAM area
    8660/    2F00 :                     ;;;
    8661/    2F00 :                     
    8662/    2F00 :                     	;;
    8663/    2F00 :                     	;; Work Area
    8664/    2F00 :                     	;;
    8665/    2F00 :                     	
    8666/    BED0 :                     	ORG	WORK_B
    8667/    BED0 :                     
    8668/    BED0 : =>FALSE              	IF	BACKDOOR
    8669/    BED0 :                     stealRST08:	ds	2	; hacking RST 08H, set jump address
    8670/    BED0 :                     stealRST10:	ds	2	; hacking RST 10H, set jump address
    8671/    BED0 :                     stealRST18:	ds	2	; hacking RST 18H, set jump address
    8672/    BED0 :                     stealRST20:	ds	2	; hacking RST 20H, set jump address
    8673/    BED0 :                     stealRST28:	ds	2	; hacking RST 28H, set jump address
    8674/    BED0 :                     stealRST30:	ds	2	; hacking RST 30H, set jump address
    8675/    BED0 :                     stealRST38:	ds	2	; hacking RST 38H, set jump address
    8676/    BED0 :                     save_hl:	ds	2
    8677/    BED0 : [8668]               	ENDIF
    8678/    BED0 :                     	
    8679/    BED0 :                     DSADDR:	DS	2	; Dump start address
    8680/    BED2 :                     DEADDR:	DS	2	; Dump end address
    8681/    BED4 :                     DSTATE:	DS	1	; Dump state
    8682/    BED5 :                     GADDR:	DS	2	; Go address
    8683/    BED7 :                     SADDR:	DS	2	; Set address
    8684/    BED9 :                     HEXMOD:	DS	1	; HEX file mode
    8685/    BEDA :                     RECTYP:	DS	1	; Record type
    8686/    BEDB :                     SIZE:	DS	1	; I/O Size 00H,'W','S'
    8687/    BEDC :                     
    8688/    BEDC :                     REG_B:	
    8689/    BEDC :                     REGAF:	DS	2
    8690/    BEDE :                     REGBC:	DS	2
    8691/    BEE0 :                     REGDE:	DS	2
    8692/    BEE2 :                     REGHL:	DS	2
    8693/    BEE4 :                     REGAFX:	DS	2		; Register AF'
    8694/    BEE6 :                     REGBCX:	DS	2
    8695/    BEE8 :                     REGDEX:	DS	2
    8696/    BEEA :                     REGHLX:	DS	2		; Register HL'
    8697/    BEEC :                     REGIX:	DS	2
    8698/    BEEE :                     REGIY:	DS	2
    8699/    BEF0 :                     REGSP:	DS	2
    8700/    BEF2 :                     REGPC:	DS	2
    8701/    BEF4 :                     REGI:	DS	1
    8702/    BEF5 :                     REGR:	DS	1
    8703/    BEF6 :                     REG_E:
    8704/    BEF6 :                     
    8705/    BEF6 :                     ; break, trace point work area
    8706/    BEF6 : =0BEF6H              dbg_wtop	equ	$
    8707/    BEF6 :                     tpt1_f:		ds	1
    8708/    BEF7 :                     tpt1_op:	ds	1	; save trace point1 opcode
    8709/    BEF8 :                     tpt1_adr:	ds	2
    8710/    BEFA :                     tpt2_f:		ds	1
    8711/    BEFB :                     tpt2_op:	ds	1	; save trace point2 opcode (for branch)
    8712/    BEFC :                     tpt2_adr:	ds	2
    8713/    BEFE :                     
    8714/    BEFE :                     ; break point work area
    8715/    BEFE :                     bpt1_f:		ds	1
    8716/    BEFF :                     bpt1_op:	ds	1
    8717/    BF00 :                     bpt1_adr:	ds	2
    8718/    BF02 :                     bpt2_f:		ds	1
    8719/    BF03 :                     bpt2_op:	ds	1
    8720/    BF04 :                     bpt2_adr:	ds	2
    8721/    BF06 :                     
    8722/    BF06 :                     tmpb_f:		ds	1
    8723/    BF07 :                     tmpb_op:	ds	1
    8724/    BF08 :                     tmpb_adr:	ds	2
    8725/    BF0A : =0BF0AH              dbg_wend	equ	$
    8726/    BF0A :                     
    8727/    BF0A :                     ; DIV 16 /16 buffer
    8728/    BF0A :                     DIV16_NA:	ds	2
    8729/    BF0C :                     DIV16_NB:	ds	2
    8730/    BF0E :                     DIV16_NC:	DS	2
    8731/    BF10 :                     DIV16_ND:	DS	2
    8732/    BF12 :                     
    8733/    BF12 :                     ; go command temp start address
    8734/    BF12 :                     goTmp:		ds	2
    8735/    BF14 :                     
    8736/    BF14 :                     ; trace mode switch
    8737/    BF14 :                     TP_mode:	ds	1	; N: display on, F: display off
    8738/    BF15 :                     TM_mode:	ds	1	; 'S':skip call, 'I':trace CALL IN
    8739/    BF16 :                     TC_cnt:		ds	2	; numbers of step
    8740/    BF18 :                     tmpT:		ds	2	; save temp buffer
    8741/    BF1A :                     fever_t:	ds	1	; flag trace forever
    8742/    BF1B :                     
    8743/    BF1B :                     ; minimal assembler
    8744/    BF1B :                     
    8745/    BF1B :                     asm_adr:	ds	2
    8746/    BF1D :                     tasm_adr:	ds	2
    8747/    BF1F :                     element_cnt:	ds	1	; Element count of input string
    8748/    BF20 :                     byte_count:	ds	1	; numbers of Machine code
    8749/    BF21 :                     opc_cd:		ds	1	; opecode number
    8750/    BF22 :                     opr1_cd:	ds	1	; 1st operand number
    8751/    BF23 :                     opr2_cd:	ds	1	; 2nd operand number
    8752/    BF24 :                     opr_num25:	ds	2	; save number nnnn
    8753/    BF26 :                     opr_num35:	ds	2	; save number (nnnn)
    8754/    BF28 :                     opr_num37:	ds	1	; save number (IY-nn)
    8755/    BF29 :                     opr_num34:	ds	1	; save number (IY+nn)
    8756/    BF2A :                     opr_num36:	ds	1	; save number (IX-nn)
    8757/    BF2B :                     opr_num33:	ds	1	; save number (IX+nn)
    8758/    BF2C :                     cb_mcw		ds	2	; use BIT, RES, SET
    8759/    BF2E :                     cb_xyw		ds	2	; use BIT, RES, SET
    8760/    BF30 :                     
    8761/    BF30 :                     F_bit:		ds	F_bitSize+1
    8762/    BF39 :                     ky_flg:		ds	1	; b00000ULC ( U: UPPER L: LF C: CR )
    8763/    BF3A :                     				; U=0: Lower To Upper
    8764/    BF3A :                     				; L=0: End of line is added LF
    8765/    BF3A :                     				; C=0: End of line is added CR
    8766/    BF3A :                     ;::::::::::::::::::::::::::
    8767/    BF3A :                     ; DISASEM work area
    8768/    BF3A :                     ;;;;;;;;;;;;;;;;;;;;;;;;;;;
    8769/    BF3A :                     dasm_ed:	ds	2
    8770/    BF3C :                     dasm_stpf:	ds	1
    8771/    BF3D :                     dasm_adr:	ds	2
    8772/    BF3F :                     reg_xy:		ds	2	; RNIX or RNIY
    8773/    BF41 :                     xy_srtp		ds	2	; strings pointer
    8774/    BF43 :                     
    8775/    BF43 :                     mc_Size:	ds	1
    8776/    BF44 :                     ;
    8777/    BF44 :                     ;	RECEIVE BUFFER
    8778/    BF44 :                     Rx_BCNT:	ds	1
    8779/    BF45 :                     Rx_BRP:		ds	1
    8780/    BF46 :                     Rx_BWP:		ds	1
    8781/    BF47 :                     Rx_BUF:		ds	Rx_BFSIZ
    8782/    BF87 :                     
    8783/    BF87 :                     ;	SEND BUFFER
    8784/    BF87 :                     Tx_BCNT:	ds	1
    8785/    BF88 :                     Tx_BRP:		ds	1
    8786/    BF89 :                     Tx_BWP:		ds	1
    8787/    BF8A :                     Tx_BUF:		ds	Tx_BFSIZ
    8788/    BFCA :                     tx_pend:	ds	1
    8789/    BFCB :                     
    8790/    BFCB :                     ;	XON/XOFF flag
    8791/    BFCB :                     rx_xflg:	ds	1
    8792/    BFCC :                     tx_xflg:	ds	1
    8793/    BFCD :                     rx_xreq:	ds	1
    8794/    BFCE :                     
    8795/    BFCE :                     ;;;;;;;;;;;;;;;;;;;
    8796/    BFCE :                     ; union area
    8797/    BFCE :                     ;;;;;;;;;;;;;;;;;;;
    8798/    BFCE :                     INBUF: ; Line input buffer
    8799/    BFCE :                     line_buf:
    8800/    BFCE :                     
    8801/    BFCE :                     ;  DidAsm string buffer
    8802/    BFCE :                     ; total 42 bytes
    8803/    BFCE :                     dasm_bs:
    8804/    BFCE :                     adr_mc_buf:	ds	19
    8805/    BFE1 :                     dasm_OpcStr:	ds	8
    8806/    BFE9 :                     dasm_OprStr:	ds	15 - NUMLEN
    8807/    BFF1 :                     num_string:	ds	NUMLEN	; max 65536 or 0FFFFH + null( max 7bytes )
    8808/    BFF8 :                     dasm_be:
    8809/    BFF8 :                     
    8810/    BFF8 :                     	END
 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB04.asm - Page 2 - 1/5/2023 16:39:1


  Symbol Table (* = unused):
  --------------------------

 ACS_KN2K :                    0C1C C |  ADCSTR :                      129E C |
 ADC_3MC :                        4 - |  ADC_A_ :                      1D19 C |
 ADC_A_A :                     1D3B C |  ADC_A_N :                     1D33 C |
 ADC_A_X :                     1D30 C |  ADC_FD :                      1D57 C |
 ADC_HL_ :                     1D15 C |  ADC_HL_BC :                   1D14 C |
 ADC_HL_DE :                   1D10 C |  ADC_HL_HL :                   1D0C C |
*ADC_HL_SP :                   1D08 C |  ADC_MC :                         9 - |
 ADDIXRP_TBL :                 142F C |  ADDIYRP_TBL :                 1437 C |
 ADDSTR :                      129A C |  ADD_HL_ :                     1DB7 C |
 ADD_HL_BC :                   1DCE C |  ADD_HL_DE :                   1DD3 C |
 ADD_HL_HL :                   1DD8 C | *ADD_HL_SP :                   1DC9 C |
 ADD_IX_ :                     1D7D C |  ADD_IX_IX :                   1DA5 C |
*ADD_IY_ :                     1D79 C |  ADD_IY_IY :                   1DAF C |
 ADD_OPSTR :                   1154 C |  ADD_RP_E :                    11FF C |
 ADD_RP_S :                    11FB C |  ADD_XY_BC :                   1D9D C |
 ADD_XY_DE :                   1DA1 C | *ADD_XY_SP :                   1D96 C |
 ADD_XY_XY :                   1DAB C |  ADR_MC_BUF :                 0BFCE C |
 ADR_OVR :                     25DA C |  ANALIZE_INPUT :               246A C |
 ANALIZE_OPR :                 24AC C |  ANDSTR :                      12AA C |
 AND_CP :                      22E3 C |  AN_ERR :                      24A1 C |
 APENDTBL :                     25E C |  API01 :                       27A8 C |
 API06 :                       27EA C |  APITBL :                      277C C |
 APITBL_E :                    27A8 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 ASM_ADR :                    0BF1B C |  ASM_ERR :                     1A92 C |
*ASM_ERR1 :                    1A95 C |  A_COLON_SP :                  11A7 C |
 A_CRLF :                      1172 C |  BACKDOOR :                       0 - |
 BACKTOMON :                   28AF C |  BASE1 :                       22C4 C |
 BASIC_CST :                   2F00 - |  BASIC_TOP :                   2F00 - |
 BASIC_WST :                   2F03 - |  BITSTR :                      131D C |
 BIT_IXM :                     1C15 C |  BIT_IXP :                     1C03 C |
 BIT_IXP1 :                    1C06 C |  BIT_IYM :                     1C22 C |
 BIT_IYP :                     1C1A C |  BIT_IYP1 :                    1C1D C |
 BIT_MCB :                     1B9E C |  BIT_MCBE :                    1BA6 C |
 BIT_MCBN :                       8 - |  BIT_RES_SET :                 1BBA C |
 BIT_XYT :                     1BA6 C |  BI_HEX :                      2586 C |
 BPT1_ADR :                   0BF00 C |  BPT1_F :                     0BEFE C |
 BPT1_OP :                    0BEFF C |  BPT2_ADR :                   0BF04 C |
 BPT2_F :                     0BF02 C |  BPT2_OP :                    0BF03 C |
 BP_CHK1 :                     284D C |  BP_CHK_END :                  287A C |
 BP_CLR :                       3C4 C |  BP_CLR1 :                      3DA C |
 BP_LOT :                       3EB C |  BP_MSG1 :                      401 C |
 BP_MSG2 :                      405 C |  BRK_CMD :                      36D C |
 BS :                             8 - |  BUFLEN :                        28 - |
 BYTE_COUNT :                 0BF20 C |  B_ACLR :                       3DF C |
 B_LIST :                       34D C |  B_LIST1 :                      35B C |
 B_MSG_OUT :                    408 C |  CALC_DIS_STEP :                92F C |
 CALC_RELADR :                 25B3 C |  CALLSTR :                     1289 C |
 CALL_MC1T :                   1C27 C |  CAL_01 :                      25C9 C |
 CAL_1 :                       25CC C | *CASESENSITIVE :                  0 - |
 CB_MCW :                     0BF2C C |  CB_XYW :                     0BF2E C |
 CC0 :                         1399 C |  CC1 :                         139C C |
 CC2 :                         139E C |  CC3 :                         13A1 C |
 CC4 :                         13A3 C |  CC5 :                         13A6 C |
 CC6 :                         13A9 C |  CC7 :                         13AB C |
 CCFSTR :                      12F2 C |  CC_NNNN :                     0CFD C |
 CC_OPR :                      13BD C |  CHKERR :                       3C2 C |
 CHK_0CBH :                    0D1A C |  CHK_0DD3OP :                  0E67 C |
 CHK_0DD4OP :                  0EE6 C |  CHK_0DDH :                    0DE0 C |
 CHK_0DDH_1 :                  0DF3 C |  CHK_0EDH :                    0F86 C |
 CHK_0FDH :                    1083 C |  CHK_1MC_BNH :                 0B79 C |
 CHK_2MC :                     0BC6 C |  CHK_3MC :                     0C76 C |
 CHK_ADC :                     0A3F C |  CHK_ADC3MC :                  1D3E C |
 CHK_ADD :                     0A33 C |  CHK_ADD_RP :                  0AF8 C |
 CHK_AND :                     0A69 C |  CHK_BP :                      283E C |
 CHK_CALCC :                   0D0B C |  CHK_CALLN4 :                  0CE4 C |
 CHK_CP :                      0A8D C |  CHK_DD_CB :                   0F32 C |
 CHK_DEC :                     0AB2 C |  CHK_DEC_RP :                  0ADF C |
 CHK_DI1 :                      8D7 C |  CHK_DJNZ :                    0C41 C |
 CHK_EX :                      0B48 C |  CHK_FEVRE :                    516 C |
 CHK_INC :                     0A9A C |  CHK_INC_RP :                  0AC6 C |
 CHK_JPCC :                    0CF0 C |  CHK_JPN4 :                    0CD8 C |
 CHK_JRCC :                    0C5A C |  CHK_JRNN :                    0C4A C |
 CHK_LD :                       9C4 C |  CHK_LD1 :                     0A02 C |
 CHK_LD16 :                    0C97 C |  CHK_LOGOP2 :                  0BED C |
 CHK_NTRACE :                  2892 C |  CHK_OR :                      0A81 C |
 CHK_POP_RP :                  0B16 C |  CHK_PUSH_RP :                 0B2F C |
 CHK_RET :                     0B8C C |  CHK_RST :                     0BA5 C |
 CHK_SBC :                     0A5A C |  CHK_STPDI :                    8F6 C |
 CHK_STRINGS :                 250D C |  CHK_SUB :                     0A4E C |
 CHK_XOR :                     0A75 C |  CK_ENDMK :                    2573 C |
 CLCC_TBLE :                    6E6 C |  CLCC_TBLS :                    6DE C |
 CLR_CRT :                     2676 C |  CLR_PEND :                      6B C |
 CLR_TXINTPENDING :              74 C |  CMD_HLP :                     29DF C |
 COMMAND_HLP :                  211 C | *COMPMODE :                       0 - |
 COM_ERRM :                    138C C |  CONIN :                       2E40 C |
 CONOUT :                      2E8F C |  CONOUT1 :                     2E94 C |
 CONST :                       2E8A C | *CONSTPI :        3.141592653589793 - |
 CONT_ASM :                    1B10 C |  CONT_RCV :                    2E73 C |
 COUT_SP :                     1AA3 C |  COUT_SP1 :                    1AB9 C |
 COUT_SP2 :                    1AD5 C |  CPDRSTR :                     136F C |
 CPDSTR :                      1349 C |  CPIRSTR :                     135B C |
 CPISTR :                      1338 C |  CPLSTR :                      12EA C |
 CPSTR :                       12B5 C |  CPSTREND :                    21C1 C |
 CPSTR_CRLF :                  1180 C |  CP_IXIY :                     2314 C |
 CP_IY :                       231C C |  CP_XY1 :                      2321 C |
 CR :                            0D - |  CRLF :                        266C C |
 CSTART :                       109 C |  CTL_RCV :                       8D C |
 CTL_RCV1 :                     0B4 C |  CTL_TXFLG :                     88 C |
 D16_END :                     2978 C |  D16_MINUS :                   2970 C |
 D16_MINUS_AFTER :             2974 C |  D16_MINUS_BEFORE :            296F C |
 D16_PLUS :                    2964 C |  D16_PLUS_AFTER :              2968 C |
 DAASTR :                      12E6 C |  DASM_ADR :                   0BF3D C |
 DASM_BE :                    0BFF8 C |  DASM_BS :                    0BFCE C |
 DASM_ED :                    0BF3A C |  DASM_OPCSTR :                0BFE1 C |
 DASM_OPRSTR :                0BFE9 C |  DASM_STPF :                  0BF3C C |
*DATE :                  "1/5/2023" - |  DBG_WEND :                   0BF0A - |
*DBG_WTOP :                   0BEF6 - |  DDLOGTBL :                    143F C |
 DD_21 :                       0F0C C |  DD_22 :                       0F19 C |
 DD_2A :                       0F22 C |  DD_2A1 :                      0F26 C |
 DD_2NDTBL :                    7A1 C |  DD_2NDTBL1 :                   7A5 C |
 DD_2NDTBL2 :                   7A9 C |  DD_2NDTBL_E :                  7AB C |
 DD_2OPT :                     1427 C |  DD_BIT :                      0F76 C |
 DD_BIT_OPTBL :                1223 C |  DD_BIT_OPTBLE :               123B C |
 DD_BSR :                      0F6D C |  DD_CB_NN_XX :                 0F52 C |
 DD_LD :                       0EA6 C |  DD_LD1 :                      0EBE C |
 DD_LDTBL :                    144D C |  DD_LD_TBL :                   1207 C |
 DD_LD_TBLE :                  1215 C |  DD_LOG_TBL :                  1215 C |
 DD_LOG_TBLE :                 121C C |  DD_MIX :                      0ED1 C |
 DD_MIX1 :                     0EDC C |  DD_MIX2 :                     0EE1 C |
 DD_MIX3 :                     0ED4 C |  DD_MIX4 :                     0ECA C |
 DD_RES :                      0F7E C |  DD_RT_STR :                   1485 C |
 DD_RT_TBLE :                  1223 C |  DD_RT_TBLES :                 121C C |
 DEADDR :                     0BED2 C |  DECSTR :                      12BC C |
 DEC_CHR :                     2598 C |  DEC_NUM :                     25B1 C |
 DEC_OPCDTBLE :                11F3 C |  DEC_OPCDTBLS :                11EB C |
 DEC_OPR :                     233F C |  DEC_RP_E :                    11FB C |
 DEC_RP_S :                    11F7 C |  DEC_STR :                     2921 C |
 DEL :                           7F - |  DEX_SP_HL :                   0B71 C |
 DIP_TM :                       459 C |  DISASM_GO :                    904 C |
 DISASSEMBLE :                  8B4 C |  DISREGTBL :                   13AD C |
 DISTR :                       12F6 C |  DIS_ANALYSIS :                 993 C |
 DIS_CALL :                    28EC C |  DIS_GO1 :                      90F C |
*DIV16 :                       297B C |  DIV16_8 :                     2957 C |
 DIV16_NA :                   0BF0A C |  DIV16_NB :                   0BF0C C |
 DIV16_NC :                   0BF0E C |  DIV16_ND :                   0BF10 C |
 DIV16_X0 :                    29B8 C |  DIV16_X1 :                    29C3 C |
 DIV16_X2 :                    2991 C |  DIXN_TBL :                    233B C |
 DIX_TBL :                     2339 C |  DIYN_TBL :                    233D C |
 DI_3MC :                      2393 C |  DI_3MC1 :                     2399 C |
 DI_IXNNUM :                      4 - |  DI_IXYNUM :                      6 - |
 DI_IY :                       238F C |  DI_IYNNUM :                      2 - |
 DI_NBS :                        12 - |  DI_NXT :                       8BD C |
 DJNZSTR :                     1284 C |  DJPHL :                        5E8 C |
 DMKST1 :                      1168 C |  DMKST2 :                      116A C |
 DMKSTR0 :                     115E C |  DMP_DB :                      1AE6 C |
 DMP_DW :                      1AF1 C |  DM_BIT :                        80 - |
 DONOT_TRACE :                 14F6 C |  DP0 :                          7C0 C |
 DP00 :                         7D0 C |  DP1 :                          7E5 C |
 DPB :                          868 C |  DPB0 :                         87F C |
 DPB1 :                         88E C |  DPB2 :                         893 C |
 DPL :                          82E C |  DPL0 :                         83F C |
 DPL1 :                         84F C |  DPL2 :                         85E C |
 DPL3 :                         863 C |  DPM :                          801 C |
 DPM0 :                         80C C |  DPM1 :                         828 C |
 DPM_C :                        7FB C |  DSADDR :                     0BED0 C |
 DSAP :                        2C12 C |  DSEP0 :                       2C0B C |
 DSEP1 :                       2C0E C |  DSTATE :                     0BED4 C |
 DUMP :                         7AB C |  D_I_TB :                      232D C |
 D_I_TBE :                     233F C |  E1S :                           0E - |
 E1S1 :                          15 - |  E1_E :                        20B3 C |
 E1_E1 :                       20D6 C |  E1_S :                        20A5 C |
 E1_S1 :                       20C1 C |  E2S :                           1A - |
 E2_E :                        2141 C |  E2_S :                        2127 C |
 ED_4MC :                      1064 C |  ED_ADC :                      1012 C |
 ED_IM :                       1043 C |  ED_LD_AI :                    102C C |
 ED_LD_AR :                    1023 C |  ED_LD_IA :                    103E C |
 ED_LD_RA :                    1035 C |  ED_LD_RA1 :                   1038 C |
 ED_NOOPR :                    145B C |  ED_NO_OPR :                   1056 C |
 ED_OP_TBL :                   123B C |  ED_OP_TBLE :                  1273 C |
 ED_OUT :                      0FE1 C |  ED_OUT1 :                     0FF5 C |
 ED_RP_STR :                   141B C |  ED_SBC :                      0FFC C |
 ED_SBC1 :                     100B C |  EISTR :                       12F9 C |
 EL2_12 :                      2400 C |  EL2_13 :                      23F6 C |
 EL2_130 :                     2416 C |  EL2_16 :                      23FB C |
 EL2_17 :                      23F1 C |  EL2_18 :                      23EC C |
 EL2_19 :                      23E7 C |  EL2_20 :                      23E2 C |
 EL2_23 :                      2368 C |  EL2_24 :                      22E1 C |
 EL2_26 :                      2363 C |  EL2_27 :                      22DD C |
 EL2_28 :                      22D9 C |  EL2_29 :                      22D5 C |
 EL2_41 :                      22D1 C |  EL2_410 :                     2302 C |
 EL2_411 :                     230F C |  EL2_42 :                      2297 C |
 EL2_43 :                      2236 C |  EL2_44 :                      221B C |
 EL2_441 :                     222C C |  EL2_45 :                      2200 C |
 EL2_451 :                     220A C |  EL2_46 :                      2273 C |
 EL2_49 :                      2249 C |  EL2_54 :                      2448 C |
 EL2_541 :                     2463 C |  EL2_5411 :                    2464 C |
 EL2_68 :                      21D7 C |  EL2_69 :                      219E C |
 EL2_691 :                     21C5 C |  EL2_692 :                     21B3 C |
 EL2_70 :                      2189 C |  EL2_8 :                       23AE C |
 EL2_81 :                      23B0 C |  EL2_82 :                      23D4 C |
 EL2_9 :                       23AA C |  EL2_DI :                      236B C |
 EL3_1 :                       1E67 C |  EL3_11 :                      1F05 C |
 EL3_12 :                      1E8F C |  EL3_121 :                     1F95 C |
 EL3_125 :                     1E93 C |  EL3_126 :                     1EA9 C |
 EL3_13 :                      1FC6 C |  EL3_14 :                      1FD4 C |
 EL3_1_2 :                     1F80 C |  EL3_21 :                      1D5B C |
 EL3_211 :                     1D7F C |  EL3_212 :                     1D98 C |
 EL3_22 :                      1CE2 C |  EL3_221 :                     1CE8 C |
 EL3_25 :                      1CDA C |  EL3_34 :                      1BAE C |
 EL3_341 :                     1BFF C |  EL3_342 :                     1C09 C |
 EL3_35 :                      1B72 C |  EL3_36 :                      1B90 C |
 EL3_42 :                      1C3C C |  EL3_421 :                     1C3F C |
 EL3_43 :                      1CA5 C |  EL3_431 :                     1CC6 C |
 EL3_45 :                      1C2F C |  EL3_55 :                      1C65 C |
 EL3_550 :                     1C70 C |  EL3_551 :                     1C8E C |
 EL3_552 :                     1C91 C |  EL3_6 :                       1DDD C |
 EL3_60 :                      1C5C C |  EL3_61 :                      1E20 C |
 EL3_JTB :                     1B48 C |  EL3_S13 :                     20A0 C |
 EL3_S16 :                     2054 C |  EL3_S161 :                    2078 C |
 EL3_S162 :                    207C C |  EL3_S163 :                    2080 C |
 EL3_S1631 :                   2082 C |  EL3_S164 :                    2089 C |
 EL3_S17 :                     209B C |  EL3_S26 :                     2096 C |
 EL3_S261 :                    2098 C |  EL3_S27 :                     2092 C |
 EL3_S28 :                     2025 C |  EL3_S281 :                    2045 C |
 EL3_S282 :                    2041 C |  EL3_S283 :                    203E C |
 EL3_S35 :                     1FF0 C |  EL3_S351 :                    2010 C |
 EL3_S352 :                    201C C |  EL3_S353 :                    2016 C |
 EL3_STB :                     1B3B C |  EL3_STBE :                    1B48 C |
 EL3_UM :                        0D - |  ELEM1_CD :                    20A5 C |
 ELEM1_CD1 :                   20C1 C |  ELEM1_OPCD :                  20B3 C |
 ELEM1_OPCD1 :                 20D6 C |  ELEM2_CD :                    2127 C |
 ELEMENT_CNT :                0BF1F C |  END_DEC :                     2950 C |
 END_INS_TC :                   64E C |  END_TX :                      2EC7 C |
 ENTRY :                         40 - |  ENT_EL2 :                     2141 C |
 ERR :                          209 C |  ERRMSG :                      2C03 C |
 ERR_TRACE_SEQ :                651 C |  ER_OPMSG :                    138C C |
 ESC :                           1B - |  ESC_CRT_CLR :                 267F C |
 EXP_MSB :                      670 C |  EXSTR :                       12C9 C |
 EXT_ASM :                     1A81 C |  EXXSTR :                      12CC C |
 EX_AF_ :                      1E0E C |  EX_AF_AF :                    0B63 C |
 EX_DE_ :                      1E18 C |  EX_SP_HL :                    1E0B C |
 EX_SP_IX :                    1E05 C |  EX_SR_ :                      1E43 C |
 EX_SR_NUM :                      4 - | *E_CSTART :                       0 C |
*FALSE :                          0 - |  FEVER_T :                    0BF1A C |
 FLG_LOOP :                    1861 C |  FLG_NXT :                     1870 C |
 FLG_OFF :                     186C C | *FULLPMMU :                       1 - |
 F_BIT :                      0BF30 C |  F_BITSIZE :                      8 - |
 F_BIT_OFF :                   188C C |  F_BIT_ON :                    1884 C |
 G0 :                          14D6 C |  GADDR :                      0BED5 C |
 GAME80_CST :                  5400 - | *GAME80_TOP :                  5400 - |
*GAME80_WST :                  5403 - |  GETLIN :                      2683 C |
 GET_BI :                       32A C |  GET_DI1 :                      8D1 C |
 GET_DISASM_ST :                93D C |  GET_DNUM :                     300 C |
 GET_N4 :                      0CBF C |  GET_N4CRLF :                  0C91 C |
 GET_NNNN :                    10C2 C |  GET_NUM :                      308 C |
 GET_NUM0 :                     30B C |  GET_NUMBER :                  2556 C |
 GET_RSTG_OFF :                10D6 C |  GET_R_NUM :                    9BB C |
 GET_STRBUFPOINT :             10D9 C |  GET_TXDAT :                   2ECD C |
 GL0 :                         2688 C |  GL00 :                        268E C |
 GL001 :                       26AF C |  GL1 :                         26D4 C |
 GLB :                         26D8 C |  GLE :                         26EF C |
 GLE_END :                     25FE C |  GLE_END1 :                    25FC C |
 GO :                          1493 C |  GO1 :                         14D0 C |
 GOSTMP :                      14A7 C |  GOTMP :                      0BF12 C |
 G_STPADR :                    14B1 C |  H2SA_1 :                      112E C |
 H2S_N1 :                      1144 C |  H2S_N2 :                      1148 C |
 H4SA_1 :                      111D C |  H4SA_2 :                      1120 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HEX2STR :                     113B C |
 HEX2STR_ASM :                 1125 C |  HEX4STR :                     1133 C |
 HEX4STR_ASM :                 1114 C |  HEXIN :                       2648 C |
 HEXMOD :                     0BED9 C |  HEXOUT1 :                     263A C |
 HEXOUT2 :                     2631 C |  HEXOUT4 :                     262C C |
 HEX_CHR :                     25A2 C |  HI0 :                         2650 C |
 HI1 :                         2667 C |  HIR :                         266A C |
 HLTSTR :                      1295 C |  HL_CRLF :                     117D C |
 IB1 :                          681 C |  IB2 :                          680 C |
 IB3 :                          67F C |  ICKA1 :                        6BA C |
 ICKA_END :                     6C5 C |  IGNORE :                        50 C |
 IHEMSG :                      2BE9 C |  IHEXER :                      2C15 C |
 IKK_1 :                       11C0 C |  IMSTR :                       1329 C |
 INADR_CHK_AND_WRT :            69F C |  INBUF :                      0BFCE C |
 INCSTR :                      12B8 C |  INC_DEC :                     0AAC C |
 INC_DEC_ADDRP :               13D5 C |  INC_ELEMENT :                 24A4 C |
 INC_OPCDTBLE :                11EB C |  INC_OPCDTBLS :                11E3 C |
 INC_OPR :                     2351 C |  INC_RP_E :                    11F7 C |
 INC_RP_S :                    11F3 C |  INDRSTR :                     1374 C |
 INDSTR :                      134D C |  INIRSTR :                     1360 C |
 INISTR :                      133C C |  INIT_RAM :                     0E4 C |
 INS2 :                         6EE C |  INSBRK_1OP :                   672 C |
 INSBRK_2OP :                   677 C |  INSBRK_3OP :                   67C C |
 INSBRK_BRP :                   686 C |  INSBRK_SP :                    692 C |
 INSPOSTSTR :                  1183 C |  INSTC1 :                       5A2 C |
*INSTC2 :                       530 C |  INSTR :                       1300 C |
*INSUPMODE :                      0 - |  INS_EX_OPC :                  0B5D C |
 INS_HLKK :                    0CC9 C |  INS_HL_OPR :                  0B5A C |
 INS_IXRP :                    0E52 C |  INS_JPIX :                    0E28 C |
*INS_JPIX1 :                   0E2C C |  INS_KAKKOL :                  11BA C |
 INS_KAKKOR :                  11BE C |  INS_KKA :                     0CB3 C |
 INS_KKHL :                    0CAD C |  INS_KMR :                     11CF C |
 INS_KN2K :                    0C25 C |  INS_KN4KCS :                  10EE C |
 INS_KSPKIX :                  0E3A C |  INS_MISR :                    11CB C |
 INS_N2CRLF :                  0C12 C |  INS_PLSR :                    11C7 C |
 INS_RSTG :                    0DC5 C |  INS_SPCR :                    11C3 C |
 INS_SPIX :                    0E49 C |  INTEXT :                       0C5 C |
 INTRXD :                        7A C |  INTTXD :                        53 C |
 INTTX_NXT :                     64 C |  IN_A_NN :                     1C94 C |
 IN_SELM :                        6 - |  IN_SELT :                     1E24 C |
 IR0 :                          135 C |  IR00 :                         14C C |
 ITABLE :                        40 C |  IX_CRLF :                     1177 C |
 JPCC_TBLE :                    6DE C |  JPCC_TBLS :                    6D6 C |
 JPHL :                        22BB C |  JPIX :                        22B4 C |
 JPNNNN :                      22BF C |  JPSTR :                       127E C |
 JP_EACH :                     1B34 C |  JP_MC1T :                     1C34 C |
 JP_MC1TE :                    1C3C C |  JP_MC1TM :                       8 - |
 JRCC_OPR1 :                   13CD C |  JRCC_TBLE :                    6D6 C |
 JRCC_TBLS :                    6D1 C |  JRCC_TBLS1 :                   6D2 C |
 JRSTR :                       1281 C |  JR_CCT :                      1CA1 C |
 JR_N4CRLF :                   0C51 C |  KCKSTR :                      1390 C |
 KIXYPNK_CRLF :                109D C |  KIXYPNK_CS :                  1094 C |
 KN2K :                        0C31 C |  KN4HK :                       0CB9 C |
 KN4KCRLF :                    0CCF C |  KRNHL :                       1394 C |
 KY_FLG :                     0BF39 C |  LANCH1 :                       26C C |
 LANCH2 :                       280 C |  LANCH3 :                       296 C |
 LANCH4 :                       2B5 C |  LANCH5 :                       2D6 C |
 LANCH6 :                       2EA C |  LAUNCHER :                     219 C |
 LD1OP :                       0A15 C |  LD1_BASE :                    1E4C C |
*LDA_SP :                      1E47 C |  LDA_SPE :                     1E4C C |
 LDDRSTR :                     136A C |  LDDSTR :                      1345 C |
 LDIRSTR :                     1356 C |  LDISTR :                      1334 C |
 LDNR_C :                      1FE9 C |  LDNR_N :                         7 - |
 LDNR_T :                      1FE2 C |  LDSTR :                       1292 C |
 LD_A_KBCK :                    9E1 C |  LD_A_KDEK :                    9EF C |
 LD_A_KXXK :                    9E4 C | *LD_BC_N4 :                    1F1C C |
 LD_BC_N40 :                   1F22 C |  LD_BC_N41 :                   1F33 C |
 LD_BC_N42 :                   1F3A C |  LD_DE_N4 :                    1F45 C |
 LD_E2_TBL :                   1E23 C |  LD_E2_TBL1 :                  1E2A C |
 LD_E2_TBL2 :                  1E2F C |  LD_E2_TBL3 :                  1E33 C |
 LD_E2_TBLE :                  1E3A C |  LD_EN1 :                         7 - |
 LD_EN2 :                         5 - |  LD_EN3 :                         4 - |
 LD_EN4 :                         7 - |  LD_HL_N4 :                    1F4D C |
 LD_IX_N4 :                    1F62 C |  LD_IX_N40 :                   1F64 C |
 LD_IX_N42 :                   1F75 C |  LD_IY_N4 :                    1F7C C |
 LD_KBCK_A :                    9F4 C |  LD_KDEK_A :                    9FD C |
 LD_KXXK_A :                    9F7 C |  LD_R13 :                      1EC5 C |
 LD_R17 :                      1EC0 C |  LD_R171 :                     1EC2 C |
 LD_R25 :                      1EF3 C |  LD_R251 :                     1EF7 C |
 LD_R26 :                      1ECE C |  LD_R27 :                      1EC9 C |
 LD_R33 :                      1EEE C |  LD_R34 :                      1EE1 C |
 LD_R35 :                      1EAF C |  LD_R36 :                      1EE6 C |
 LD_R361 :                     1EE9 C |  LD_R37 :                      1ED3 C |
 LD_R371 :                     1ED6 C |  LD_R372 :                     1ED9 C |
 LD_RRN :                         8 - |  LD_RR_ :                      1E42 C |
 LD_RXYN_SP :                    0A - |  LD_R_JT :                     1E53 C |
 LD_R_NN_E :                    78F C |  LD_R_NN_S :                    787 C |
 LD_XYNLN :                    1FB6 C |  LF :                            0A - |
 LF_OUT :                      1A8D C |  LH0 :                         15ED C |
*LH1 :                         15F4 C |  LH2 :                         15F8 C |
 LH3 :                         1600 C |  LHI0 :                        1605 C |
 LHI1 :                        1628 C |  LHI2 :                        163A C |
 LHI20 :                       1639 C |  LHI3 :                        163C C |
 LHIE :                        164C C |  LHS0 :                        1655 C |
 LHS1 :                        1672 C |  LHS2 :                        1684 C |
 LHS20 :                       1685 C |  LHS3 :                        1687 C |
 LHSE :                        16A1 C |  LHSR :                        16A7 C |
 LINE_ASM :                    1A26 C |  LINE_BUF :                   0BFCE C |
*LISTON :                         1 - |  LOADH :                       15D0 C |
 LOGOP2STR :                   13FF C |  LOGOP3STR :                   1413 C |
 LOG_OP_E :                     799 C |  LOG_OP_S :                     78F C |
 LOOP_DEC :                    2937 C |  LOOP_M8 :                     29D2 C |
 LOP_GNUM :                    2563 C |  LST_PRG :                      249 C |
 LST_PRG1 :                     24C C |  L_B2 :                         3FB C |
*MACEXP :                         7 - |  MAS_1 :                        96E C |
 MAS_2 :                        97F C |  MAS_3 :                        98B C |
 MC2_77 :                      1FB1 C |  MC_END :                      2104 C |
 MC_END2 :                     2123 C |  MC_END3 :                     2216 C |
*MC_END4 :                     2443 C |  MC_END41 :                    2439 C |
 MC_SIZE :                    0BF43 C |  MEET_DD :                      719 C |
 MEET_ED :                      73B C |  MEET_OP1 :                     757 C |
 MEET_OP2 :                     762 C |  MEET_OP3 :                     76D C |
 MEET_OP4 :                     778 C |  MKMC_SH :                     1CC9 C |
 MKMC_SHED :                   1CD9 C |  MKOPCSTR :                    1157 C |
 MKREL_STR :                   1106 C |  MK_2NDOPR :                   0A21 C |
 MK_2NDOPR1 :                  0A2B C |  MK_ADR_STR :                   958 C |
 MK_BITR :                     0DA8 C |  MK_BITR_STR :                 0DC0 C |
 MK_E1 :                       20EB C |  MK_E11 :                      210A C |
 MK_E2 :                       2175 C | *MK_E3 :                       1B23 C |
 MK_KIXPNK :                   0E9C C |  MK_KIXYPNK :                  10A3 C |
*MK_KIYPNK :                   0EA0 C |  MK_KN4K :                     10FD C |
 MK_KRK :                      1191 C |  MK_KRKCS :                    1199 C |
 MK_KRK_1 :                    118E C |  MK_N2CRLF :                   10E2 C |
 MK_N4CRLF :                   10E8 C |  MK_RCS :                      11AA C |
 MK_RESR :                     0DB1 C |  MK_RLCR :                     0D69 C |
 MK_RLR :                      0D7B C |  MK_RRCR :                     0D72 C |
 MK_RRR :                      0D84 C |  MK_SLAR :                     0D8D C |
 MK_SRAR :                     0D96 C |  MK_SRLR :                     0D9F C |
 MK_STR :                      10CD C | *MOMCPU :                        80 - |
*MOMCPUNAME :                 "Z80" - |  MSTACK_SIZE :                   40 - |
 MUL_10 :                       339 C |  MUL_8 :                       29CD C |
 M_NUM :                          5 - |  NEGSTR :                      1325 C |
*NESTMAX :                      100 - |  NEXT_ASM :                    1A44 C |
 NEXT_BC1 :                     54D C |  NEXT_BC10 :                    627 C |
 NEXT_BC11 :                    634 C |  NEXT_BC111 :                   649 C |
 NEXT_BC2 :                     570 C |  NEXT_BC21 :                    57E C |
 NEXT_BC22 :                    599 C | *NEXT_BC221 :                   597 C |
 NEXT_BC222 :                   591 C |  NEXT_BC3 :                     5B1 C |
 NEXT_BC4 :                     5C6 C |  NEXT_BC5 :                     5DD C |
 NEXT_BC6 :                     5D4 C |  NEXT_BC7 :                     5F1 C |
 NEXT_BC8 :                     600 C |  NEXT_BC9 :                     613 C |
 NEXT_CHAR :                   260A C |  NOPSTR :                      12D0 C |
 NO_API :                      2779 C |  NO_CR :                          1 - |
 NO_LF :                          2 - |  NO_NUM :                      25A0 C |
 NO_OPERATE :                  2778 C |  NO_RAM_AREA :                  6C7 C |
 NO_RST38_MSG :                2881 C |  NO_UPPER :                       4 - |
 NUMLEN :                         7 - |  NUMPLUS :                     10BD C |
 NUM_STRING :                 0BFF1 C |  NXCHR :                       2614 C |
 NXT_A1 :                      24F6 C |  NXT_A2 :                      24D2 C |
 NXT_A21 :                     24D9 C |  NXT_A22 :                     24DE C |
 NXT_A3 :                      24E1 C |  NXT_A31 :                     24E8 C |
 NXT_A4 :                      24F1 C |  NXT_SR :                      241C C |
 N_END :                       2553 C | *OKRAM :                       21F6 C |
 OK_MATCH :                    254E C |  ONLY_NUM :                    2518 C |
 OPC_CD :                     0BF21 C |  OPERAND_CDS :                 19B1 C |
 OPE_CDS :                     1894 C |  OPNMSG :                      2BAD C |
 OPR1_CD :                    0BF22 C |  OPR2_CD :                    0BF23 C |
 OPR_CD1 :                     1A11 C |  OPR_NUM25 :                  0BF24 C |
 OPR_NUM33 :                  0BF2B C |  OPR_NUM34 :                  0BF29 C |
 OPR_NUM35 :                  0BF26 C |  OPR_NUM36 :                  0BF2A C |
 OPR_NUM37 :                  0BF28 C |  OP_ERR :                      0DBA C |
 ORSTR :                       12B2 C |  OTDRSTR :                     1379 C |
 OTH_1OP_E :                   11E3 C |  OTH_1OP_S :                   11D6 C |
 OTH_1OP_TBL :                 13E5 C |  OTIRSTR :                     1365 C |
 OUTDSTR :                     1351 C |  OUTISTR :                     1340 C |
 OUTSTR :                      12FC C | *PADDING :                        1 - |
 POPSTR :                      12C0 C |  POP_PUSHRP :                  13DD C |
 POP_RP_E :                    1203 C |  POP_RP_S :                    11FF C |
 POTB_CST :                    4C00 - | *POTB_TOP :                    4C00 - |
 POTB_WST :                    4C03 - |  PP_BASE :                     23A4 C |
 PP_IXIY :                        2 - |  PP_IXY :                      23A2 C |
 PP_NO :                          6 - |  PP_TBL :                      239E C |
 PP_TBLE :                     23A4 C |  PROMPT :                      2BE6 C |
 PRTDMP :                      1AF9 C |  PSIOAC :                         1 - |
 PSIOAD :                         0 - |  PSIOBC :                         3 - |
*PSIOBD :                         2 - |  PUSHSTR :                     12C4 C |
 PUSH_RP_E :                   1207 C |  PUSH_RP_S :                   1203 C |
 RAMSIZ :                      4000 - |  RAM_B :                       8000 - |
 RAM_E :                      0BFFF - |  RD0 :                         180B C |
 RD1 :                         1843 C |  RD10 :                        1831 C |
 RD101 :                       1827 C |  RD20 :                        1850 C |
 RDHEX :                       271D C |  RDSA :                        2C85 C |
 RDSAX :                       2CAA C |  RDSBC :                       2C89 C |
 RDSBCX :                      2CB0 C |  RDSDE :                       2C8F C |
 RDSDEX :                      2CB6 C |  RDSF :                        2C9B C |
 RDSFX :                       2CC2 C |  RDSFX_H :                       2C - |
 RDSFX_L :                      0C2 - |  RDSF_H :                        2C - |
 RDSF_L :                        9B - |  RDSHL :                       2C95 C |
 RDSHLX :                      2CBC C |  RDSI :                        2CD1 C |
 RDSIX :                       2CA0 C |  RDSIY :                       2CA5 C |
 RDSPC :                       2CCC C |  RDSR :                        2CD5 C |
 RDSSP :                       2CC7 C |  RDTAB :                       2C30 C |
 RDUMP :                       1808 C |  RECORR :                      2602 C |
 RECORR1 :                     2604 C |  RECORRECT :                   25DD C |
 RECTYP :                     0BEDA C |  REG :                         1782 C |
 REGAF :                      0BEDC C |  REGAFX :                     0BEE4 C |
 REGBC :                      0BEDE C |  REGBCX :                     0BEE6 C |
 REGDE :                      0BEE0 C |  REGDEX :                     0BEE8 C |
 REGHL :                      0BEE2 C |  REGHLX :                     0BEEA C |
 REGI :                       0BEF4 C |  REGIX :                      0BEEC C |
 REGIY :                      0BEEE C |  REGPC :                      0BEF2 C |
 REGR :                       0BEF5 C |  REGSP :                      0BEF0 C |
 REG_B :                      0BEDC C | *REG_E :                      0BEF6 C |
 REG_XY :                     0BF3F C | *RELAXED :                        0 - |
 REL_ADR_C :                    665 C |  REPEAT_TRACE :                28D0 C |
 RESSTR :                      1321 C |  RES_MCB :                     1B80 C |
 RES_XYT :                     1B88 C |  RETCC_TBLE :                   6D1 C |
 RETCC_TBLS :                   6C9 C |  RETISTR :                     137E C |
 RETNSTR :                     1383 C |  RETSTR :                      127A C |
 RET_CD :                      228F C |  RET_NO :                      2287 C |
 RG0 :                         178F C |  RG1 :                         1793 C |
 RG2 :                         17A3 C |  RG3 :                         17B2 C |
 RG4 :                         17D7 C |  RG5 :                         17E3 C |
 RG6 :                         17FF C |  RG7 :                         1802 C |
 RGE :                         1805 C |  RGR :                         1802 C |
 RH0 :                         2722 C |  RH1 :                         2735 C |
 RHE :                         2753 C |  RHE1 :                        275D C |
 RHLNNXY :                       0D - |  RLASTR :                      12DE C |
 RLCASTR :                     12D4 C |  RLCSTR :                      1303 C |
 RLC_OR :                         0 - |  RLDSTR :                      1330 C |
 RLSTR :                       130B C |  RL_OR :                         10 - |
 RNA :                         2DF3 C |  RNAF :                        1273 C |
 RNAFX :                       1276 C |  RNAX :                        2E0C C |
 RNB :                         2DF8 C |  RNBC :                        2DF5 C |
 RNBCX :                       2E0F C |  RNBX :                        2E13 C |
 RNC :                         2DFA C |  RNCX :                        2E16 C |
 RND :                         2DFF C |  RNDE :                        2DFC C |
 RNDEX :                       2E19 C |  RNDX :                        2E1D C |
 RNE :                         2E01 C |  RNEX :                        2E20 C |
 RNF :                         2E0A C |  RNFX :                        2E2D C |
 RNH :                         2E06 C |  RNHL :                        2E03 C |
 RNHLX :                       2E23 C |  RNHX :                        2E27 C |
 RNI :                         2E3C C |  RNIX :                        2E30 C |
 RNIY :                        2E33 C |  RNL :                         2E08 C |
 RNLX :                        2E2A C |  RNPC :                        2E39 C |
 RNR :                         2E3E C |  RNSP :                        2E36 C |
 RNTAB :                       2CD9 C |  RNTABA :                      2D23 C |
 RNTABB :                      2D31 C |  RNTABBC :                     2D45 C |
 RNTABC :                      2D53 C |  RNTABD :                      2D61 C |
 RNTABDE :                     2D75 C |  RNTABE :                      2D83 C |
 RNTABF :                      2D91 C |  RNTABH :                      2D9F C |
 RNTABHL :                     2DB3 C |  RNTABI :                      2DCF C |
 RNTABL :                      2DC1 C |  RNTABP :                      2DE3 C |
 RNTABS :                      2DEB C |  ROM_B :                          0 - |
 RRASTR :                      12E2 C |  RRCASTR :                     12D9 C |
 RRCSTR :                      1307 C |  RRC_OR :                         8 - |
 RRDSTR :                      132C C |  RRSTR :                       130E C |
 RR_OR :                         18 - |  RST30H_IN :                   275F C |
 RST38H_IN :                   27EC C |  RST38MSG :                    2905 C |
 RSTR_BPT :                    28E5 C |  RSTR_TPT :                    28D9 C |
 RSTSTR :                      128E C |  RST_CD :                      226B C |
 RST_NO :                      2263 C |  RST_TBLE :                     6EE C |
 RST_TBLS :                     6E6 C |  RXWAIT :                      2E43 C |
 RX_BCNT :                    0BF44 C |  RX_BFSIZ :                      40 - |
 RX_BRP :                     0BF45 C |  RX_BUF :                     0BF47 C |
 RX_BWP :                     0BF46 C |  RX_XFLG :                    0BFCB C |
 RX_XREQ :                    0BFCD C |  R_HL_NN :                     1E3A C |
 R_HL_NNE :                    1E47 C |  SADDR :                      0BED7 C |
 SAVEH :                       16AA C |  SBCSTR :                      12A6 C |
 SCFSTR :                      12EE C |  SCH_NEXT :                    253C C |
 SCH_OPECODE :                 252D C |  SCH_OPERAND1 :                2523 C |
 SCH_OPERAND1_1 :              2528 C |  SETBPADR :                     3AB C |
 SETBYTEC :                    1B08 C |  SETDSADR :                    1AFE C |
 SETM :                        155A C |  SETSTR :                      1388 C |
 SET_BITNO :                   0DD2 C |  SET_BP :                      154E C |
 SET_BP1 :                      389 C |  SET_MCB :                     1B62 C |
 SET_PEND :                      6F C |  SET_TM :                       470 C |
 SET_XYT :                     1B6A C |  SH0 :                         16B4 C |
 SH1 :                         16B8 C |  SH2 :                         16E0 C |
 SH3 :                         16E8 C |  SH4 :                         16FF C |
 SHE :                         16DD C |  SHEMSG :                      2BF6 C |
 SHL0 :                        1713 C |  SHL00 :                       1708 C |
 SHLI0 :                       173C C |  SHLS :                        1750 C |
 SHLS0 :                       176F C |  SH_0 :                        2533 C |
 SH_1 :                        2534 C |  SINIT :                        0DA C |
 SIOACD :                       0D1 C |  SIOACL :                         9 - |
 SIOBCD :                       0CC C |  SIOBCL :                         5 - |
*SIZE :                       0BEDB C |  SKIPSP :                      270D C |
 SKIP_CR :                     26FC C |  SKIP_LF :                     2705 C |
 SKIP_NEXT :                   2540 C |  SKIP_UPPER :                  26D3 C |
 SKPA_ADR :                    1A3E C |  SKP_OUTM :                    1AE1 C |
 SKP_RMSG :                    28A3 C |  SKP_SP :                      2591 C |
 SKP_TBP :                     1511 C |  SLASTR :                      1311 C |
 SLA_OR :                        20 - |  SM0 :                         1574 C |
 SM1 :                         1575 C |  SM2 :                         159B C |
 SM3 :                         15A6 C |  SM4 :                         15B1 C |
 SRASTR :                      1315 C |  SRA_OR :                        28 - |
 SRECER :                      2C23 C |  SRLSTR :                      1319 C |
 SRL_OR :                        38 - |  SR_BASE :                     23DA C |
 SR_IY1 :                      2430 C |  SR_LOOKFOR :                  2403 C |
 SR_NUM :                         8 - |  STACK :                      0BE90 - |
 STACKM :                     0BED0 - | *START :                          0 C |
 STPBRK_MSG :                  290F C |  STP_CHK :                      4F9 C |
 STROUT :                      2623 C |  ST_COPY :                     11B2 C |
 ST_MC1 :                      20FC C |  ST_MC11 :                     20FE C |
 ST_MUL8 :                     29D6 C |  SUBSTR :                      12A2 C |
 SV_NNKR :                     10B7 C |  SX_ERR :                      24A2 C |
 TADR_CHK :                     4E8 C |  TASM_ADR :                   0BF1D C |
 TC_CNT :                     0BF16 C |  TERR_MSG :                     65B C |
 THREE_OPTBL :                  799 C |  THREE_OPTBLE :                 79D C |
 THREE_OPTBL_E :                7A1 C | *TIME :                   "16:39:1" - |
 TMPB_ADR :                   0BF08 C |  TMPB_F :                     0BF06 C |
 TMPB_OP :                    0BF07 C |  TMPT :                       0BF18 C |
 TM_MODE :                    0BF15 C |  TM_MSG_0 :                     481 C |
 TM_MSG_I :                     490 C |  TM_MSG_S :                     496 C |
 TPT1_ADR :                   0BEF8 C |  TPT1_F :                     0BEF6 C |
 TPT1_OP :                    0BEF7 C |  TPT2_ADR :                   0BEFC C |
 TPT2_F :                     0BEFA C |  TPT2_OP :                    0BEFB C |
 TP_CHK1 :                     285C C |  TP_CHK2 :                     286B C |
 TP_CMD :                       49E C |  TP_MD_ON :                     4C2 C |
 TP_MODE :                    0BF14 C |  TP_MSG_0 :                     4D3 C |
 TP_MSG_OFF :                   4E2 C |  TP_MSG_ON :                    4DD C |
 TP_N1 :                        4AA C |  TP_N2 :                        4B3 C |
 TRACE_CMD :                    422 C |  TRACE_MSG :                   2918 C |
*TRUE :                           1 - |  TWO_OPTBL :                    787 C |
 TWO_OPTBL_E :                  799 C |  TXEMPTY :                        4 - |
 TXPEND :                        28 - |  TX_BCNT :                    0BF87 C |
 TX_BFSIZ :                      40 - |  TX_BRP :                     0BF88 C |
 TX_BUF :                     0BF8A C |  TX_BWP :                     0BF89 C |
 TX_DIRECT :                   2EEB C |  TX_NODAT :                    2EE9 C |
 TX_PEND :                    0BFCA C |  TX_WT :                       2EEE C |
 TX_XFLG :                    0BFCC C |  T_NO_KY :                     28BB C |
 T_OP1 :                        511 C |  T_OP11 :                       50B C |
 T_OP_CHK :                     52C C |  UPPER :                       2714 C |
 UP_BI :                        337 C | *VERSION :                     142F - |
 WORK_B :                     0BED0 - |  WORK_SIZE :                    130 - |
 WSTART :                       1BD C |  WSTART0 :                      190 C |
 WS_CHK1 :                     27B7 C |  WS_CHK2 :                     27C3 C |
 WS_CHK3 :                     27CF C |  WS_CHK4 :                     27DB C |
 WS_CHK5 :                     27E7 C |  XOFF :                          13 - |
 XON :                           11 - |  XORSTR :                      12AE C |
 XY_SRTP :                    0BF41 C |

   1179 symbols
     46 unused symbols

 AS V1.42 Beta [Bld 227] - Source File sbcz80mon_RevB04.asm - Page 3 - 1/5/2023 16:39:1


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.09 seconds assembly time

   8811 lines source file
      2 passes
      0 errors
      0 warnings
